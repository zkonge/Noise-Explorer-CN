File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 219, characters 7-8:
Warning: identifier cs rebound.
File "Xpsk1.noise.active.pv", line 219, character 36:
Warning: identifier h rebound.
File "Xpsk1.noise.active.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 254, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 260, character 6:
Warning: identifier e rebound.
File "Xpsk1.noise.active.pv", line 261, characters 6-7:
Warning: identifier ne rebound.
File "Xpsk1.noise.active.pv", line 262, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 265, character 6:
Warning: identifier s rebound.
File "Xpsk1.noise.active.pv", line 266, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 266, characters 26-27:
Warning: identifier ns rebound.
File "Xpsk1.noise.active.pv", line 267, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 268, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 269, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 269, characters 26-35:
Warning: identifier ciphertext rebound.
File "Xpsk1.noise.active.pv", line 270, characters 6-7:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 279, characters 6-7:
Warning: identifier re rebound.
File "Xpsk1.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 282, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 283, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 283, characters 26-27:
Warning: identifier ne rebound.
File "Xpsk1.noise.active.pv", line 283, characters 40-45:
Warning: identifier valid1 rebound.
File "Xpsk1.noise.active.pv", line 284, characters 6-7:
Warning: identifier rs rebound.
File "Xpsk1.noise.active.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 287, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 289, characters 7-8:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 362, characters 8-9:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 260, character 6:
Warning: identifier e rebound.
File "Xpsk1.noise.active.pv", line 261, characters 6-7:
Warning: identifier ne rebound.
File "Xpsk1.noise.active.pv", line 262, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 265, character 6:
Warning: identifier s rebound.
File "Xpsk1.noise.active.pv", line 266, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 266, characters 26-27:
Warning: identifier ns rebound.
File "Xpsk1.noise.active.pv", line 267, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 268, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 269, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 269, characters 26-35:
Warning: identifier ciphertext rebound.
File "Xpsk1.noise.active.pv", line 270, characters 6-7:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 219, characters 7-8:
Warning: identifier cs rebound.
File "Xpsk1.noise.active.pv", line 219, character 36:
Warning: identifier h rebound.
File "Xpsk1.noise.active.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 394, characters 8-9:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 279, characters 6-7:
Warning: identifier re rebound.
File "Xpsk1.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 282, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 283, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 283, characters 26-27:
Warning: identifier ne rebound.
File "Xpsk1.noise.active.pv", line 283, characters 40-45:
Warning: identifier valid1 rebound.
File "Xpsk1.noise.active.pv", line 284, characters 6-7:
Warning: identifier rs rebound.
File "Xpsk1.noise.active.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 287, characters 7-8:
Warning: identifier ss rebound.
File "Xpsk1.noise.active.pv", line 289, characters 7-8:
Warning: identifier hs rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 209, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "Xpsk1.noise.active.pv", line 219, characters 7-8:
Warning: identifier cs rebound.
File "Xpsk1.noise.active.pv", line 219, character 36:
Warning: identifier h rebound.
File "Xpsk1.noise.active.pv", line 254, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_409: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_409));
    (
        {6}let e_410: keypair = keypairpack(empty,empty) in
        {7}let v_411: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {8}let rs_412: key = getpublickey((if not-caught-fail(v_411) then keypairpack(validkey(v_411),key_s(bob)) else fail-any)) in
        {9}let re_413: key = empty in
        {10}let v_414: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_415: key = catch-fail(v_414) in
        {12}let v_416: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_417: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_414) then (if not-caught-fail(v_415) then (if not-caught-fail(v_416) then symmetricstatepack(v_416,v_415,v_414) else fail-any) else fail-any) else fail-any))) in
        {14}let v_418: symmetricstate = catch-fail((if success?((if not-caught-fail(v_414) then (if not-caught-fail(v_415) then (if not-caught-fail(v_416) then symmetricstatepack(v_416,v_415,v_414) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_417) && success?(is-true(success?(1-proj-3-tuple(v_417))))) then symmetricstatepack(1-proj-3-tuple(v_417),2-proj-3-tuple(v_417),hash(3-proj-3-tuple(v_417),empty)) else fail-any) else fail-any)) in
        {15}let v_419: bitstring = catch-fail(symmetricstateunpack(v_418)) in
        {16}let v_420: symmetricstate = catch-fail((if (not-caught-fail(v_419) && success?(is-true(success?(1-proj-3-tuple(v_419))))) then symmetricstatepack(1-proj-3-tuple(v_419),2-proj-3-tuple(v_419),hash(3-proj-3-tuple(v_419),rs_412)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_418) then (if not-caught-fail(v_420) then handshakestatepack(v_420,s_409,e_410,rs_412,re_413,key_psk(alice,bob),true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {87}get statestore(=alice,=bob,=sid,statepack_a(hs_421: handshakestate)) in
        {19}let v_422: bitstring = catch-fail(handshakestateunpack(hs_421)) in
        {20}let v_423: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_424: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_425: keypair = catch-fail((if not-caught-fail(v_424) then keypairpack(validkey(v_424),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_426: bitstring = catch-fail(getpublickey(v_425)) in
        {24}let v_427: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_422))) in
        {25}let v_428: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_422)) then (if (not-caught-fail(v_427) && success?(is-true(success?(1-proj-3-tuple(v_427))))) then symmetricstatepack(1-proj-3-tuple(v_427),2-proj-3-tuple(v_427),hash(3-proj-3-tuple(v_427),v_426)) else fail-any) else fail-any)) in
        {26}let v_429: bitstring = catch-fail(symmetricstateunpack(v_428)) in
        {27}let v_430: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_429),getpublickey(v_425))) in
        {28}let v_431: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_429),getpublickey(v_425))) in
        {29}let v_432: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_429),getpublickey(v_425))) in
        {30}let v_433: bitstring = catch-fail((if (success?(getpublickey(v_425)) && success?(2-proj-3-tuple(v_429))) then (if not-caught-fail(v_430) then (if not-caught-fail(v_431) then (if not-caught-fail(v_432) then (v_430,v_431,v_432) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_434: symmetricstate = catch-fail((if success?(getpublickey(v_425)) then (if (not-caught-fail(v_429) && success?(is-true(success?(1-proj-3-tuple(v_429))))) then (if (not-caught-fail(v_433) && success?(is-true(success?(1-proj-3-tuple(v_433))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_433)) then cipherstatepack(2-proj-3-tuple(v_433),minnonce) else fail-any),1-proj-3-tuple(v_433),3-proj-3-tuple(v_429)) else fail-any) else fail-any) else fail-any)) in
        {32}let v_435: bitstring = catch-fail(keypairunpack(v_425)) in
        {33}let v_436: bitstring = catch-fail(symmetricstateunpack(v_434)) in
        {34}let v_437: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_436),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_435) && success?(is-true(success?(1-proj-2-tuple(v_435))))) then dhexp(2-proj-2-tuple(v_435),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {35}let v_438: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_436),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_435) && success?(is-true(success?(1-proj-2-tuple(v_435))))) then dhexp(2-proj-2-tuple(v_435),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {36}let v_439: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_436),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_435) && success?(is-true(success?(1-proj-2-tuple(v_435))))) then dhexp(2-proj-2-tuple(v_435),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {37}let v_440: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_435) && success?(is-true(success?(1-proj-2-tuple(v_435))))) then dhexp(2-proj-2-tuple(v_435),4-proj-7-tuple(v_422)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_436))) then (if not-caught-fail(v_437) then (if not-caught-fail(v_438) then (if not-caught-fail(v_439) then (v_437,v_438,v_439) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {38}let v_441: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_435) && success?(is-true(success?(1-proj-2-tuple(v_435))))) then dhexp(2-proj-2-tuple(v_435),4-proj-7-tuple(v_422)) else fail-any) else fail-any)) then (if (not-caught-fail(v_436) && success?(is-true(success?(1-proj-3-tuple(v_436))))) then (if (not-caught-fail(v_440) && success?(is-true(success?(1-proj-3-tuple(v_440))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_440)) then cipherstatepack(2-proj-3-tuple(v_440),minnonce) else fail-any),1-proj-3-tuple(v_440),3-proj-3-tuple(v_436)) else fail-any) else fail-any) else fail-any)) in
        {39}let v_442: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {40}let v_443: keypair = catch-fail((if not-caught-fail(v_442) then keypairpack(validkey(v_442),key_s(alice)) else fail-any)) in
        {41}let v_444: bitstring = catch-fail(symmetricstateunpack(v_441)) in
        {42}let v_445: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_444))) in
        {43}let v_446: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_445),2-proj-2-tuple(v_445),3-proj-3-tuple(v_444),getpublickey(v_443))) in
        {44}let v_447: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_444))) in
        {45}let v_448: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_445))) && success?(1-proj-3-tuple(v_444))) then (if (not-caught-fail(v_447) && success?(is-true(success?(1-proj-2-tuple(v_447))))) then cipherstatepack(1-proj-2-tuple(v_447),increment_nonce(2-proj-2-tuple(v_445))) else fail-any) else fail-any)) in
        {46}let v_449: bitstring = catch-fail((if (success?(getpublickey(v_443)) && (success?(3-proj-3-tuple(v_444)) && success?(1-proj-3-tuple(v_444)))) then (if (not-caught-fail(v_445) && success?(is-true(success?(1-proj-2-tuple(v_445))))) then (if not-caught-fail(v_446) then (if not-caught-fail(v_448) then (v_448,v_446) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {47}let v_450: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_449),2-proj-3-tuple(v_444),3-proj-3-tuple(v_444)))) in
        {48}let v_451: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_449)) && success?(symmetricstatepack(1-proj-2-tuple(v_449),2-proj-3-tuple(v_444),3-proj-3-tuple(v_444)))) then (if (not-caught-fail(v_450) && success?(is-true(success?(1-proj-3-tuple(v_450))))) then symmetricstatepack(1-proj-3-tuple(v_450),2-proj-3-tuple(v_450),hash(3-proj-3-tuple(v_450),2-proj-2-tuple(v_449))) else fail-any) else fail-any)) in
        {49}let v_452: bitstring = catch-fail((if success?(getpublickey(v_443)) then (if (not-caught-fail(v_444) && success?(is-true(success?(1-proj-3-tuple(v_444))))) then (if (not-caught-fail(v_449) && success?(is-true(success?(1-proj-2-tuple(v_449))))) then (if not-caught-fail(v_451) then (v_451,2-proj-2-tuple(v_449)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {50}let v_453: bitstring = catch-fail(keypairunpack(v_443)) in
        {51}let v_454: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_452))) in
        {52}let v_455: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_454),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then dhexp(2-proj-2-tuple(v_453),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {53}let v_456: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_454),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then dhexp(2-proj-2-tuple(v_453),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {54}let v_457: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_454),(if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then dhexp(2-proj-2-tuple(v_453),4-proj-7-tuple(v_422)) else fail-any) else fail-any))) in
        {55}let v_458: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then dhexp(2-proj-2-tuple(v_453),4-proj-7-tuple(v_422)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_454))) then (if not-caught-fail(v_455) then (if not-caught-fail(v_456) then (if not-caught-fail(v_457) then (v_455,v_456,v_457) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {56}let v_459: symmetricstate = catch-fail((if (success?((if success?(4-proj-7-tuple(v_422)) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then dhexp(2-proj-2-tuple(v_453),4-proj-7-tuple(v_422)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_452))) then (if (not-caught-fail(v_454) && success?(is-true(success?(1-proj-3-tuple(v_454))))) then (if (not-caught-fail(v_458) && success?(is-true(success?(1-proj-3-tuple(v_458))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_458)) then cipherstatepack(2-proj-3-tuple(v_458),minnonce) else fail-any),1-proj-3-tuple(v_458),3-proj-3-tuple(v_454)) else fail-any) else fail-any) else fail-any)) in
        {57}let v_460: bitstring = catch-fail(symmetricstateunpack(v_459)) in
        {58}let v_461: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_460),6-proj-7-tuple(v_422))) in
        {59}let v_462: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_460),6-proj-7-tuple(v_422))) in
        {60}let v_463: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_460),6-proj-7-tuple(v_422))) in
        {61}let v_464: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_422)) && success?(2-proj-3-tuple(v_460))) then (if not-caught-fail(v_461) then (if not-caught-fail(v_462) then (if not-caught-fail(v_463) then (v_461,v_462,v_463) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {62}let v_465: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_460),1-proj-3-tuple(v_464),3-proj-3-tuple(v_460)))) in
        {63}let v_466: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_464)) && success?(symmetricstatepack(1-proj-3-tuple(v_460),1-proj-3-tuple(v_464),3-proj-3-tuple(v_460)))) then (if (not-caught-fail(v_465) && success?(is-true(success?(1-proj-3-tuple(v_465))))) then symmetricstatepack(1-proj-3-tuple(v_465),2-proj-3-tuple(v_465),hash(3-proj-3-tuple(v_465),2-proj-3-tuple(v_464))) else fail-any) else fail-any))) in
        {64}let v_467: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_422)) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then (if (not-caught-fail(v_464) && success?(is-true(success?(1-proj-3-tuple(v_464))))) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-3-tuple(v_466))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_464)) then cipherstatepack(3-proj-3-tuple(v_464),minnonce) else fail-any),1-proj-3-tuple(v_464),3-proj-3-tuple(v_466)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {65}let v_468: bitstring = catch-fail(symmetricstateunpack(v_467)) in
        {66}let v_469: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_468))) in
        {67}let v_470: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_469),2-proj-2-tuple(v_469),3-proj-3-tuple(v_468),msg_a(alice,bob,sid))) in
        {68}let v_471: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_468))) in
        {69}let v_472: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_469))) && success?(1-proj-3-tuple(v_468))) then (if (not-caught-fail(v_471) && success?(is-true(success?(1-proj-2-tuple(v_471))))) then cipherstatepack(1-proj-2-tuple(v_471),increment_nonce(2-proj-2-tuple(v_469))) else fail-any) else fail-any)) in
        {70}let v_473: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_468)) && success?(1-proj-3-tuple(v_468))) then (if (not-caught-fail(v_469) && success?(is-true(success?(1-proj-2-tuple(v_469))))) then (if not-caught-fail(v_470) then (if not-caught-fail(v_472) then (v_472,v_470) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {71}let v_474: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_473),2-proj-3-tuple(v_468),3-proj-3-tuple(v_468)))) in
        {72}let v_475: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_473)) && success?(symmetricstatepack(1-proj-2-tuple(v_473),2-proj-3-tuple(v_468),3-proj-3-tuple(v_468)))) then (if (not-caught-fail(v_474) && success?(is-true(success?(1-proj-3-tuple(v_474))))) then symmetricstatepack(1-proj-3-tuple(v_474),2-proj-3-tuple(v_474),hash(3-proj-3-tuple(v_474),2-proj-2-tuple(v_473))) else fail-any) else fail-any)) in
        {73}let v_476: bitstring = catch-fail((if (not-caught-fail(v_468) && success?(is-true(success?(1-proj-3-tuple(v_468))))) then (if (not-caught-fail(v_473) && success?(is-true(success?(1-proj-2-tuple(v_473))))) then (if not-caught-fail(v_475) then (v_475,2-proj-2-tuple(v_473)) else fail-any) else fail-any) else fail-any)) in
        {74}let v_477: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_476),v_443,v_425,4-proj-7-tuple(v_422),5-proj-7-tuple(v_422),6-proj-7-tuple(v_422),7-proj-7-tuple(v_422))) in
        {75}let v_478: bitstring = catch-fail(concat3(v_426,2-proj-2-tuple(v_452),2-proj-2-tuple(v_476))) in
        {76}let v_479: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_476))) in
        {77}let v_480: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_479),zero)) in
        {78}let v_481: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_479),zero)) in
        {79}let v_482: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_479),zero)) in
        {80}let v_483: bitstring = catch-fail((if success?(2-proj-3-tuple(v_479)) then (if not-caught-fail(v_480) then (if not-caught-fail(v_481) then (if not-caught-fail(v_482) then (v_480,v_481,v_482) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {81}let v_484: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_483)) then cipherstatepack(1-proj-3-tuple(v_483),minnonce) else fail-any)) in
        {82}let v_485: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_483)) then cipherstatepack(2-proj-3-tuple(v_483),minnonce) else fail-any)) in
        {83}let v_486: bitstring = catch-fail((if success?(1-proj-2-tuple(v_476)) then (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-3-tuple(v_483))))) then (if not-caught-fail(v_484) then (if not-caught-fail(v_485) then (1-proj-2-tuple(v_476),v_484,v_485) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {84}let (hs_487: handshakestate,message_a: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_422) && success?(is-true(success?(1-proj-7-tuple(v_422))))) then (if (not-caught-fail(v_423) && success?(is-true(success?(1-proj-3-tuple(v_423))))) then (if not-caught-fail(v_425) then (if not-caught-fail(v_426) then (if not-caught-fail(v_428) then (if not-caught-fail(v_434) then (if not-caught-fail(v_441) then (if not-caught-fail(v_443) then (if (not-caught-fail(v_452) && success?(is-true(success?(1-proj-2-tuple(v_452))))) then (if not-caught-fail(v_459) then (if not-caught-fail(v_467) then (if (not-caught-fail(v_476) && success?(is-true(success?(1-proj-2-tuple(v_476))))) then (if not-caught-fail(v_477) then (if not-caught-fail(v_478) then (if (not-caught-fail(v_486) && success?(is-true(success?(1-proj-3-tuple(v_486))))) then (v_477,v_478,2-proj-3-tuple(v_486),3-proj-3-tuple(v_486)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {85}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {86}out(pub, message_a)
    ) | (
        {88}event LeakPsk(phase0,alice,bob);
        {89}out(pub, key_psk(alice,bob))
    ) | (
        {90}phase 1;
        {91}event LeakPsk(phase1,alice,bob);
        {92}out(pub, key_psk(alice,bob))
    ) | (
        {93}event LeakS(phase0,alice);
        {94}out(pub, key_s(alice))
    ) | (
        {95}phase 1;
        {96}event LeakS(phase1,alice);
        {97}out(pub, key_s(alice))
    )
) | (
    {98}let s_488: keypair = keypairpack(empty,empty) in
    {99}out(pub, getpublickey(s_488));
    (
        {100}let e_489: keypair = keypairpack(empty,empty) in
        {101}let v_490: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {102}let rs_491: key = getpublickey((if not-caught-fail(v_490) then keypairpack(validkey(v_490),key_s(charlie)) else fail-any)) in
        {103}let re_492: key = empty in
        {104}let v_493: bitstring = catch-fail(hash(somename,empty)) in
        {105}let v_494: key = catch-fail(v_493) in
        {106}let v_495: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {107}let v_496: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_493) then (if not-caught-fail(v_494) then (if not-caught-fail(v_495) then symmetricstatepack(v_495,v_494,v_493) else fail-any) else fail-any) else fail-any))) in
        {108}let v_497: symmetricstate = catch-fail((if success?((if not-caught-fail(v_493) then (if not-caught-fail(v_494) then (if not-caught-fail(v_495) then symmetricstatepack(v_495,v_494,v_493) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_496) && success?(is-true(success?(1-proj-3-tuple(v_496))))) then symmetricstatepack(1-proj-3-tuple(v_496),2-proj-3-tuple(v_496),hash(3-proj-3-tuple(v_496),empty)) else fail-any) else fail-any)) in
        {109}let v_498: bitstring = catch-fail(symmetricstateunpack(v_497)) in
        {110}let v_499: symmetricstate = catch-fail((if (not-caught-fail(v_498) && success?(is-true(success?(1-proj-3-tuple(v_498))))) then symmetricstatepack(1-proj-3-tuple(v_498),2-proj-3-tuple(v_498),hash(3-proj-3-tuple(v_498),rs_491)) else fail-any)) in
        {111}let hs_500: handshakestate = (if not-caught-fail(v_497) then (if not-caught-fail(v_499) then handshakestatepack(v_499,s_488,e_489,rs_491,re_492,key_psk(alice,charlie),true) else fail-any) else fail-any) in
        {112}insert statestore(alice,charlie,sid,statepack_a(hs_500))
    ) | (
        {181}get statestore(=alice,=charlie,=sid,statepack_a(hs_501: handshakestate)) in
        {113}let v_502: bitstring = catch-fail(handshakestateunpack(hs_501)) in
        {114}let v_503: bitstring = catch-fail((empty,empty,empty)) in
        {115}let v_504: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {116}let v_505: keypair = catch-fail((if not-caught-fail(v_504) then keypairpack(validkey(v_504),key_e(alice,charlie,sid)) else fail-any)) in
        {117}let v_506: bitstring = catch-fail(getpublickey(v_505)) in
        {118}let v_507: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_502))) in
        {119}let v_508: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_502)) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-3-tuple(v_507))))) then symmetricstatepack(1-proj-3-tuple(v_507),2-proj-3-tuple(v_507),hash(3-proj-3-tuple(v_507),v_506)) else fail-any) else fail-any)) in
        {120}let v_509: bitstring = catch-fail(symmetricstateunpack(v_508)) in
        {121}let v_510: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_509),getpublickey(v_505))) in
        {122}let v_511: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_509),getpublickey(v_505))) in
        {123}let v_512: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_509),getpublickey(v_505))) in
        {124}let v_513: bitstring = catch-fail((if (success?(getpublickey(v_505)) && success?(2-proj-3-tuple(v_509))) then (if not-caught-fail(v_510) then (if not-caught-fail(v_511) then (if not-caught-fail(v_512) then (v_510,v_511,v_512) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {125}let v_514: symmetricstate = catch-fail((if success?(getpublickey(v_505)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-3-tuple(v_509))))) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-3-tuple(v_513))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_513)) then cipherstatepack(2-proj-3-tuple(v_513),minnonce) else fail-any),1-proj-3-tuple(v_513),3-proj-3-tuple(v_509)) else fail-any) else fail-any) else fail-any)) in
        {126}let v_515: bitstring = catch-fail(keypairunpack(v_505)) in
        {127}let v_516: bitstring = catch-fail(symmetricstateunpack(v_514)) in
        {128}let v_517: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_516),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then dhexp(2-proj-2-tuple(v_515),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {129}let v_518: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_516),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then dhexp(2-proj-2-tuple(v_515),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {130}let v_519: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_516),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then dhexp(2-proj-2-tuple(v_515),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {131}let v_520: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then dhexp(2-proj-2-tuple(v_515),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_516))) then (if not-caught-fail(v_517) then (if not-caught-fail(v_518) then (if not-caught-fail(v_519) then (v_517,v_518,v_519) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {132}let v_521: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-2-tuple(v_515))))) then dhexp(2-proj-2-tuple(v_515),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-3-tuple(v_516))))) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-3-tuple(v_520))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_520)) then cipherstatepack(2-proj-3-tuple(v_520),minnonce) else fail-any),1-proj-3-tuple(v_520),3-proj-3-tuple(v_516)) else fail-any) else fail-any) else fail-any)) in
        {133}let v_522: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {134}let v_523: keypair = catch-fail((if not-caught-fail(v_522) then keypairpack(validkey(v_522),key_s(alice)) else fail-any)) in
        {135}let v_524: bitstring = catch-fail(symmetricstateunpack(v_521)) in
        {136}let v_525: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_524))) in
        {137}let v_526: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_525),2-proj-2-tuple(v_525),3-proj-3-tuple(v_524),getpublickey(v_523))) in
        {138}let v_527: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_524))) in
        {139}let v_528: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_525))) && success?(1-proj-3-tuple(v_524))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then cipherstatepack(1-proj-2-tuple(v_527),increment_nonce(2-proj-2-tuple(v_525))) else fail-any) else fail-any)) in
        {140}let v_529: bitstring = catch-fail((if (success?(getpublickey(v_523)) && (success?(3-proj-3-tuple(v_524)) && success?(1-proj-3-tuple(v_524)))) then (if (not-caught-fail(v_525) && success?(is-true(success?(1-proj-2-tuple(v_525))))) then (if not-caught-fail(v_526) then (if not-caught-fail(v_528) then (v_528,v_526) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {141}let v_530: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_529),2-proj-3-tuple(v_524),3-proj-3-tuple(v_524)))) in
        {142}let v_531: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_529)) && success?(symmetricstatepack(1-proj-2-tuple(v_529),2-proj-3-tuple(v_524),3-proj-3-tuple(v_524)))) then (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-3-tuple(v_530))))) then symmetricstatepack(1-proj-3-tuple(v_530),2-proj-3-tuple(v_530),hash(3-proj-3-tuple(v_530),2-proj-2-tuple(v_529))) else fail-any) else fail-any)) in
        {143}let v_532: bitstring = catch-fail((if success?(getpublickey(v_523)) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-3-tuple(v_524))))) then (if (not-caught-fail(v_529) && success?(is-true(success?(1-proj-2-tuple(v_529))))) then (if not-caught-fail(v_531) then (v_531,2-proj-2-tuple(v_529)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {144}let v_533: bitstring = catch-fail(keypairunpack(v_523)) in
        {145}let v_534: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_532))) in
        {146}let v_535: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_534),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then dhexp(2-proj-2-tuple(v_533),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {147}let v_536: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_534),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then dhexp(2-proj-2-tuple(v_533),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {148}let v_537: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_534),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then dhexp(2-proj-2-tuple(v_533),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {149}let v_538: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then dhexp(2-proj-2-tuple(v_533),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_534))) then (if not-caught-fail(v_535) then (if not-caught-fail(v_536) then (if not-caught-fail(v_537) then (v_535,v_536,v_537) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {150}let v_539: symmetricstate = catch-fail((if (success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-2-tuple(v_533))))) then dhexp(2-proj-2-tuple(v_533),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_532))) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-3-tuple(v_534))))) then (if (not-caught-fail(v_538) && success?(is-true(success?(1-proj-3-tuple(v_538))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_538)) then cipherstatepack(2-proj-3-tuple(v_538),minnonce) else fail-any),1-proj-3-tuple(v_538),3-proj-3-tuple(v_534)) else fail-any) else fail-any) else fail-any)) in
        {151}let v_540: bitstring = catch-fail(symmetricstateunpack(v_539)) in
        {152}let v_541: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_540),6-proj-7-tuple(v_502))) in
        {153}let v_542: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_540),6-proj-7-tuple(v_502))) in
        {154}let v_543: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_540),6-proj-7-tuple(v_502))) in
        {155}let v_544: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_502)) && success?(2-proj-3-tuple(v_540))) then (if not-caught-fail(v_541) then (if not-caught-fail(v_542) then (if not-caught-fail(v_543) then (v_541,v_542,v_543) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {156}let v_545: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_540),1-proj-3-tuple(v_544),3-proj-3-tuple(v_540)))) in
        {157}let v_546: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_544)) && success?(symmetricstatepack(1-proj-3-tuple(v_540),1-proj-3-tuple(v_544),3-proj-3-tuple(v_540)))) then (if (not-caught-fail(v_545) && success?(is-true(success?(1-proj-3-tuple(v_545))))) then symmetricstatepack(1-proj-3-tuple(v_545),2-proj-3-tuple(v_545),hash(3-proj-3-tuple(v_545),2-proj-3-tuple(v_544))) else fail-any) else fail-any))) in
        {158}let v_547: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_502)) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-3-tuple(v_546))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_544)) then cipherstatepack(3-proj-3-tuple(v_544),minnonce) else fail-any),1-proj-3-tuple(v_544),3-proj-3-tuple(v_546)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {159}let v_548: bitstring = catch-fail(symmetricstateunpack(v_547)) in
        {160}let v_549: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_548))) in
        {161}let v_550: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_549),2-proj-2-tuple(v_549),3-proj-3-tuple(v_548),msg_a(alice,charlie,sid))) in
        {162}let v_551: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_548))) in
        {163}let v_552: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_549))) && success?(1-proj-3-tuple(v_548))) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-2-tuple(v_551))))) then cipherstatepack(1-proj-2-tuple(v_551),increment_nonce(2-proj-2-tuple(v_549))) else fail-any) else fail-any)) in
        {164}let v_553: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_548)) && success?(1-proj-3-tuple(v_548))) then (if (not-caught-fail(v_549) && success?(is-true(success?(1-proj-2-tuple(v_549))))) then (if not-caught-fail(v_550) then (if not-caught-fail(v_552) then (v_552,v_550) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {165}let v_554: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_553),2-proj-3-tuple(v_548),3-proj-3-tuple(v_548)))) in
        {166}let v_555: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_553)) && success?(symmetricstatepack(1-proj-2-tuple(v_553),2-proj-3-tuple(v_548),3-proj-3-tuple(v_548)))) then (if (not-caught-fail(v_554) && success?(is-true(success?(1-proj-3-tuple(v_554))))) then symmetricstatepack(1-proj-3-tuple(v_554),2-proj-3-tuple(v_554),hash(3-proj-3-tuple(v_554),2-proj-2-tuple(v_553))) else fail-any) else fail-any)) in
        {167}let v_556: bitstring = catch-fail((if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-3-tuple(v_548))))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-2-tuple(v_553))))) then (if not-caught-fail(v_555) then (v_555,2-proj-2-tuple(v_553)) else fail-any) else fail-any) else fail-any)) in
        {168}let v_557: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_556),v_523,v_505,4-proj-7-tuple(v_502),5-proj-7-tuple(v_502),6-proj-7-tuple(v_502),7-proj-7-tuple(v_502))) in
        {169}let v_558: bitstring = catch-fail(concat3(v_506,2-proj-2-tuple(v_532),2-proj-2-tuple(v_556))) in
        {170}let v_559: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_556))) in
        {171}let v_560: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_559),zero)) in
        {172}let v_561: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_559),zero)) in
        {173}let v_562: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_559),zero)) in
        {174}let v_563: bitstring = catch-fail((if success?(2-proj-3-tuple(v_559)) then (if not-caught-fail(v_560) then (if not-caught-fail(v_561) then (if not-caught-fail(v_562) then (v_560,v_561,v_562) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {175}let v_564: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_563)) then cipherstatepack(1-proj-3-tuple(v_563),minnonce) else fail-any)) in
        {176}let v_565: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_563)) then cipherstatepack(2-proj-3-tuple(v_563),minnonce) else fail-any)) in
        {177}let v_566: bitstring = catch-fail((if success?(1-proj-2-tuple(v_556)) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-3-tuple(v_559))))) then (if (not-caught-fail(v_563) && success?(is-true(success?(1-proj-3-tuple(v_563))))) then (if not-caught-fail(v_564) then (if not-caught-fail(v_565) then (1-proj-2-tuple(v_556),v_564,v_565) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {178}let (hs_567: handshakestate,message_a_568: bitstring,cs1_569: cipherstate,cs2_570: cipherstate) = (if (not-caught-fail(v_502) && success?(is-true(success?(1-proj-7-tuple(v_502))))) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then (if not-caught-fail(v_505) then (if not-caught-fail(v_506) then (if not-caught-fail(v_508) then (if not-caught-fail(v_514) then (if not-caught-fail(v_521) then (if not-caught-fail(v_523) then (if (not-caught-fail(v_532) && success?(is-true(success?(1-proj-2-tuple(v_532))))) then (if not-caught-fail(v_539) then (if not-caught-fail(v_547) then (if (not-caught-fail(v_556) && success?(is-true(success?(1-proj-2-tuple(v_556))))) then (if not-caught-fail(v_557) then (if not-caught-fail(v_558) then (if (not-caught-fail(v_566) && success?(is-true(success?(1-proj-3-tuple(v_566))))) then (v_557,v_558,2-proj-3-tuple(v_566),3-proj-3-tuple(v_566)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {179}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {180}out(pub, message_a_568)
    ) | (
        {182}event LeakPsk(phase0,alice,charlie);
        {183}out(pub, key_psk(alice,charlie))
    ) | (
        {184}phase 1;
        {185}event LeakPsk(phase1,alice,charlie);
        {186}out(pub, key_psk(alice,charlie))
    ) | (
        {187}event LeakS(phase0,alice);
        {188}out(pub, key_s(alice))
    ) | (
        {189}phase 1;
        {190}event LeakS(phase1,alice);
        {191}out(pub, key_s(alice))
    )
) | (
    {192}let v_571: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {193}let s_572: keypair = (if not-caught-fail(v_571) then keypairpack(validkey(v_571),key_s(bob)) else fail-any) in
    {194}out(pub, getpublickey(s_572));
    (
        {195}let e_573: keypair = keypairpack(empty,empty) in
        {196}let rs_574: key = empty in
        {197}let re_575: key = empty in
        {198}let v_576: bitstring = catch-fail(hash(somename,empty)) in
        {199}let v_577: key = catch-fail(v_576) in
        {200}let v_578: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {201}let v_579: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_576) then (if not-caught-fail(v_577) then (if not-caught-fail(v_578) then symmetricstatepack(v_578,v_577,v_576) else fail-any) else fail-any) else fail-any))) in
        {202}let v_580: symmetricstate = catch-fail((if success?((if not-caught-fail(v_576) then (if not-caught-fail(v_577) then (if not-caught-fail(v_578) then symmetricstatepack(v_578,v_577,v_576) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-3-tuple(v_579))))) then symmetricstatepack(1-proj-3-tuple(v_579),2-proj-3-tuple(v_579),hash(3-proj-3-tuple(v_579),empty)) else fail-any) else fail-any)) in
        {203}let v_581: bitstring = catch-fail(symmetricstateunpack(v_580)) in
        {204}let v_582: symmetricstate = catch-fail((if success?(getpublickey(s_572)) then (if (not-caught-fail(v_581) && success?(is-true(success?(1-proj-3-tuple(v_581))))) then symmetricstatepack(1-proj-3-tuple(v_581),2-proj-3-tuple(v_581),hash(3-proj-3-tuple(v_581),getpublickey(s_572))) else fail-any) else fail-any)) in
        {205}let hs_583: handshakestate = (if not-caught-fail(v_580) then (if not-caught-fail(v_582) then handshakestatepack(v_582,s_572,e_573,rs_574,re_575,key_psk(alice,bob),false) else fail-any) else fail-any) in
        {206}insert statestore(bob,alice,sid,statepack_a(hs_583))
    ) | (
        {276}get statestore(=bob,=alice,=sid,statepack_a(hs_584: handshakestate)) in
        {207}in(pub, message_a_585: bitstring);
        {208}let v_586: bitstring = catch-fail(handshakestateunpack(hs_584)) in
        {209}let v_587: bitstring = catch-fail(deconcat3(message_a_585)) in
        {210}let v_588: bool = catch-fail(true) in
        {211}let v_589: key = catch-fail(1-proj-3-tuple(v_587)) in
        {212}let v_590: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_586))) in
        {213}let v_591: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_586)) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-3-tuple(v_590))))) then symmetricstatepack(1-proj-3-tuple(v_590),2-proj-3-tuple(v_590),hash(3-proj-3-tuple(v_590),v_589)) else fail-any) else fail-any)) in
        {214}let v_592: bitstring = catch-fail(symmetricstateunpack(v_591)) in
        {215}let v_593: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_592),v_589)) in
        {216}let v_594: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_592),v_589)) in
        {217}let v_595: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_592),v_589)) in
        {218}let v_596: bitstring = catch-fail((if success?(2-proj-3-tuple(v_592)) then (if not-caught-fail(v_593) then (if not-caught-fail(v_594) then (if not-caught-fail(v_595) then (v_593,v_594,v_595) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {219}let v_597: symmetricstate = catch-fail((if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-3-tuple(v_592))))) then (if (not-caught-fail(v_596) && success?(is-true(success?(1-proj-3-tuple(v_596))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_596)) then cipherstatepack(2-proj-3-tuple(v_596),minnonce) else fail-any),1-proj-3-tuple(v_596),3-proj-3-tuple(v_592)) else fail-any) else fail-any)) in
        {220}let v_598: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_586))) in
        {221}let v_599: bitstring = catch-fail(symmetricstateunpack(v_597)) in
        {222}let v_600: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_599),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-2-tuple(v_598))))) then dhexp(2-proj-2-tuple(v_598),v_589) else fail-any) else fail-any))) in
        {223}let v_601: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_599),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-2-tuple(v_598))))) then dhexp(2-proj-2-tuple(v_598),v_589) else fail-any) else fail-any))) in
        {224}let v_602: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_599),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-2-tuple(v_598))))) then dhexp(2-proj-2-tuple(v_598),v_589) else fail-any) else fail-any))) in
        {225}let v_603: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-2-tuple(v_598))))) then dhexp(2-proj-2-tuple(v_598),v_589) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_599))) then (if not-caught-fail(v_600) then (if not-caught-fail(v_601) then (if not-caught-fail(v_602) then (v_600,v_601,v_602) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_604: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-2-tuple(v_598))))) then dhexp(2-proj-2-tuple(v_598),v_589) else fail-any) else fail-any)) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_603)) then cipherstatepack(2-proj-3-tuple(v_603),minnonce) else fail-any),1-proj-3-tuple(v_603),3-proj-3-tuple(v_599)) else fail-any) else fail-any) else fail-any)) in
        {227}let v_605: bitstring = catch-fail(symmetricstateunpack(v_604)) in
        {228}let v_606: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_605))) in
        {229}let v_607: aead = catch-fail(decrypt(1-proj-2-tuple(v_606),2-proj-2-tuple(v_606),3-proj-3-tuple(v_605),2-proj-3-tuple(v_587))) in
        {230}let v_608: bitstring = catch-fail(aeadunpack(v_607)) in
        {231}let v_609: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_605))) in
        {232}let v_610: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_606))) && success?(1-proj-3-tuple(v_605))) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-2-tuple(v_609))))) then cipherstatepack(1-proj-2-tuple(v_609),increment_nonce(2-proj-2-tuple(v_606))) else fail-any) else fail-any)) in
        {233}let v_611: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_587)) && (success?(3-proj-3-tuple(v_605)) && success?(1-proj-3-tuple(v_605)))) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-2-tuple(v_606))))) then (if not-caught-fail(v_607) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then (if not-caught-fail(v_610) then (v_610,3-proj-3-tuple(v_608),1-proj-3-tuple(v_608)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {234}let v_612: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_611),2-proj-3-tuple(v_605),3-proj-3-tuple(v_605)))) in
        {235}let v_613: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_587)) && success?(symmetricstatepack(1-proj-3-tuple(v_611),2-proj-3-tuple(v_605),3-proj-3-tuple(v_605)))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-3-tuple(v_612))))) then symmetricstatepack(1-proj-3-tuple(v_612),2-proj-3-tuple(v_612),hash(3-proj-3-tuple(v_612),2-proj-3-tuple(v_587))) else fail-any) else fail-any)) in
        {236}let v_614: bitstring = catch-fail((if success?(2-proj-3-tuple(v_587)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-3-tuple(v_611))))) then (if not-caught-fail(v_613) then (v_613,2-proj-3-tuple(v_611),3-proj-3-tuple(v_611)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {237}let v_615: key = catch-fail(2-proj-3-tuple(v_614)) in
        {238}let v_616: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_586))) in
        {239}let v_617: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_614))) in
        {240}let v_618: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_617),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then dhexp(2-proj-2-tuple(v_616),v_615) else fail-any) else fail-any))) in
        {241}let v_619: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_617),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then dhexp(2-proj-2-tuple(v_616),v_615) else fail-any) else fail-any))) in
        {242}let v_620: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_617),(if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then dhexp(2-proj-2-tuple(v_616),v_615) else fail-any) else fail-any))) in
        {243}let v_621: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then dhexp(2-proj-2-tuple(v_616),v_615) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_617))) then (if not-caught-fail(v_618) then (if not-caught-fail(v_619) then (if not-caught-fail(v_620) then (v_618,v_619,v_620) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {244}let v_622: symmetricstate = catch-fail((if (success?((if success?(2-proj-7-tuple(v_586)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then dhexp(2-proj-2-tuple(v_616),v_615) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_614))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-3-tuple(v_617))))) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_621)) then cipherstatepack(2-proj-3-tuple(v_621),minnonce) else fail-any),1-proj-3-tuple(v_621),3-proj-3-tuple(v_617)) else fail-any) else fail-any) else fail-any)) in
        {245}let v_623: bitstring = catch-fail(symmetricstateunpack(v_622)) in
        {246}let v_624: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_623),6-proj-7-tuple(v_586))) in
        {247}let v_625: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_623),6-proj-7-tuple(v_586))) in
        {248}let v_626: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_623),6-proj-7-tuple(v_586))) in
        {249}let v_627: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_586)) && success?(2-proj-3-tuple(v_623))) then (if not-caught-fail(v_624) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (v_624,v_625,v_626) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {250}let v_628: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_623),1-proj-3-tuple(v_627),3-proj-3-tuple(v_623)))) in
        {251}let v_629: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_627)) && success?(symmetricstatepack(1-proj-3-tuple(v_623),1-proj-3-tuple(v_627),3-proj-3-tuple(v_623)))) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-3-tuple(v_628))))) then symmetricstatepack(1-proj-3-tuple(v_628),2-proj-3-tuple(v_628),hash(3-proj-3-tuple(v_628),2-proj-3-tuple(v_627))) else fail-any) else fail-any))) in
        {252}let v_630: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_586)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-3-tuple(v_623))))) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-3-tuple(v_629))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_627)) then cipherstatepack(3-proj-3-tuple(v_627),minnonce) else fail-any),1-proj-3-tuple(v_627),3-proj-3-tuple(v_629)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_631: bitstring = catch-fail(symmetricstateunpack(v_630)) in
        {254}let v_632: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_631))) in
        {255}let v_633: aead = catch-fail(decrypt(1-proj-2-tuple(v_632),2-proj-2-tuple(v_632),3-proj-3-tuple(v_631),3-proj-3-tuple(v_587))) in
        {256}let v_634: bitstring = catch-fail(aeadunpack(v_633)) in
        {257}let v_635: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_631))) in
        {258}let v_636: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_632))) && success?(1-proj-3-tuple(v_631))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then cipherstatepack(1-proj-2-tuple(v_635),increment_nonce(2-proj-2-tuple(v_632))) else fail-any) else fail-any)) in
        {259}let v_637: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_587)) && (success?(3-proj-3-tuple(v_631)) && success?(1-proj-3-tuple(v_631)))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-2-tuple(v_632))))) then (if not-caught-fail(v_633) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if not-caught-fail(v_636) then (v_636,3-proj-3-tuple(v_634),1-proj-3-tuple(v_634)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {260}let v_638: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_637),2-proj-3-tuple(v_631),3-proj-3-tuple(v_631)))) in
        {261}let v_639: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_587)) && success?(symmetricstatepack(1-proj-3-tuple(v_637),2-proj-3-tuple(v_631),3-proj-3-tuple(v_631)))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then symmetricstatepack(1-proj-3-tuple(v_638),2-proj-3-tuple(v_638),hash(3-proj-3-tuple(v_638),3-proj-3-tuple(v_587))) else fail-any) else fail-any)) in
        {262}let v_640: bitstring = catch-fail((if success?(3-proj-3-tuple(v_587)) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-3-tuple(v_637))))) then (if not-caught-fail(v_639) then (v_639,2-proj-3-tuple(v_637),3-proj-3-tuple(v_637)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {263}let v_641: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {264}let v_642: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_640),2-proj-7-tuple(v_586),3-proj-7-tuple(v_586),v_615,v_589,6-proj-7-tuple(v_586),7-proj-7-tuple(v_586))) in
        {265}let v_643: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_640))) in
        {266}let v_644: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_643),zero)) in
        {267}let v_645: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_643),zero)) in
        {268}let v_646: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_643),zero)) in
        {269}let v_647: bitstring = catch-fail((if success?(2-proj-3-tuple(v_643)) then (if not-caught-fail(v_644) then (if not-caught-fail(v_645) then (if not-caught-fail(v_646) then (v_644,v_645,v_646) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {270}let v_648: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_647)) then cipherstatepack(1-proj-3-tuple(v_647),minnonce) else fail-any)) in
        {271}let v_649: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_647)) then cipherstatepack(2-proj-3-tuple(v_647),minnonce) else fail-any)) in
        {272}let v_650: bitstring = catch-fail((if success?(1-proj-3-tuple(v_640)) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-3-tuple(v_643))))) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then (1-proj-3-tuple(v_640),v_648,v_649) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {273}let (hs_651: handshakestate,plaintext_a: bitstring,valid: bool,cs1_652: cipherstate,cs2_653: cipherstate) = (if (not-caught-fail(v_586) && success?(is-true(success?(1-proj-7-tuple(v_586))))) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-3-tuple(v_587))))) then (if not-caught-fail(v_588) then (if not-caught-fail(v_589) then (if not-caught-fail(v_591) then (if not-caught-fail(v_597) then (if not-caught-fail(v_604) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (if not-caught-fail(v_615) then (if not-caught-fail(v_622) then (if not-caught-fail(v_630) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-3-tuple(v_640))))) then (if ((3-proj-3-tuple(v_614) && 3-proj-3-tuple(v_640)) && (v_615 = getpublickey((if not-caught-fail(v_641) then keypairpack(validkey(v_641),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_642) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then (v_642,2-proj-3-tuple(v_640),true,2-proj-3-tuple(v_650),3-proj-3-tuple(v_650)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {274}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {275}event RecvEnd(valid)
    ) | (
        {277}event LeakPsk(phase0,alice,bob);
        {278}out(pub, key_psk(alice,bob))
    ) | (
        {279}phase 1;
        {280}event LeakPsk(phase1,alice,bob);
        {281}out(pub, key_psk(alice,bob))
    ) | (
        {282}event LeakS(phase0,bob);
        {283}out(pub, key_s(bob))
    ) | (
        {284}phase 1;
        {285}event LeakS(phase1,bob);
        {286}out(pub, key_s(bob))
    )
) | (
    {287}let v_654: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {288}let s_655: keypair = (if not-caught-fail(v_654) then keypairpack(validkey(v_654),key_s(bob)) else fail-any) in
    {289}out(pub, getpublickey(s_655));
    (
        {290}let e_656: keypair = keypairpack(empty,empty) in
        {291}let rs_657: key = empty in
        {292}let re_658: key = empty in
        {293}let v_659: bitstring = catch-fail(hash(somename,empty)) in
        {294}let v_660: key = catch-fail(v_659) in
        {295}let v_661: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {296}let v_662: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_659) then (if not-caught-fail(v_660) then (if not-caught-fail(v_661) then symmetricstatepack(v_661,v_660,v_659) else fail-any) else fail-any) else fail-any))) in
        {297}let v_663: symmetricstate = catch-fail((if success?((if not-caught-fail(v_659) then (if not-caught-fail(v_660) then (if not-caught-fail(v_661) then symmetricstatepack(v_661,v_660,v_659) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then symmetricstatepack(1-proj-3-tuple(v_662),2-proj-3-tuple(v_662),hash(3-proj-3-tuple(v_662),empty)) else fail-any) else fail-any)) in
        {298}let v_664: bitstring = catch-fail(symmetricstateunpack(v_663)) in
        {299}let v_665: symmetricstate = catch-fail((if success?(getpublickey(s_655)) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-3-tuple(v_664))))) then symmetricstatepack(1-proj-3-tuple(v_664),2-proj-3-tuple(v_664),hash(3-proj-3-tuple(v_664),getpublickey(s_655))) else fail-any) else fail-any)) in
        {300}let hs_666: handshakestate = (if not-caught-fail(v_663) then (if not-caught-fail(v_665) then handshakestatepack(v_665,s_655,e_656,rs_657,re_658,key_psk(charlie,bob),false) else fail-any) else fail-any) in
        {301}insert statestore(bob,charlie,sid,statepack_a(hs_666))
    ) | (
        {371}get statestore(=bob,=charlie,=sid,statepack_a(hs_667: handshakestate)) in
        {302}in(pub, message_a_668: bitstring);
        {303}let v_669: bitstring = catch-fail(handshakestateunpack(hs_667)) in
        {304}let v_670: bitstring = catch-fail(deconcat3(message_a_668)) in
        {305}let v_671: bool = catch-fail(true) in
        {306}let v_672: key = catch-fail(1-proj-3-tuple(v_670)) in
        {307}let v_673: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_669))) in
        {308}let v_674: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_669)) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then symmetricstatepack(1-proj-3-tuple(v_673),2-proj-3-tuple(v_673),hash(3-proj-3-tuple(v_673),v_672)) else fail-any) else fail-any)) in
        {309}let v_675: bitstring = catch-fail(symmetricstateunpack(v_674)) in
        {310}let v_676: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_675),v_672)) in
        {311}let v_677: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_675),v_672)) in
        {312}let v_678: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_675),v_672)) in
        {313}let v_679: bitstring = catch-fail((if success?(2-proj-3-tuple(v_675)) then (if not-caught-fail(v_676) then (if not-caught-fail(v_677) then (if not-caught-fail(v_678) then (v_676,v_677,v_678) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {314}let v_680: symmetricstate = catch-fail((if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-3-tuple(v_675))))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_679)) then cipherstatepack(2-proj-3-tuple(v_679),minnonce) else fail-any),1-proj-3-tuple(v_679),3-proj-3-tuple(v_675)) else fail-any) else fail-any)) in
        {315}let v_681: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_669))) in
        {316}let v_682: bitstring = catch-fail(symmetricstateunpack(v_680)) in
        {317}let v_683: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_682),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then dhexp(2-proj-2-tuple(v_681),v_672) else fail-any) else fail-any))) in
        {318}let v_684: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_682),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then dhexp(2-proj-2-tuple(v_681),v_672) else fail-any) else fail-any))) in
        {319}let v_685: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_682),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then dhexp(2-proj-2-tuple(v_681),v_672) else fail-any) else fail-any))) in
        {320}let v_686: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then dhexp(2-proj-2-tuple(v_681),v_672) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_682))) then (if not-caught-fail(v_683) then (if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (v_683,v_684,v_685) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {321}let v_687: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then dhexp(2-proj-2-tuple(v_681),v_672) else fail-any) else fail-any)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-3-tuple(v_682))))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-3-tuple(v_686))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_686)) then cipherstatepack(2-proj-3-tuple(v_686),minnonce) else fail-any),1-proj-3-tuple(v_686),3-proj-3-tuple(v_682)) else fail-any) else fail-any) else fail-any)) in
        {322}let v_688: bitstring = catch-fail(symmetricstateunpack(v_687)) in
        {323}let v_689: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_688))) in
        {324}let v_690: aead = catch-fail(decrypt(1-proj-2-tuple(v_689),2-proj-2-tuple(v_689),3-proj-3-tuple(v_688),2-proj-3-tuple(v_670))) in
        {325}let v_691: bitstring = catch-fail(aeadunpack(v_690)) in
        {326}let v_692: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_688))) in
        {327}let v_693: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_689))) && success?(1-proj-3-tuple(v_688))) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-2-tuple(v_692))))) then cipherstatepack(1-proj-2-tuple(v_692),increment_nonce(2-proj-2-tuple(v_689))) else fail-any) else fail-any)) in
        {328}let v_694: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_670)) && (success?(3-proj-3-tuple(v_688)) && success?(1-proj-3-tuple(v_688)))) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-2-tuple(v_689))))) then (if not-caught-fail(v_690) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-3-tuple(v_691))))) then (if not-caught-fail(v_693) then (v_693,3-proj-3-tuple(v_691),1-proj-3-tuple(v_691)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {329}let v_695: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_694),2-proj-3-tuple(v_688),3-proj-3-tuple(v_688)))) in
        {330}let v_696: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_670)) && success?(symmetricstatepack(1-proj-3-tuple(v_694),2-proj-3-tuple(v_688),3-proj-3-tuple(v_688)))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then symmetricstatepack(1-proj-3-tuple(v_695),2-proj-3-tuple(v_695),hash(3-proj-3-tuple(v_695),2-proj-3-tuple(v_670))) else fail-any) else fail-any)) in
        {331}let v_697: bitstring = catch-fail((if success?(2-proj-3-tuple(v_670)) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-3-tuple(v_688))))) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-3-tuple(v_694))))) then (if not-caught-fail(v_696) then (v_696,2-proj-3-tuple(v_694),3-proj-3-tuple(v_694)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {332}let v_698: key = catch-fail(2-proj-3-tuple(v_697)) in
        {333}let v_699: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_669))) in
        {334}let v_700: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_697))) in
        {335}let v_701: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_700),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then dhexp(2-proj-2-tuple(v_699),v_698) else fail-any) else fail-any))) in
        {336}let v_702: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_700),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then dhexp(2-proj-2-tuple(v_699),v_698) else fail-any) else fail-any))) in
        {337}let v_703: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_700),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then dhexp(2-proj-2-tuple(v_699),v_698) else fail-any) else fail-any))) in
        {338}let v_704: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then dhexp(2-proj-2-tuple(v_699),v_698) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_700))) then (if not-caught-fail(v_701) then (if not-caught-fail(v_702) then (if not-caught-fail(v_703) then (v_701,v_702,v_703) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {339}let v_705: symmetricstate = catch-fail((if (success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then dhexp(2-proj-2-tuple(v_699),v_698) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_697))) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-3-tuple(v_700))))) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-3-tuple(v_704))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_704)) then cipherstatepack(2-proj-3-tuple(v_704),minnonce) else fail-any),1-proj-3-tuple(v_704),3-proj-3-tuple(v_700)) else fail-any) else fail-any) else fail-any)) in
        {340}let v_706: bitstring = catch-fail(symmetricstateunpack(v_705)) in
        {341}let v_707: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_706),6-proj-7-tuple(v_669))) in
        {342}let v_708: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_706),6-proj-7-tuple(v_669))) in
        {343}let v_709: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_706),6-proj-7-tuple(v_669))) in
        {344}let v_710: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_669)) && success?(2-proj-3-tuple(v_706))) then (if not-caught-fail(v_707) then (if not-caught-fail(v_708) then (if not-caught-fail(v_709) then (v_707,v_708,v_709) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {345}let v_711: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_706),1-proj-3-tuple(v_710),3-proj-3-tuple(v_706)))) in
        {346}let v_712: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_710)) && success?(symmetricstatepack(1-proj-3-tuple(v_706),1-proj-3-tuple(v_710),3-proj-3-tuple(v_706)))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then symmetricstatepack(1-proj-3-tuple(v_711),2-proj-3-tuple(v_711),hash(3-proj-3-tuple(v_711),2-proj-3-tuple(v_710))) else fail-any) else fail-any))) in
        {347}let v_713: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_669)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-3-tuple(v_706))))) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-3-tuple(v_710))))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-3-tuple(v_712))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_710)) then cipherstatepack(3-proj-3-tuple(v_710),minnonce) else fail-any),1-proj-3-tuple(v_710),3-proj-3-tuple(v_712)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {348}let v_714: bitstring = catch-fail(symmetricstateunpack(v_713)) in
        {349}let v_715: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {350}let v_716: aead = catch-fail(decrypt(1-proj-2-tuple(v_715),2-proj-2-tuple(v_715),3-proj-3-tuple(v_714),3-proj-3-tuple(v_670))) in
        {351}let v_717: bitstring = catch-fail(aeadunpack(v_716)) in
        {352}let v_718: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {353}let v_719: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_715))) && success?(1-proj-3-tuple(v_714))) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-2-tuple(v_718))))) then cipherstatepack(1-proj-2-tuple(v_718),increment_nonce(2-proj-2-tuple(v_715))) else fail-any) else fail-any)) in
        {354}let v_720: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_670)) && (success?(3-proj-3-tuple(v_714)) && success?(1-proj-3-tuple(v_714)))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then (if not-caught-fail(v_716) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if not-caught-fail(v_719) then (v_719,3-proj-3-tuple(v_717),1-proj-3-tuple(v_717)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {355}let v_721: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) in
        {356}let v_722: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_670)) && success?(symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-3-tuple(v_721))))) then symmetricstatepack(1-proj-3-tuple(v_721),2-proj-3-tuple(v_721),hash(3-proj-3-tuple(v_721),3-proj-3-tuple(v_670))) else fail-any) else fail-any)) in
        {357}let v_723: bitstring = catch-fail((if success?(3-proj-3-tuple(v_670)) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if not-caught-fail(v_722) then (v_722,2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {358}let v_724: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {359}let v_725: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_723),2-proj-7-tuple(v_669),3-proj-7-tuple(v_669),v_698,v_672,6-proj-7-tuple(v_669),7-proj-7-tuple(v_669))) in
        {360}let v_726: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_723))) in
        {361}let v_727: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_726),zero)) in
        {362}let v_728: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_726),zero)) in
        {363}let v_729: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_726),zero)) in
        {364}let v_730: bitstring = catch-fail((if success?(2-proj-3-tuple(v_726)) then (if not-caught-fail(v_727) then (if not-caught-fail(v_728) then (if not-caught-fail(v_729) then (v_727,v_728,v_729) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {365}let v_731: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_730)) then cipherstatepack(1-proj-3-tuple(v_730),minnonce) else fail-any)) in
        {366}let v_732: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_730)) then cipherstatepack(2-proj-3-tuple(v_730),minnonce) else fail-any)) in
        {367}let v_733: bitstring = catch-fail((if success?(1-proj-3-tuple(v_723)) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-3-tuple(v_726))))) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-3-tuple(v_730))))) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then (1-proj-3-tuple(v_723),v_731,v_732) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {368}let (hs_734: handshakestate,plaintext_a_735: bitstring,valid_736: bool,cs1_737: cipherstate,cs2_738: cipherstate) = (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-7-tuple(v_669))))) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then (if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (if not-caught-fail(v_674) then (if not-caught-fail(v_680) then (if not-caught-fail(v_687) then (if (not-caught-fail(v_697) && success?(is-true(success?(1-proj-3-tuple(v_697))))) then (if not-caught-fail(v_698) then (if not-caught-fail(v_705) then (if not-caught-fail(v_713) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-3-tuple(v_723))))) then (if ((3-proj-3-tuple(v_697) && 3-proj-3-tuple(v_723)) && (v_698 = getpublickey((if not-caught-fail(v_724) then keypairpack(validkey(v_724),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_725) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then (v_725,2-proj-3-tuple(v_723),true,2-proj-3-tuple(v_733),3-proj-3-tuple(v_733)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {369}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_735);
        {370}event RecvEnd(valid_736)
    ) | (
        {372}event LeakPsk(phase0,charlie,bob);
        {373}out(pub, key_psk(charlie,bob))
    ) | (
        {374}phase 1;
        {375}event LeakPsk(phase1,charlie,bob);
        {376}out(pub, key_psk(charlie,bob))
    ) | (
        {377}event LeakS(phase0,bob);
        {378}out(pub, key_s(bob))
    ) | (
        {379}phase 1;
        {380}event LeakS(phase1,bob);
        {381}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 199 rules. 80 rules in the queue.
400 rules inserted. The rule base contains 361 rules. 71 rules in the queue.
600 rules inserted. The rule base contains 560 rules. 122 rules in the queue.
800 rules inserted. The rule base contains 705 rules. 148 rules in the queue.
1000 rules inserted. The rule base contains 852 rules. 134 rules in the queue.
1200 rules inserted. The rule base contains 994 rules. 130 rules in the queue.
1400 rules inserted. The rule base contains 1111 rules. 149 rules in the queue.
1600 rules inserted. The rule base contains 1247 rules. 135 rules in the queue.
1800 rules inserted. The rule base contains 1411 rules. 154 rules in the queue.
2000 rules inserted. The rule base contains 1557 rules. 190 rules in the queue.
2200 rules inserted. The rule base contains 1608 rules. 182 rules in the queue.
2400 rules inserted. The rule base contains 1649 rules. 154 rules in the queue.
2600 rules inserted. The rule base contains 1695 rules. 127 rules in the queue.
2800 rules inserted. The rule base contains 1764 rules. 44 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826792836]),msg_a(alice,charlie,sid[!1 = @sid_826792836]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826792837) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826792838]),m_826792837))
Abbreviations:
sid_826793108 = sid[!1 = @sid_826793099]
sid_826793109 = sid[!1 = @sid_826793038]

1. The entry statestore(bob,alice,sid_826793108,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {206}.
table(statestore(bob,alice,sid_826793108,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m_826793107).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

5. By 3, the attacker may have the channel pub.
By 4, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

6. The entry statestore(alice,charlie,sid_826793109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {112}.
table(statestore(alice,charlie,sid_826793109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true)))).

7. The entry statestore(alice,charlie,sid_826793109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) that may be in a table by 6 may be read at get {181}.
The event SendMsg(alice,charlie,stagepack_a(sid_826793109),msg_a(alice,charlie,sid_826793109)) may be executed at {179}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109))) may be sent on channel pub at output {180}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109)))).

8. By 3, the attacker may have the channel pub.
By 7, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109)))).

9. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))).

10. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793109))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))).

11. Using the function g the attacker may obtain g.
attacker(g).

12. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

13. By 3, the attacker may have the channel pub.
By 12, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

14. By 13, the attacker may know key_s(charlie).
By 11, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(charlie),g).
attacker(dhexp_real(key_s(charlie),g)).

15. By 14, the attacker may know dhexp_real(key_s(charlie),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(charlie),g)).
attacker(validkey(dhexp_real(key_s(charlie),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_s(charlie),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)))).

22. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

23. By 13, the attacker may know key_s(charlie).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g)).
attacker(dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))).

24. By 18, the attacker may know hash(somename,empty).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))).
By 23, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))).
By 22, the attacker may know minnonce.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793109),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g)))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793109),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

28. The event LeakS(phase0,bob) may be executed at {282}.
So the message key_s(bob) may be sent on channel pub at output {283}.
mess(pub,key_s(bob)).

29. By 3, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

31. Using the function zero the attacker may obtain zero.
attacker(zero).

32. By 18, the attacker may know hash(somename,empty).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 30, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

36. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

37. By 3, the attacker may have the channel pub.
By 36, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

38. By 19, the attacker may know hash(hash(somename,empty),empty).
By 37, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

39. By 38, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 31, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero)).

40. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero)).

41. By 40, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
By 22, the attacker may know minnonce.
By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).

42. By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

44. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

45. By 44, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
By 22, the attacker may know minnonce.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
By 2, the attacker may know m_826793107.
Using the function encrypt the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107)).

46. By 31, the attacker may know zero.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
By 45, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107))).

47. By 3, the attacker may have the channel pub.
By 46, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107))).

48. The entry statestore(bob,alice,sid_826793108,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {276}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793107)) that may be sent on channel pub by 47 may be received at input {207}.
So event RecvMsg(bob,alice,stagepack_a(sid_826793108),m_826793107) may be executed at {274}.
end(RecvMsg(bob,alice,stagepack_a(sid_826793108),m_826793107)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826793112]),msg_a(alice,charlie,sid[!1 = @sid_826793112]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793113) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793114]),m_826793113))
goal reachable: begin(LeakS(phase0,alice)) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793118) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793119]),m_826793118))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826793122]),msg_a(alice,bob,sid[!1 = @sid_826793122]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793123) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793124]),m_826793123))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826793128]),msg_a(alice,bob,sid[!1 = @sid_826793128]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793129]),msg_a(alice,bob,sid[!1 = @sid_826793128])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826793176]),msg_a(alice,charlie,sid[!1 = @sid_826793176]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793177) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793178]),m_826793177))
Abbreviations:
sid_826793449 = sid[!1 = @sid_826793440]
sid_826793450 = sid[!1 = @sid_826793379]

1. The entry statestore(bob,alice,sid_826793449,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {206}.
table(statestore(bob,alice,sid_826793449,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m_826793448).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

5. By 3, the attacker may have the channel pub.
By 4, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

6. The entry statestore(alice,charlie,sid_826793450,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {112}.
table(statestore(alice,charlie,sid_826793450,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true)))).

7. The entry statestore(alice,charlie,sid_826793450,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) that may be in a table by 6 may be read at get {181}.
The event SendMsg(alice,charlie,stagepack_a(sid_826793450),msg_a(alice,charlie,sid_826793450)) may be executed at {179}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450))) may be sent on channel pub at output {180}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450)))).

8. By 3, the attacker may have the channel pub.
By 7, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450)))).

9. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))).

10. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793450))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))).

11. Using the function g the attacker may obtain g.
attacker(g).

12. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

13. By 3, the attacker may have the channel pub.
By 12, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

14. By 13, the attacker may know key_s(charlie).
By 11, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(charlie),g).
attacker(dhexp_real(key_s(charlie),g)).

15. By 14, the attacker may know dhexp_real(key_s(charlie),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(charlie),g)).
attacker(validkey(dhexp_real(key_s(charlie),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_s(charlie),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)))).

22. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

23. By 13, the attacker may know key_s(charlie).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g)).
attacker(dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))).

24. By 18, the attacker may know hash(somename,empty).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))).
By 23, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))).
By 22, the attacker may know minnonce.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793450),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g)))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793450),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

28. The event LeakS(phase0,bob) may be executed at {282}.
So the message key_s(bob) may be sent on channel pub at output {283}.
mess(pub,key_s(bob)).

29. By 3, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

31. Using the function zero the attacker may obtain zero.
attacker(zero).

32. By 18, the attacker may know hash(somename,empty).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 30, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

36. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

37. By 3, the attacker may have the channel pub.
By 36, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

38. By 19, the attacker may know hash(hash(somename,empty),empty).
By 37, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

39. By 38, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 31, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero)).

40. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero)).

41. By 40, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
By 22, the attacker may know minnonce.
By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).

42. By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

44. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

45. By 44, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
By 22, the attacker may know minnonce.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
By 2, the attacker may know m_826793448.
Using the function encrypt the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448)).

46. By 31, the attacker may know zero.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
By 45, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448))).

47. By 3, the attacker may have the channel pub.
By 46, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448))).

48. The entry statestore(bob,alice,sid_826793449,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {276}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793448)) that may be sent on channel pub by 47 may be received at input {207}.
So event RecvMsg(bob,alice,stagepack_a(sid_826793449),m_826793448) may be executed at {274}.
end(RecvMsg(bob,alice,stagepack_a(sid_826793449),m_826793448)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_848,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826793453]),msg_a(alice,charlie,sid[!1 = @sid_826793453]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793454) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793455]),m_826793454))
goal reachable: begin(LeakS(phase0,alice)) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793459) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793460]),m_826793459))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826793463]),msg_a(alice,bob,sid[!1 = @sid_826793463]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793464) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793465]),m_826793464))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826793469]),msg_a(alice,bob,sid[!1 = @sid_826793469]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793470]),msg_a(alice,bob,sid[!1 = @sid_826793469])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826793516]),msg_a(alice,charlie,sid[!1 = @sid_826793516]))) && begin(LeakPsk(phase0,alice,bob)) && attacker(m_826793517) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_826793518]),m_826793517))
Abbreviations:
sid_826793788 = sid[!1 = @sid_826793779]
sid_826793789 = sid[!1 = @sid_826793718]

1. The entry statestore(bob,alice,sid_826793788,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {206}.
table(statestore(bob,alice,sid_826793788,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. We assume as hypothesis that
attacker(m_826793787).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

5. By 3, the attacker may have the channel pub.
By 4, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

6. The entry statestore(alice,charlie,sid_826793789,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {112}.
table(statestore(alice,charlie,sid_826793789,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true)))).

7. The entry statestore(alice,charlie,sid_826793789,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) that may be in a table by 6 may be read at get {181}.
The event SendMsg(alice,charlie,stagepack_a(sid_826793789),msg_a(alice,charlie,sid_826793789)) may be executed at {179}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789))) may be sent on channel pub at output {180}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789)))).

8. By 3, the attacker may have the channel pub.
By 7, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789)))).

9. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))).

10. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826793789))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))).

11. Using the function g the attacker may obtain g.
attacker(g).

12. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

13. By 3, the attacker may have the channel pub.
By 12, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

14. By 13, the attacker may know key_s(charlie).
By 11, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(charlie),g).
attacker(dhexp_real(key_s(charlie),g)).

15. By 14, the attacker may know dhexp_real(key_s(charlie),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(charlie),g)).
attacker(validkey(dhexp_real(key_s(charlie),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_s(charlie),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)))).

22. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

23. By 13, the attacker may know key_s(charlie).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g)).
attacker(dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))).

24. By 18, the attacker may know hash(somename,empty).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))).
By 23, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))).
By 22, the attacker may know minnonce.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826793789),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g)))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826793789),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

28. The event LeakS(phase0,bob) may be executed at {282}.
So the message key_s(bob) may be sent on channel pub at output {283}.
mess(pub,key_s(bob)).

29. By 3, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

31. Using the function zero the attacker may obtain zero.
attacker(zero).

32. By 18, the attacker may know hash(somename,empty).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 30, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

36. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

37. By 3, the attacker may have the channel pub.
By 36, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

38. By 19, the attacker may know hash(hash(somename,empty),empty).
By 37, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

39. By 38, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 31, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero)).

40. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero)).

41. By 40, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
By 22, the attacker may know minnonce.
By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).

42. By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

44. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

45. By 44, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
By 22, the attacker may know minnonce.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
By 2, the attacker may know m_826793787.
Using the function encrypt the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787)).

46. By 31, the attacker may know zero.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
By 45, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787))).

47. By 3, the attacker may have the channel pub.
By 46, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787))).

48. The entry statestore(bob,alice,sid_826793788,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {276}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),m_826793787)) that may be sent on channel pub by 47 may be received at input {207}.
So event RecvMsg(bob,alice,stagepack_a(sid_826793788),m_826793787) may be executed at {274}.
end(RecvMsg(bob,alice,stagepack_a(sid_826793788),m_826793787)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826793791]),msg_a(alice,bob,sid[!1 = @sid_826793791]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826793791]))
Abbreviations:
sid_826794004 = sid[!1 = @sid_826793980]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_826794004,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_826794004,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_826794004,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {87}.
The event SendMsg(alice,bob,stagepack_a(sid_826794004),msg_a(alice,bob,sid_826794004)) may be executed at {85}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))) may be sent on channel pub at output {86}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {285}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {286}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794004),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794004)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_826794004) in phase 1.
attacker_p1(msg_a(alice,bob,sid_826794004)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794006]),msg_a(alice,bob,sid[!1 = @sid_826794006]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794006]))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794008]),msg_a(alice,bob,sid[!1 = @sid_826794008]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794008]))
goal reachable: begin(LeakS(phase0,bob)) && begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794010]),msg_a(alice,bob,sid[!1 = @sid_826794010]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794010]))
goal reachable: begin(LeakS(phase0,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794013]),msg_a(alice,bob,sid[!1 = @sid_826794013]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794013]))
RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794031]),msg_a(alice,bob,sid[!1 = @sid_826794031]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794031]))
Abbreviations:
sid_826794247 = sid[!1 = @sid_826794223]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_826794247,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_826794247,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_826794247,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {87}.
The event SendMsg(alice,bob,stagepack_a(sid_826794247),msg_a(alice,bob,sid_826794247)) may be executed at {85}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))) may be sent on channel pub at output {86}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {285}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {286}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794247),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794247)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_826794247) in phase 1.
attacker_p1(msg_a(alice,bob,sid_826794247)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_826794249]),msg_a(alice,bob,sid[!1 = @sid_826794249]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_826794249]))
Abbreviations:
sid_826794462 = sid[!1 = @sid_826794438]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_826794462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_826794462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_826794462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {87}.
The event SendMsg(alice,bob,stagepack_a(sid_826794462),msg_a(alice,bob,sid_826794462)) may be executed at {85}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))) may be sent on channel pub at output {86}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {285}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {286}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_826794462),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_826794462)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_826794462) in phase 1.
attacker_p1(msg_a(alice,bob,sid_826794462)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query not event(RecvEnd(true))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_826794463]),msg_a(alice,charlie,sid[!1 = @sid_826794463]))) && begin(LeakPsk(phase0,alice,bob)) -> end(RecvEnd(true))
Abbreviations:
sid_826794682 = sid[!1 = @sid_826794614]
sid_826794683 = sid[!1 = @sid_826794675]

1. The entry statestore(bob,alice,sid_826794683,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {206}.
table(statestore(bob,alice,sid_826794683,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The attacker has some term plaintext_a_826794674.
attacker(plaintext_a_826794674).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The event LeakPsk(phase0,alice,bob) may be executed at {88}.
So the message key_psk(alice,bob) may be sent on channel pub at output {89}.
mess(pub,key_psk(alice,bob)).

5. By 3, the attacker may have the channel pub.
By 4, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

6. The entry statestore(alice,charlie,sid_826794682,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {112}.
table(statestore(alice,charlie,sid_826794682,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true)))).

7. The entry statestore(alice,charlie,sid_826794682,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(charlie),g)),empty,key_psk(alice,charlie),true))) that may be in a table by 6 may be read at get {181}.
The event SendMsg(alice,charlie,stagepack_a(sid_826794682),msg_a(alice,charlie,sid_826794682)) may be executed at {179}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682))) may be sent on channel pub at output {180}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682)))).

8. By 3, the attacker may have the channel pub.
By 7, the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682)))).

9. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))).

10. By 8, the attacker may know concat3(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_s(alice),g))),key_psk(alice,charlie))),msg_a(alice,charlie,sid_826794682))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)).
attacker(validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))).

11. Using the function g the attacker may obtain g.
attacker(g).

12. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

13. By 3, the attacker may have the channel pub.
By 12, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

14. By 13, the attacker may know key_s(charlie).
By 11, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(charlie),g).
attacker(dhexp_real(key_s(charlie),g)).

15. By 14, the attacker may know dhexp_real(key_s(charlie),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(charlie),g)).
attacker(validkey(dhexp_real(key_s(charlie),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_s(charlie),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)))).

22. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

23. By 13, the attacker may know key_s(charlie).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g)).
attacker(dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))).

24. By 18, the attacker may know hash(somename,empty).
By 10, the attacker may know validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))).
By 23, the attacker may know dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))).
By 22, the attacker may know minnonce.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),dhexp_real(key_s(charlie),dhexp_real(key_e(alice,charlie,sid_826794682),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g)))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(charlie),g))),validkey(dhexp_real(key_e(alice,charlie,sid_826794682),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)).
attacker(validkey(dhexp_real(key_s(alice),g))).

28. The event LeakS(phase0,bob) may be executed at {282}.
So the message key_s(bob) may be sent on channel pub at output {283}.
mess(pub,key_s(bob)).

29. By 3, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
attacker(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

31. Using the function zero the attacker may obtain zero.
attacker(zero).

32. By 18, the attacker may know hash(somename,empty).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 30, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

36. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {194}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

37. By 3, the attacker may have the channel pub.
By 36, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

38. By 19, the attacker may know hash(hash(somename,empty),empty).
By 37, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

39. By 38, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 31, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero)).

40. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero)).

41. By 40, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero).
By 22, the attacker may know minnonce.
By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 27, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).

42. By 39, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero).
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))).
By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

44. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).
By 5, the attacker may know key_psk(alice,bob).
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
attacker(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

45. By 44, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)).
By 22, the attacker may know minnonce.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).
By 2, the attacker may know plaintext_a_826794674.
Using the function encrypt the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674)).

46. By 31, the attacker may know zero.
By 41, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))).
By 45, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674).
Using the function concat3 the attacker may obtain concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674)).
attacker(concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674))).

47. By 3, the attacker may have the channel pub.
By 46, the attacker may have the message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674)).
So the attacker may send this message on this channel.
mess(pub,concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674))).

48. The entry statestore(bob,alice,sid_826794683,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {276}.
The message concat3(zero,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),zero),zero),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),zero),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),plaintext_a_826794674)) that may be sent on channel pub by 47 may be received at input {207}.
So event RecvEnd(true) may be executed at {275}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
