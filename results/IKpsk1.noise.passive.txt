File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IKpsk1.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IKpsk1.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 269, character 6:
Warning: identifier e rebound.
File "IKpsk1.noise.passive.pv", line 270, characters 6-7:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 274, character 6:
Warning: identifier s rebound.
File "IKpsk1.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 275, characters 26-27:
Warning: identifier ns rebound.
File "IKpsk1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 278, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 278, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 279, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 286, character 6:
Warning: identifier e rebound.
File "IKpsk1.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 309, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 309, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 310, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 318, characters 6-7:
Warning: identifier re rebound.
File "IKpsk1.noise.passive.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 320, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 321, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 26-27:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 40-45:
Warning: identifier valid1 rebound.
File "IKpsk1.noise.passive.pv", line 323, characters 6-7:
Warning: identifier rs rebound.
File "IKpsk1.noise.passive.pv", line 324, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 325, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 326, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 328, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "IKpsk1.noise.passive.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 521, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 523, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 514, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 515, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 508, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "IKpsk1.noise.passive.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 501, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 269, character 6:
Warning: identifier e rebound.
File "IKpsk1.noise.passive.pv", line 270, characters 6-7:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 274, character 6:
Warning: identifier s rebound.
File "IKpsk1.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 275, characters 26-27:
Warning: identifier ns rebound.
File "IKpsk1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 278, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 278, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 279, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IKpsk1.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IKpsk1.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 575, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 576, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 309, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 309, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 310, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 567, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 569, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 561, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 286, character 6:
Warning: identifier e rebound.
File "IKpsk1.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "IKpsk1.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 555, characters 8-9:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 318, characters 6-7:
Warning: identifier re rebound.
File "IKpsk1.noise.passive.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 320, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 321, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 26-27:
Warning: identifier ne rebound.
File "IKpsk1.noise.passive.pv", line 322, characters 40-45:
Warning: identifier valid1 rebound.
File "IKpsk1.noise.passive.pv", line 323, characters 6-7:
Warning: identifier rs rebound.
File "IKpsk1.noise.passive.pv", line 324, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 325, characters 6-7:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 326, characters 7-8:
Warning: identifier ss rebound.
File "IKpsk1.noise.passive.pv", line 328, characters 7-8:
Warning: identifier hs rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IKpsk1.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IKpsk1.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IKpsk1.noise.passive.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_579: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_579));
    (
        {6}let e_580: keypair = keypairpack(empty,empty) in
        {7}let v_581: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {8}let rs_582: key = getpublickey((if not-caught-fail(v_581) then keypairpack(validkey(v_581),key_s(bob)) else fail-any)) in
        {9}let re_583: key = empty in
        {10}let v_584: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_585: key = catch-fail(v_584) in
        {12}let v_586: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_587: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_584) then (if not-caught-fail(v_585) then (if not-caught-fail(v_586) then symmetricstatepack(v_586,v_585,v_584) else fail-any) else fail-any) else fail-any))) in
        {14}let v_588: symmetricstate = catch-fail((if success?((if not-caught-fail(v_584) then (if not-caught-fail(v_585) then (if not-caught-fail(v_586) then symmetricstatepack(v_586,v_585,v_584) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-3-tuple(v_587))))) then symmetricstatepack(1-proj-3-tuple(v_587),2-proj-3-tuple(v_587),hash(3-proj-3-tuple(v_587),empty)) else fail-any) else fail-any)) in
        {15}let v_589: bitstring = catch-fail(symmetricstateunpack(v_588)) in
        {16}let v_590: symmetricstate = catch-fail((if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then symmetricstatepack(1-proj-3-tuple(v_589),2-proj-3-tuple(v_589),hash(3-proj-3-tuple(v_589),rs_582)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_588) then (if not-caught-fail(v_590) then handshakestatepack(v_590,s_579,e_580,rs_582,re_583,key_psk(alice,bob),true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {80}get statestore(=alice,=bob,=sid,statepack_a(hs_591: handshakestate)) in
        {19}let v_592: bitstring = catch-fail(handshakestateunpack(hs_591)) in
        {20}let v_593: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_594: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_595: keypair = catch-fail((if not-caught-fail(v_594) then keypairpack(validkey(v_594),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_596: bitstring = catch-fail(getpublickey(v_595)) in
        {24}let v_597: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_592))) in
        {25}let v_598: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_592)) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-3-tuple(v_597))))) then symmetricstatepack(1-proj-3-tuple(v_597),2-proj-3-tuple(v_597),hash(3-proj-3-tuple(v_597),v_596)) else fail-any) else fail-any)) in
        {26}let v_599: bitstring = catch-fail(symmetricstateunpack(v_598)) in
        {27}let v_600: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {28}let v_601: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {29}let v_602: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {30}let v_603: bitstring = catch-fail((if (success?(getpublickey(v_595)) && success?(2-proj-3-tuple(v_599))) then (if not-caught-fail(v_600) then (if not-caught-fail(v_601) then (if not-caught-fail(v_602) then (v_600,v_601,v_602) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_604: symmetricstate = catch-fail((if success?(getpublickey(v_595)) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_603)) then cipherstatepack(2-proj-3-tuple(v_603),minnonce) else fail-any),1-proj-3-tuple(v_603),3-proj-3-tuple(v_599)) else fail-any) else fail-any) else fail-any)) in
        {32}let v_605: bitstring = catch-fail(keypairunpack(v_595)) in
        {33}let v_606: bitstring = catch-fail(symmetricstateunpack(v_604)) in
        {34}let v_607: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_606),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-2-tuple(v_605))))) then dhexp(2-proj-2-tuple(v_605),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {35}let v_608: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_606),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-2-tuple(v_605))))) then dhexp(2-proj-2-tuple(v_605),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {36}let v_609: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_606),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-2-tuple(v_605))))) then dhexp(2-proj-2-tuple(v_605),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {37}let v_610: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-2-tuple(v_605))))) then dhexp(2-proj-2-tuple(v_605),4-proj-7-tuple(v_592)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_606))) then (if not-caught-fail(v_607) then (if not-caught-fail(v_608) then (if not-caught-fail(v_609) then (v_607,v_608,v_609) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {38}let v_611: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-2-tuple(v_605))))) then dhexp(2-proj-2-tuple(v_605),4-proj-7-tuple(v_592)) else fail-any) else fail-any)) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-3-tuple(v_606))))) then (if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-3-tuple(v_610))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_610)) then cipherstatepack(2-proj-3-tuple(v_610),minnonce) else fail-any),1-proj-3-tuple(v_610),3-proj-3-tuple(v_606)) else fail-any) else fail-any) else fail-any)) in
        {39}let v_612: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {40}let v_613: keypair = catch-fail((if not-caught-fail(v_612) then keypairpack(validkey(v_612),key_s(alice)) else fail-any)) in
        {41}let v_614: bitstring = catch-fail(symmetricstateunpack(v_611)) in
        {42}let v_615: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_614))) in
        {43}let v_616: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_615),2-proj-2-tuple(v_615),3-proj-3-tuple(v_614),getpublickey(v_613))) in
        {44}let v_617: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_614))) in
        {45}let v_618: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_615))) && success?(1-proj-3-tuple(v_614))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-2-tuple(v_617))))) then cipherstatepack(1-proj-2-tuple(v_617),increment_nonce(2-proj-2-tuple(v_615))) else fail-any) else fail-any)) in
        {46}let v_619: bitstring = catch-fail((if (success?(getpublickey(v_613)) && (success?(3-proj-3-tuple(v_614)) && success?(1-proj-3-tuple(v_614)))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-2-tuple(v_615))))) then (if not-caught-fail(v_616) then (if not-caught-fail(v_618) then (v_618,v_616) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {47}let v_620: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_619),2-proj-3-tuple(v_614),3-proj-3-tuple(v_614)))) in
        {48}let v_621: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_619)) && success?(symmetricstatepack(1-proj-2-tuple(v_619),2-proj-3-tuple(v_614),3-proj-3-tuple(v_614)))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-3-tuple(v_620))))) then symmetricstatepack(1-proj-3-tuple(v_620),2-proj-3-tuple(v_620),hash(3-proj-3-tuple(v_620),2-proj-2-tuple(v_619))) else fail-any) else fail-any)) in
        {49}let v_622: bitstring = catch-fail((if success?(getpublickey(v_613)) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then (if not-caught-fail(v_621) then (v_621,2-proj-2-tuple(v_619)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {50}let v_623: bitstring = catch-fail(keypairunpack(v_613)) in
        {51}let v_624: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_622))) in
        {52}let v_625: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_624),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-2-tuple(v_623))))) then dhexp(2-proj-2-tuple(v_623),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {53}let v_626: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_624),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-2-tuple(v_623))))) then dhexp(2-proj-2-tuple(v_623),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {54}let v_627: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_624),(if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-2-tuple(v_623))))) then dhexp(2-proj-2-tuple(v_623),4-proj-7-tuple(v_592)) else fail-any) else fail-any))) in
        {55}let v_628: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-2-tuple(v_623))))) then dhexp(2-proj-2-tuple(v_623),4-proj-7-tuple(v_592)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_624))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (if not-caught-fail(v_627) then (v_625,v_626,v_627) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {56}let v_629: symmetricstate = catch-fail((if (success?((if success?(4-proj-7-tuple(v_592)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-2-tuple(v_623))))) then dhexp(2-proj-2-tuple(v_623),4-proj-7-tuple(v_592)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_622))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-3-tuple(v_628))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_628)) then cipherstatepack(2-proj-3-tuple(v_628),minnonce) else fail-any),1-proj-3-tuple(v_628),3-proj-3-tuple(v_624)) else fail-any) else fail-any) else fail-any)) in
        {57}let v_630: bitstring = catch-fail(symmetricstateunpack(v_629)) in
        {58}let v_631: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_630),6-proj-7-tuple(v_592))) in
        {59}let v_632: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_630),6-proj-7-tuple(v_592))) in
        {60}let v_633: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_630),6-proj-7-tuple(v_592))) in
        {61}let v_634: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_592)) && success?(2-proj-3-tuple(v_630))) then (if not-caught-fail(v_631) then (if not-caught-fail(v_632) then (if not-caught-fail(v_633) then (v_631,v_632,v_633) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {62}let v_635: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_630),1-proj-3-tuple(v_634),3-proj-3-tuple(v_630)))) in
        {63}let v_636: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_634)) && success?(symmetricstatepack(1-proj-3-tuple(v_630),1-proj-3-tuple(v_634),3-proj-3-tuple(v_630)))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then symmetricstatepack(1-proj-3-tuple(v_635),2-proj-3-tuple(v_635),hash(3-proj-3-tuple(v_635),2-proj-3-tuple(v_634))) else fail-any) else fail-any))) in
        {64}let v_637: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_592)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-3-tuple(v_630))))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_634)) then cipherstatepack(3-proj-3-tuple(v_634),minnonce) else fail-any),1-proj-3-tuple(v_634),3-proj-3-tuple(v_636)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {65}let v_638: bitstring = catch-fail(symmetricstateunpack(v_637)) in
        {66}let v_639: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_638))) in
        {67}let v_640: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_639),2-proj-2-tuple(v_639),3-proj-3-tuple(v_638),msg_a(alice,bob,sid))) in
        {68}let v_641: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_638))) in
        {69}let v_642: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_639))) && success?(1-proj-3-tuple(v_638))) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then cipherstatepack(1-proj-2-tuple(v_641),increment_nonce(2-proj-2-tuple(v_639))) else fail-any) else fail-any)) in
        {70}let v_643: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_638)) && success?(1-proj-3-tuple(v_638))) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then (if not-caught-fail(v_640) then (if not-caught-fail(v_642) then (v_642,v_640) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {71}let v_644: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_643),2-proj-3-tuple(v_638),3-proj-3-tuple(v_638)))) in
        {72}let v_645: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_643)) && success?(symmetricstatepack(1-proj-2-tuple(v_643),2-proj-3-tuple(v_638),3-proj-3-tuple(v_638)))) then (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-3-tuple(v_644))))) then symmetricstatepack(1-proj-3-tuple(v_644),2-proj-3-tuple(v_644),hash(3-proj-3-tuple(v_644),2-proj-2-tuple(v_643))) else fail-any) else fail-any)) in
        {73}let v_646: bitstring = catch-fail((if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-2-tuple(v_643))))) then (if not-caught-fail(v_645) then (v_645,2-proj-2-tuple(v_643)) else fail-any) else fail-any) else fail-any)) in
        {74}let v_647: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_646),v_613,v_595,4-proj-7-tuple(v_592),5-proj-7-tuple(v_592),6-proj-7-tuple(v_592),7-proj-7-tuple(v_592))) in
        {75}let v_648: bitstring = catch-fail(concat3(v_596,2-proj-2-tuple(v_622),2-proj-2-tuple(v_646))) in
        {76}let (hs_649: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-7-tuple(v_592))))) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-3-tuple(v_593))))) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_598) then (if not-caught-fail(v_604) then (if not-caught-fail(v_611) then (if not-caught-fail(v_613) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-2-tuple(v_622))))) then (if not-caught-fail(v_629) then (if not-caught-fail(v_637) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then (if not-caught-fail(v_647) then (if not-caught-fail(v_648) then (v_647,v_648) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {77}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {78}insert statestore(alice,bob,sid,statepack_b(hs_649));
        {79}out(pub, message_a)
    ) | (
        {130}get statestore(=alice,=bob,=sid,statepack_b(hs_650: handshakestate)) in
        {81}in(pub, message_b: bitstring);
        {82}let v_651: bitstring = catch-fail(handshakestateunpack(hs_650)) in
        {83}let v_652: bitstring = catch-fail(deconcat3(message_b)) in
        {84}let v_653: bool = catch-fail(true) in
        {85}let v_654: key = catch-fail(1-proj-3-tuple(v_652)) in
        {86}let v_655: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_651))) in
        {87}let v_656: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_651)) then (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-3-tuple(v_655))))) then symmetricstatepack(1-proj-3-tuple(v_655),2-proj-3-tuple(v_655),hash(3-proj-3-tuple(v_655),v_654)) else fail-any) else fail-any)) in
        {88}let v_657: bitstring = catch-fail(symmetricstateunpack(v_656)) in
        {89}let v_658: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_657),v_654)) in
        {90}let v_659: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_657),v_654)) in
        {91}let v_660: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_657),v_654)) in
        {92}let v_661: bitstring = catch-fail((if success?(2-proj-3-tuple(v_657)) then (if not-caught-fail(v_658) then (if not-caught-fail(v_659) then (if not-caught-fail(v_660) then (v_658,v_659,v_660) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {93}let v_662: symmetricstate = catch-fail((if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-3-tuple(v_657))))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_661)) then cipherstatepack(2-proj-3-tuple(v_661),minnonce) else fail-any),1-proj-3-tuple(v_661),3-proj-3-tuple(v_657)) else fail-any) else fail-any)) in
        {94}let v_663: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_651))) in
        {95}let v_664: bitstring = catch-fail(symmetricstateunpack(v_662)) in
        {96}let v_665: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_664),(if success?(3-proj-7-tuple(v_651)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then dhexp(2-proj-2-tuple(v_663),v_654) else fail-any) else fail-any))) in
        {97}let v_666: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_664),(if success?(3-proj-7-tuple(v_651)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then dhexp(2-proj-2-tuple(v_663),v_654) else fail-any) else fail-any))) in
        {98}let v_667: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_664),(if success?(3-proj-7-tuple(v_651)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then dhexp(2-proj-2-tuple(v_663),v_654) else fail-any) else fail-any))) in
        {99}let v_668: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_651)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then dhexp(2-proj-2-tuple(v_663),v_654) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_664))) then (if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (if not-caught-fail(v_667) then (v_665,v_666,v_667) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {100}let v_669: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_651)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then dhexp(2-proj-2-tuple(v_663),v_654) else fail-any) else fail-any)) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-3-tuple(v_664))))) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_668)) then cipherstatepack(2-proj-3-tuple(v_668),minnonce) else fail-any),1-proj-3-tuple(v_668),3-proj-3-tuple(v_664)) else fail-any) else fail-any) else fail-any)) in
        {101}let v_670: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_651))) in
        {102}let v_671: bitstring = catch-fail(symmetricstateunpack(v_669)) in
        {103}let v_672: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_671),(if success?(2-proj-7-tuple(v_651)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-2-tuple(v_670))))) then dhexp(2-proj-2-tuple(v_670),v_654) else fail-any) else fail-any))) in
        {104}let v_673: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_671),(if success?(2-proj-7-tuple(v_651)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-2-tuple(v_670))))) then dhexp(2-proj-2-tuple(v_670),v_654) else fail-any) else fail-any))) in
        {105}let v_674: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_671),(if success?(2-proj-7-tuple(v_651)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-2-tuple(v_670))))) then dhexp(2-proj-2-tuple(v_670),v_654) else fail-any) else fail-any))) in
        {106}let v_675: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_651)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-2-tuple(v_670))))) then dhexp(2-proj-2-tuple(v_670),v_654) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_671))) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then (if not-caught-fail(v_674) then (v_672,v_673,v_674) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {107}let v_676: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_651)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-2-tuple(v_670))))) then dhexp(2-proj-2-tuple(v_670),v_654) else fail-any) else fail-any)) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-3-tuple(v_671))))) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-3-tuple(v_675))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_675)) then cipherstatepack(2-proj-3-tuple(v_675),minnonce) else fail-any),1-proj-3-tuple(v_675),3-proj-3-tuple(v_671)) else fail-any) else fail-any) else fail-any)) in
        {108}let v_677: bitstring = catch-fail(symmetricstateunpack(v_676)) in
        {109}let v_678: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_677))) in
        {110}let v_679: aead = catch-fail(decrypt(1-proj-2-tuple(v_678),2-proj-2-tuple(v_678),3-proj-3-tuple(v_677),3-proj-3-tuple(v_652))) in
        {111}let v_680: bitstring = catch-fail(aeadunpack(v_679)) in
        {112}let v_681: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_677))) in
        {113}let v_682: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_678))) && success?(1-proj-3-tuple(v_677))) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then cipherstatepack(1-proj-2-tuple(v_681),increment_nonce(2-proj-2-tuple(v_678))) else fail-any) else fail-any)) in
        {114}let v_683: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_652)) && (success?(3-proj-3-tuple(v_677)) && success?(1-proj-3-tuple(v_677)))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-2-tuple(v_678))))) then (if not-caught-fail(v_679) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-3-tuple(v_680))))) then (if not-caught-fail(v_682) then (v_682,3-proj-3-tuple(v_680),1-proj-3-tuple(v_680)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {115}let v_684: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_683),2-proj-3-tuple(v_677),3-proj-3-tuple(v_677)))) in
        {116}let v_685: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_652)) && success?(symmetricstatepack(1-proj-3-tuple(v_683),2-proj-3-tuple(v_677),3-proj-3-tuple(v_677)))) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-3-tuple(v_684))))) then symmetricstatepack(1-proj-3-tuple(v_684),2-proj-3-tuple(v_684),hash(3-proj-3-tuple(v_684),3-proj-3-tuple(v_652))) else fail-any) else fail-any)) in
        {117}let v_686: bitstring = catch-fail((if success?(3-proj-3-tuple(v_652)) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if not-caught-fail(v_685) then (v_685,2-proj-3-tuple(v_683),3-proj-3-tuple(v_683)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {118}let v_687: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_686),2-proj-7-tuple(v_651),3-proj-7-tuple(v_651),4-proj-7-tuple(v_651),v_654,6-proj-7-tuple(v_651),7-proj-7-tuple(v_651))) in
        {119}let v_688: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_686))) in
        {120}let v_689: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_688),zero)) in
        {121}let v_690: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_688),zero)) in
        {122}let v_691: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_688),zero)) in
        {123}let v_692: bitstring = catch-fail((if success?(2-proj-3-tuple(v_688)) then (if not-caught-fail(v_689) then (if not-caught-fail(v_690) then (if not-caught-fail(v_691) then (v_689,v_690,v_691) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {124}let v_693: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_692)) then cipherstatepack(1-proj-3-tuple(v_692),minnonce) else fail-any)) in
        {125}let v_694: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_692)) then cipherstatepack(2-proj-3-tuple(v_692),minnonce) else fail-any)) in
        {126}let v_695: bitstring = catch-fail((if success?(1-proj-3-tuple(v_686)) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-3-tuple(v_688))))) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-3-tuple(v_692))))) then (if not-caught-fail(v_693) then (if not-caught-fail(v_694) then (1-proj-3-tuple(v_686),v_693,v_694) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {127}let (hs_696: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-7-tuple(v_651))))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then (if not-caught-fail(v_653) then (if not-caught-fail(v_654) then (if not-caught-fail(v_656) then (if not-caught-fail(v_662) then (if not-caught-fail(v_669) then (if not-caught-fail(v_676) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-3-tuple(v_686))))) then (if (v_653 && 3-proj-3-tuple(v_686)) then (if not-caught-fail(v_687) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (v_687,2-proj-3-tuple(v_686),true,2-proj-3-tuple(v_695),3-proj-3-tuple(v_695)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {128}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {129}insert statestore(alice,bob,sid,statepack_c(hs_696,cs1,cs2))
    ) | (
        {131}!
        {150}get statestore(=alice,=bob,=sid,statepack_c(hs_697: handshakestate,cs1_698: cipherstate,cs2_699: cipherstate)) in
        {132}let hs_700: handshakestate = handshakestatesetcs(hs_697,cs1_698) in
        {133}let v_701: bitstring = catch-fail(handshakestateunpack(hs_700)) in
        {134}let v_702: bitstring = catch-fail((empty,empty,empty)) in
        {135}let v_703: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_701))) in
        {136}let v_704: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_703))) in
        {137}let v_705: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_704),2-proj-2-tuple(v_704),3-proj-3-tuple(v_703),msg_c(alice,bob,sid))) in
        {138}let v_706: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_703))) in
        {139}let v_707: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_704))) && success?(1-proj-3-tuple(v_703))) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then cipherstatepack(1-proj-2-tuple(v_706),increment_nonce(2-proj-2-tuple(v_704))) else fail-any) else fail-any)) in
        {140}let v_708: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_703)) && success?(1-proj-3-tuple(v_703))) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-2-tuple(v_704))))) then (if not-caught-fail(v_705) then (if not-caught-fail(v_707) then (v_707,v_705) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {141}let v_709: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_708),2-proj-3-tuple(v_703),3-proj-3-tuple(v_703)))) in
        {142}let v_710: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_708)) && success?(symmetricstatepack(1-proj-2-tuple(v_708),2-proj-3-tuple(v_703),3-proj-3-tuple(v_703)))) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-3-tuple(v_709))))) then symmetricstatepack(1-proj-3-tuple(v_709),2-proj-3-tuple(v_709),hash(3-proj-3-tuple(v_709),2-proj-2-tuple(v_708))) else fail-any) else fail-any)) in
        {143}let v_711: bitstring = catch-fail((if success?(1-proj-7-tuple(v_701)) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-3-tuple(v_703))))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-2-tuple(v_708))))) then (if not-caught-fail(v_710) then (v_710,2-proj-2-tuple(v_708)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {144}let v_712: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_711),2-proj-7-tuple(v_701),3-proj-7-tuple(v_701),4-proj-7-tuple(v_701),5-proj-7-tuple(v_701),6-proj-7-tuple(v_701),7-proj-7-tuple(v_701))) in
        {145}let v_713: bitstring = catch-fail(concat3(1-proj-3-tuple(v_702),2-proj-3-tuple(v_702),2-proj-2-tuple(v_711))) in
        {146}let (hs_714: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-7-tuple(v_701))))) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-2-tuple(v_711))))) then (if not-caught-fail(v_712) then (if not-caught-fail(v_713) then (v_712,v_713) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {147}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {148}insert statestore(alice,bob,sid,statepack_d(hs_714,handshakestategetcs(hs_714),cs2_699));
        {149}out(pub, message_c)
    ) | (
        {151}!
        {171}get statestore(=alice,=bob,=sid,statepack_d(hs_715: handshakestate,cs1_716: cipherstate,cs2_717: cipherstate)) in
        {152}let hs_718: handshakestate = handshakestatesetcs(hs_715,cs2_717) in
        {153}in(pub, message_d: bitstring);
        {154}let v_719: bitstring = catch-fail(handshakestateunpack(hs_718)) in
        {155}let v_720: bitstring = catch-fail(deconcat3(message_d)) in
        {156}let v_721: bool = catch-fail(true) in
        {157}let v_722: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_719))) in
        {158}let v_723: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_722))) in
        {159}let v_724: aead = catch-fail(decrypt(1-proj-2-tuple(v_723),2-proj-2-tuple(v_723),3-proj-3-tuple(v_722),3-proj-3-tuple(v_720))) in
        {160}let v_725: bitstring = catch-fail(aeadunpack(v_724)) in
        {161}let v_726: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_722))) in
        {162}let v_727: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_723))) && success?(1-proj-3-tuple(v_722))) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-2-tuple(v_726))))) then cipherstatepack(1-proj-2-tuple(v_726),increment_nonce(2-proj-2-tuple(v_723))) else fail-any) else fail-any)) in
        {163}let v_728: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_720)) && (success?(3-proj-3-tuple(v_722)) && success?(1-proj-3-tuple(v_722)))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-2-tuple(v_723))))) then (if not-caught-fail(v_724) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-3-tuple(v_725))))) then (if not-caught-fail(v_727) then (v_727,3-proj-3-tuple(v_725),1-proj-3-tuple(v_725)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {164}let v_729: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_728),2-proj-3-tuple(v_722),3-proj-3-tuple(v_722)))) in
        {165}let v_730: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_720)) && success?(symmetricstatepack(1-proj-3-tuple(v_728),2-proj-3-tuple(v_722),3-proj-3-tuple(v_722)))) then (if (not-caught-fail(v_729) && success?(is-true(success?(1-proj-3-tuple(v_729))))) then symmetricstatepack(1-proj-3-tuple(v_729),2-proj-3-tuple(v_729),hash(3-proj-3-tuple(v_729),3-proj-3-tuple(v_720))) else fail-any) else fail-any)) in
        {166}let v_731: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_720)) && success?(1-proj-7-tuple(v_719))) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-3-tuple(v_722))))) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-3-tuple(v_728))))) then (if not-caught-fail(v_730) then (v_730,2-proj-3-tuple(v_728),3-proj-3-tuple(v_728)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {167}let v_732: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_731),2-proj-7-tuple(v_719),3-proj-7-tuple(v_719),4-proj-7-tuple(v_719),5-proj-7-tuple(v_719),6-proj-7-tuple(v_719),7-proj-7-tuple(v_719))) in
        {168}let (hs_733: handshakestate,plaintext_d: bitstring,valid_734: bool) = (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-7-tuple(v_719))))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if not-caught-fail(v_721) then (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-3-tuple(v_731))))) then (if (v_721 && 3-proj-3-tuple(v_731)) then (if not-caught-fail(v_732) then (v_732,2-proj-3-tuple(v_731),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {169}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {170}event RecvEnd(valid_734)
    ) | (
        {172}event LeakPsk(phase0,alice,bob);
        {173}out(pub, key_psk(alice,bob))
    ) | (
        {174}phase 1;
        {175}event LeakPsk(phase1,alice,bob);
        {176}out(pub, key_psk(alice,bob))
    ) | (
        {177}event LeakS(phase0,alice);
        {178}out(pub, key_s(alice))
    ) | (
        {179}phase 1;
        {180}event LeakS(phase1,alice);
        {181}out(pub, key_s(alice))
    )
) | (
    {182}let s_735: keypair = keypairpack(empty,empty) in
    {183}out(pub, getpublickey(s_735));
    (
        {184}let e_736: keypair = keypairpack(empty,empty) in
        {185}let v_737: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {186}let rs_738: key = getpublickey((if not-caught-fail(v_737) then keypairpack(validkey(v_737),key_s(charlie)) else fail-any)) in
        {187}let re_739: key = empty in
        {188}let v_740: bitstring = catch-fail(hash(somename,empty)) in
        {189}let v_741: key = catch-fail(v_740) in
        {190}let v_742: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {191}let v_743: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_740) then (if not-caught-fail(v_741) then (if not-caught-fail(v_742) then symmetricstatepack(v_742,v_741,v_740) else fail-any) else fail-any) else fail-any))) in
        {192}let v_744: symmetricstate = catch-fail((if success?((if not-caught-fail(v_740) then (if not-caught-fail(v_741) then (if not-caught-fail(v_742) then symmetricstatepack(v_742,v_741,v_740) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-3-tuple(v_743))))) then symmetricstatepack(1-proj-3-tuple(v_743),2-proj-3-tuple(v_743),hash(3-proj-3-tuple(v_743),empty)) else fail-any) else fail-any)) in
        {193}let v_745: bitstring = catch-fail(symmetricstateunpack(v_744)) in
        {194}let v_746: symmetricstate = catch-fail((if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-3-tuple(v_745))))) then symmetricstatepack(1-proj-3-tuple(v_745),2-proj-3-tuple(v_745),hash(3-proj-3-tuple(v_745),rs_738)) else fail-any)) in
        {195}let hs_747: handshakestate = (if not-caught-fail(v_744) then (if not-caught-fail(v_746) then handshakestatepack(v_746,s_735,e_736,rs_738,re_739,key_psk(alice,charlie),true) else fail-any) else fail-any) in
        {196}insert statestore(alice,charlie,sid,statepack_a(hs_747))
    ) | (
        {258}get statestore(=alice,=charlie,=sid,statepack_a(hs_748: handshakestate)) in
        {197}let v_749: bitstring = catch-fail(handshakestateunpack(hs_748)) in
        {198}let v_750: bitstring = catch-fail((empty,empty,empty)) in
        {199}let v_751: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {200}let v_752: keypair = catch-fail((if not-caught-fail(v_751) then keypairpack(validkey(v_751),key_e(alice,charlie,sid)) else fail-any)) in
        {201}let v_753: bitstring = catch-fail(getpublickey(v_752)) in
        {202}let v_754: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_749))) in
        {203}let v_755: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_749)) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-3-tuple(v_754))))) then symmetricstatepack(1-proj-3-tuple(v_754),2-proj-3-tuple(v_754),hash(3-proj-3-tuple(v_754),v_753)) else fail-any) else fail-any)) in
        {204}let v_756: bitstring = catch-fail(symmetricstateunpack(v_755)) in
        {205}let v_757: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_756),getpublickey(v_752))) in
        {206}let v_758: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_756),getpublickey(v_752))) in
        {207}let v_759: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_756),getpublickey(v_752))) in
        {208}let v_760: bitstring = catch-fail((if (success?(getpublickey(v_752)) && success?(2-proj-3-tuple(v_756))) then (if not-caught-fail(v_757) then (if not-caught-fail(v_758) then (if not-caught-fail(v_759) then (v_757,v_758,v_759) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {209}let v_761: symmetricstate = catch-fail((if success?(getpublickey(v_752)) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_760)) then cipherstatepack(2-proj-3-tuple(v_760),minnonce) else fail-any),1-proj-3-tuple(v_760),3-proj-3-tuple(v_756)) else fail-any) else fail-any) else fail-any)) in
        {210}let v_762: bitstring = catch-fail(keypairunpack(v_752)) in
        {211}let v_763: bitstring = catch-fail(symmetricstateunpack(v_761)) in
        {212}let v_764: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_763),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then dhexp(2-proj-2-tuple(v_762),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {213}let v_765: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_763),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then dhexp(2-proj-2-tuple(v_762),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {214}let v_766: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_763),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then dhexp(2-proj-2-tuple(v_762),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {215}let v_767: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then dhexp(2-proj-2-tuple(v_762),4-proj-7-tuple(v_749)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_763))) then (if not-caught-fail(v_764) then (if not-caught-fail(v_765) then (if not-caught-fail(v_766) then (v_764,v_765,v_766) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {216}let v_768: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then dhexp(2-proj-2-tuple(v_762),4-proj-7-tuple(v_749)) else fail-any) else fail-any)) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-3-tuple(v_767))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_767)) then cipherstatepack(2-proj-3-tuple(v_767),minnonce) else fail-any),1-proj-3-tuple(v_767),3-proj-3-tuple(v_763)) else fail-any) else fail-any) else fail-any)) in
        {217}let v_769: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {218}let v_770: keypair = catch-fail((if not-caught-fail(v_769) then keypairpack(validkey(v_769),key_s(alice)) else fail-any)) in
        {219}let v_771: bitstring = catch-fail(symmetricstateunpack(v_768)) in
        {220}let v_772: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_771))) in
        {221}let v_773: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_772),2-proj-2-tuple(v_772),3-proj-3-tuple(v_771),getpublickey(v_770))) in
        {222}let v_774: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_771))) in
        {223}let v_775: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_772))) && success?(1-proj-3-tuple(v_771))) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then cipherstatepack(1-proj-2-tuple(v_774),increment_nonce(2-proj-2-tuple(v_772))) else fail-any) else fail-any)) in
        {224}let v_776: bitstring = catch-fail((if (success?(getpublickey(v_770)) && (success?(3-proj-3-tuple(v_771)) && success?(1-proj-3-tuple(v_771)))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-2-tuple(v_772))))) then (if not-caught-fail(v_773) then (if not-caught-fail(v_775) then (v_775,v_773) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {225}let v_777: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_776),2-proj-3-tuple(v_771),3-proj-3-tuple(v_771)))) in
        {226}let v_778: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_776)) && success?(symmetricstatepack(1-proj-2-tuple(v_776),2-proj-3-tuple(v_771),3-proj-3-tuple(v_771)))) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-3-tuple(v_777))))) then symmetricstatepack(1-proj-3-tuple(v_777),2-proj-3-tuple(v_777),hash(3-proj-3-tuple(v_777),2-proj-2-tuple(v_776))) else fail-any) else fail-any)) in
        {227}let v_779: bitstring = catch-fail((if success?(getpublickey(v_770)) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then (if not-caught-fail(v_778) then (v_778,2-proj-2-tuple(v_776)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {228}let v_780: bitstring = catch-fail(keypairunpack(v_770)) in
        {229}let v_781: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_779))) in
        {230}let v_782: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_781),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then dhexp(2-proj-2-tuple(v_780),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {231}let v_783: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_781),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then dhexp(2-proj-2-tuple(v_780),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {232}let v_784: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_781),(if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then dhexp(2-proj-2-tuple(v_780),4-proj-7-tuple(v_749)) else fail-any) else fail-any))) in
        {233}let v_785: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then dhexp(2-proj-2-tuple(v_780),4-proj-7-tuple(v_749)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_781))) then (if not-caught-fail(v_782) then (if not-caught-fail(v_783) then (if not-caught-fail(v_784) then (v_782,v_783,v_784) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {234}let v_786: symmetricstate = catch-fail((if (success?((if success?(4-proj-7-tuple(v_749)) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then dhexp(2-proj-2-tuple(v_780),4-proj-7-tuple(v_749)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_779))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-3-tuple(v_781))))) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_785)) then cipherstatepack(2-proj-3-tuple(v_785),minnonce) else fail-any),1-proj-3-tuple(v_785),3-proj-3-tuple(v_781)) else fail-any) else fail-any) else fail-any)) in
        {235}let v_787: bitstring = catch-fail(symmetricstateunpack(v_786)) in
        {236}let v_788: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_787),6-proj-7-tuple(v_749))) in
        {237}let v_789: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_787),6-proj-7-tuple(v_749))) in
        {238}let v_790: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_787),6-proj-7-tuple(v_749))) in
        {239}let v_791: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_749)) && success?(2-proj-3-tuple(v_787))) then (if not-caught-fail(v_788) then (if not-caught-fail(v_789) then (if not-caught-fail(v_790) then (v_788,v_789,v_790) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {240}let v_792: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_787),1-proj-3-tuple(v_791),3-proj-3-tuple(v_787)))) in
        {241}let v_793: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_791)) && success?(symmetricstatepack(1-proj-3-tuple(v_787),1-proj-3-tuple(v_791),3-proj-3-tuple(v_787)))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then symmetricstatepack(1-proj-3-tuple(v_792),2-proj-3-tuple(v_792),hash(3-proj-3-tuple(v_792),2-proj-3-tuple(v_791))) else fail-any) else fail-any))) in
        {242}let v_794: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_749)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-3-tuple(v_787))))) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if (not-caught-fail(v_793) && success?(is-true(success?(1-proj-3-tuple(v_793))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_791)) then cipherstatepack(3-proj-3-tuple(v_791),minnonce) else fail-any),1-proj-3-tuple(v_791),3-proj-3-tuple(v_793)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {243}let v_795: bitstring = catch-fail(symmetricstateunpack(v_794)) in
        {244}let v_796: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_795))) in
        {245}let v_797: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_796),2-proj-2-tuple(v_796),3-proj-3-tuple(v_795),msg_a(alice,charlie,sid))) in
        {246}let v_798: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_795))) in
        {247}let v_799: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_796))) && success?(1-proj-3-tuple(v_795))) then (if (not-caught-fail(v_798) && success?(is-true(success?(1-proj-2-tuple(v_798))))) then cipherstatepack(1-proj-2-tuple(v_798),increment_nonce(2-proj-2-tuple(v_796))) else fail-any) else fail-any)) in
        {248}let v_800: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_795)) && success?(1-proj-3-tuple(v_795))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-2-tuple(v_796))))) then (if not-caught-fail(v_797) then (if not-caught-fail(v_799) then (v_799,v_797) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {249}let v_801: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_800),2-proj-3-tuple(v_795),3-proj-3-tuple(v_795)))) in
        {250}let v_802: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_800)) && success?(symmetricstatepack(1-proj-2-tuple(v_800),2-proj-3-tuple(v_795),3-proj-3-tuple(v_795)))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-3-tuple(v_801))))) then symmetricstatepack(1-proj-3-tuple(v_801),2-proj-3-tuple(v_801),hash(3-proj-3-tuple(v_801),2-proj-2-tuple(v_800))) else fail-any) else fail-any)) in
        {251}let v_803: bitstring = catch-fail((if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-3-tuple(v_795))))) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-2-tuple(v_800))))) then (if not-caught-fail(v_802) then (v_802,2-proj-2-tuple(v_800)) else fail-any) else fail-any) else fail-any)) in
        {252}let v_804: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_803),v_770,v_752,4-proj-7-tuple(v_749),5-proj-7-tuple(v_749),6-proj-7-tuple(v_749),7-proj-7-tuple(v_749))) in
        {253}let v_805: bitstring = catch-fail(concat3(v_753,2-proj-2-tuple(v_779),2-proj-2-tuple(v_803))) in
        {254}let (hs_806: handshakestate,message_a_807: bitstring) = (if (not-caught-fail(v_749) && success?(is-true(success?(1-proj-7-tuple(v_749))))) then (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-3-tuple(v_750))))) then (if not-caught-fail(v_752) then (if not-caught-fail(v_753) then (if not-caught-fail(v_755) then (if not-caught-fail(v_761) then (if not-caught-fail(v_768) then (if not-caught-fail(v_770) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-2-tuple(v_779))))) then (if not-caught-fail(v_786) then (if not-caught-fail(v_794) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then (if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (v_804,v_805) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {255}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {256}insert statestore(alice,charlie,sid,statepack_b(hs_806));
        {257}out(pub, message_a_807)
    ) | (
        {308}get statestore(=alice,=charlie,=sid,statepack_b(hs_808: handshakestate)) in
        {259}in(pub, message_b_809: bitstring);
        {260}let v_810: bitstring = catch-fail(handshakestateunpack(hs_808)) in
        {261}let v_811: bitstring = catch-fail(deconcat3(message_b_809)) in
        {262}let v_812: bool = catch-fail(true) in
        {263}let v_813: key = catch-fail(1-proj-3-tuple(v_811)) in
        {264}let v_814: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_810))) in
        {265}let v_815: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_810)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-3-tuple(v_814))))) then symmetricstatepack(1-proj-3-tuple(v_814),2-proj-3-tuple(v_814),hash(3-proj-3-tuple(v_814),v_813)) else fail-any) else fail-any)) in
        {266}let v_816: bitstring = catch-fail(symmetricstateunpack(v_815)) in
        {267}let v_817: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_816),v_813)) in
        {268}let v_818: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_816),v_813)) in
        {269}let v_819: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_816),v_813)) in
        {270}let v_820: bitstring = catch-fail((if success?(2-proj-3-tuple(v_816)) then (if not-caught-fail(v_817) then (if not-caught-fail(v_818) then (if not-caught-fail(v_819) then (v_817,v_818,v_819) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {271}let v_821: symmetricstate = catch-fail((if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-3-tuple(v_816))))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_820)) then cipherstatepack(2-proj-3-tuple(v_820),minnonce) else fail-any),1-proj-3-tuple(v_820),3-proj-3-tuple(v_816)) else fail-any) else fail-any)) in
        {272}let v_822: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_810))) in
        {273}let v_823: bitstring = catch-fail(symmetricstateunpack(v_821)) in
        {274}let v_824: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_823),(if success?(3-proj-7-tuple(v_810)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then dhexp(2-proj-2-tuple(v_822),v_813) else fail-any) else fail-any))) in
        {275}let v_825: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_823),(if success?(3-proj-7-tuple(v_810)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then dhexp(2-proj-2-tuple(v_822),v_813) else fail-any) else fail-any))) in
        {276}let v_826: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_823),(if success?(3-proj-7-tuple(v_810)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then dhexp(2-proj-2-tuple(v_822),v_813) else fail-any) else fail-any))) in
        {277}let v_827: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_810)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then dhexp(2-proj-2-tuple(v_822),v_813) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_823))) then (if not-caught-fail(v_824) then (if not-caught-fail(v_825) then (if not-caught-fail(v_826) then (v_824,v_825,v_826) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {278}let v_828: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_810)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then dhexp(2-proj-2-tuple(v_822),v_813) else fail-any) else fail-any)) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_827)) then cipherstatepack(2-proj-3-tuple(v_827),minnonce) else fail-any),1-proj-3-tuple(v_827),3-proj-3-tuple(v_823)) else fail-any) else fail-any) else fail-any)) in
        {279}let v_829: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_810))) in
        {280}let v_830: bitstring = catch-fail(symmetricstateunpack(v_828)) in
        {281}let v_831: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_830),(if success?(2-proj-7-tuple(v_810)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then dhexp(2-proj-2-tuple(v_829),v_813) else fail-any) else fail-any))) in
        {282}let v_832: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_830),(if success?(2-proj-7-tuple(v_810)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then dhexp(2-proj-2-tuple(v_829),v_813) else fail-any) else fail-any))) in
        {283}let v_833: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_830),(if success?(2-proj-7-tuple(v_810)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then dhexp(2-proj-2-tuple(v_829),v_813) else fail-any) else fail-any))) in
        {284}let v_834: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_810)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then dhexp(2-proj-2-tuple(v_829),v_813) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_830))) then (if not-caught-fail(v_831) then (if not-caught-fail(v_832) then (if not-caught-fail(v_833) then (v_831,v_832,v_833) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {285}let v_835: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_810)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then dhexp(2-proj-2-tuple(v_829),v_813) else fail-any) else fail-any)) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_834)) then cipherstatepack(2-proj-3-tuple(v_834),minnonce) else fail-any),1-proj-3-tuple(v_834),3-proj-3-tuple(v_830)) else fail-any) else fail-any) else fail-any)) in
        {286}let v_836: bitstring = catch-fail(symmetricstateunpack(v_835)) in
        {287}let v_837: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_836))) in
        {288}let v_838: aead = catch-fail(decrypt(1-proj-2-tuple(v_837),2-proj-2-tuple(v_837),3-proj-3-tuple(v_836),3-proj-3-tuple(v_811))) in
        {289}let v_839: bitstring = catch-fail(aeadunpack(v_838)) in
        {290}let v_840: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_836))) in
        {291}let v_841: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_837))) && success?(1-proj-3-tuple(v_836))) then (if (not-caught-fail(v_840) && success?(is-true(success?(1-proj-2-tuple(v_840))))) then cipherstatepack(1-proj-2-tuple(v_840),increment_nonce(2-proj-2-tuple(v_837))) else fail-any) else fail-any)) in
        {292}let v_842: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_811)) && (success?(3-proj-3-tuple(v_836)) && success?(1-proj-3-tuple(v_836)))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-2-tuple(v_837))))) then (if not-caught-fail(v_838) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then (if not-caught-fail(v_841) then (v_841,3-proj-3-tuple(v_839),1-proj-3-tuple(v_839)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {293}let v_843: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_842),2-proj-3-tuple(v_836),3-proj-3-tuple(v_836)))) in
        {294}let v_844: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_811)) && success?(symmetricstatepack(1-proj-3-tuple(v_842),2-proj-3-tuple(v_836),3-proj-3-tuple(v_836)))) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-3-tuple(v_843))))) then symmetricstatepack(1-proj-3-tuple(v_843),2-proj-3-tuple(v_843),hash(3-proj-3-tuple(v_843),3-proj-3-tuple(v_811))) else fail-any) else fail-any)) in
        {295}let v_845: bitstring = catch-fail((if success?(3-proj-3-tuple(v_811)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-3-tuple(v_836))))) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if not-caught-fail(v_844) then (v_844,2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {296}let v_846: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_845),2-proj-7-tuple(v_810),3-proj-7-tuple(v_810),4-proj-7-tuple(v_810),v_813,6-proj-7-tuple(v_810),7-proj-7-tuple(v_810))) in
        {297}let v_847: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_845))) in
        {298}let v_848: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_847),zero)) in
        {299}let v_849: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_847),zero)) in
        {300}let v_850: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_847),zero)) in
        {301}let v_851: bitstring = catch-fail((if success?(2-proj-3-tuple(v_847)) then (if not-caught-fail(v_848) then (if not-caught-fail(v_849) then (if not-caught-fail(v_850) then (v_848,v_849,v_850) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {302}let v_852: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_851)) then cipherstatepack(1-proj-3-tuple(v_851),minnonce) else fail-any)) in
        {303}let v_853: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_851)) then cipherstatepack(2-proj-3-tuple(v_851),minnonce) else fail-any)) in
        {304}let v_854: bitstring = catch-fail((if success?(1-proj-3-tuple(v_845)) then (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-3-tuple(v_847))))) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-3-tuple(v_851))))) then (if not-caught-fail(v_852) then (if not-caught-fail(v_853) then (1-proj-3-tuple(v_845),v_852,v_853) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {305}let (hs_855: handshakestate,plaintext_b_856: bitstring,valid_857: bool,cs1_858: cipherstate,cs2_859: cipherstate) = (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-7-tuple(v_810))))) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then (if not-caught-fail(v_812) then (if not-caught-fail(v_813) then (if not-caught-fail(v_815) then (if not-caught-fail(v_821) then (if not-caught-fail(v_828) then (if not-caught-fail(v_835) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-3-tuple(v_845))))) then (if (v_812 && 3-proj-3-tuple(v_845)) then (if not-caught-fail(v_846) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then (v_846,2-proj-3-tuple(v_845),true,2-proj-3-tuple(v_854),3-proj-3-tuple(v_854)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {306}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_856);
        {307}insert statestore(alice,charlie,sid,statepack_c(hs_855,cs1_858,cs2_859))
    ) | (
        {309}!
        {328}get statestore(=alice,=charlie,=sid,statepack_c(hs_860: handshakestate,cs1_861: cipherstate,cs2_862: cipherstate)) in
        {310}let hs_863: handshakestate = handshakestatesetcs(hs_860,cs1_861) in
        {311}let v_864: bitstring = catch-fail(handshakestateunpack(hs_863)) in
        {312}let v_865: bitstring = catch-fail((empty,empty,empty)) in
        {313}let v_866: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_864))) in
        {314}let v_867: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_866))) in
        {315}let v_868: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_867),2-proj-2-tuple(v_867),3-proj-3-tuple(v_866),msg_c(alice,charlie,sid))) in
        {316}let v_869: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_866))) in
        {317}let v_870: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_867))) && success?(1-proj-3-tuple(v_866))) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-2-tuple(v_869))))) then cipherstatepack(1-proj-2-tuple(v_869),increment_nonce(2-proj-2-tuple(v_867))) else fail-any) else fail-any)) in
        {318}let v_871: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_866)) && success?(1-proj-3-tuple(v_866))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-2-tuple(v_867))))) then (if not-caught-fail(v_868) then (if not-caught-fail(v_870) then (v_870,v_868) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {319}let v_872: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_871),2-proj-3-tuple(v_866),3-proj-3-tuple(v_866)))) in
        {320}let v_873: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_871)) && success?(symmetricstatepack(1-proj-2-tuple(v_871),2-proj-3-tuple(v_866),3-proj-3-tuple(v_866)))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then symmetricstatepack(1-proj-3-tuple(v_872),2-proj-3-tuple(v_872),hash(3-proj-3-tuple(v_872),2-proj-2-tuple(v_871))) else fail-any) else fail-any)) in
        {321}let v_874: bitstring = catch-fail((if success?(1-proj-7-tuple(v_864)) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-3-tuple(v_866))))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then (if not-caught-fail(v_873) then (v_873,2-proj-2-tuple(v_871)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {322}let v_875: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_874),2-proj-7-tuple(v_864),3-proj-7-tuple(v_864),4-proj-7-tuple(v_864),5-proj-7-tuple(v_864),6-proj-7-tuple(v_864),7-proj-7-tuple(v_864))) in
        {323}let v_876: bitstring = catch-fail(concat3(1-proj-3-tuple(v_865),2-proj-3-tuple(v_865),2-proj-2-tuple(v_874))) in
        {324}let (hs_877: handshakestate,message_c_878: bitstring) = (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-7-tuple(v_864))))) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-3-tuple(v_865))))) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-2-tuple(v_874))))) then (if not-caught-fail(v_875) then (if not-caught-fail(v_876) then (v_875,v_876) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {325}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {326}insert statestore(alice,charlie,sid,statepack_d(hs_877,handshakestategetcs(hs_877),cs2_862));
        {327}out(pub, message_c_878)
    ) | (
        {329}!
        {349}get statestore(=alice,=charlie,=sid,statepack_d(hs_879: handshakestate,cs1_880: cipherstate,cs2_881: cipherstate)) in
        {330}let hs_882: handshakestate = handshakestatesetcs(hs_879,cs2_881) in
        {331}in(pub, message_d_883: bitstring);
        {332}let v_884: bitstring = catch-fail(handshakestateunpack(hs_882)) in
        {333}let v_885: bitstring = catch-fail(deconcat3(message_d_883)) in
        {334}let v_886: bool = catch-fail(true) in
        {335}let v_887: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_884))) in
        {336}let v_888: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_887))) in
        {337}let v_889: aead = catch-fail(decrypt(1-proj-2-tuple(v_888),2-proj-2-tuple(v_888),3-proj-3-tuple(v_887),3-proj-3-tuple(v_885))) in
        {338}let v_890: bitstring = catch-fail(aeadunpack(v_889)) in
        {339}let v_891: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_887))) in
        {340}let v_892: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_888))) && success?(1-proj-3-tuple(v_887))) then (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-2-tuple(v_891))))) then cipherstatepack(1-proj-2-tuple(v_891),increment_nonce(2-proj-2-tuple(v_888))) else fail-any) else fail-any)) in
        {341}let v_893: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_885)) && (success?(3-proj-3-tuple(v_887)) && success?(1-proj-3-tuple(v_887)))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then (if not-caught-fail(v_889) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-3-tuple(v_890))))) then (if not-caught-fail(v_892) then (v_892,3-proj-3-tuple(v_890),1-proj-3-tuple(v_890)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {342}let v_894: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_893),2-proj-3-tuple(v_887),3-proj-3-tuple(v_887)))) in
        {343}let v_895: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_885)) && success?(symmetricstatepack(1-proj-3-tuple(v_893),2-proj-3-tuple(v_887),3-proj-3-tuple(v_887)))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-3-tuple(v_894))))) then symmetricstatepack(1-proj-3-tuple(v_894),2-proj-3-tuple(v_894),hash(3-proj-3-tuple(v_894),3-proj-3-tuple(v_885))) else fail-any) else fail-any)) in
        {344}let v_896: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_885)) && success?(1-proj-7-tuple(v_884))) then (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-3-tuple(v_887))))) then (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-3-tuple(v_893))))) then (if not-caught-fail(v_895) then (v_895,2-proj-3-tuple(v_893),3-proj-3-tuple(v_893)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {345}let v_897: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_896),2-proj-7-tuple(v_884),3-proj-7-tuple(v_884),4-proj-7-tuple(v_884),5-proj-7-tuple(v_884),6-proj-7-tuple(v_884),7-proj-7-tuple(v_884))) in
        {346}let (hs_898: handshakestate,plaintext_d_899: bitstring,valid_900: bool) = (if (not-caught-fail(v_884) && success?(is-true(success?(1-proj-7-tuple(v_884))))) then (if (not-caught-fail(v_885) && success?(is-true(success?(1-proj-3-tuple(v_885))))) then (if not-caught-fail(v_886) then (if (not-caught-fail(v_896) && success?(is-true(success?(1-proj-3-tuple(v_896))))) then (if (v_886 && 3-proj-3-tuple(v_896)) then (if not-caught-fail(v_897) then (v_897,2-proj-3-tuple(v_896),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {347}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_899);
        {348}event RecvEnd(valid_900)
    ) | (
        {350}event LeakPsk(phase0,alice,charlie);
        {351}out(pub, key_psk(alice,charlie))
    ) | (
        {352}phase 1;
        {353}event LeakPsk(phase1,alice,charlie);
        {354}out(pub, key_psk(alice,charlie))
    ) | (
        {355}event LeakS(phase0,alice);
        {356}out(pub, key_s(alice))
    ) | (
        {357}phase 1;
        {358}event LeakS(phase1,alice);
        {359}out(pub, key_s(alice))
    )
) | (
    {360}let v_901: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {361}let s_902: keypair = (if not-caught-fail(v_901) then keypairpack(validkey(v_901),key_s(bob)) else fail-any) in
    {362}out(pub, getpublickey(s_902));
    (
        {363}let e_903: keypair = keypairpack(empty,empty) in
        {364}let rs_904: key = empty in
        {365}let re_905: key = empty in
        {366}let v_906: bitstring = catch-fail(hash(somename,empty)) in
        {367}let v_907: key = catch-fail(v_906) in
        {368}let v_908: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {369}let v_909: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_906) then (if not-caught-fail(v_907) then (if not-caught-fail(v_908) then symmetricstatepack(v_908,v_907,v_906) else fail-any) else fail-any) else fail-any))) in
        {370}let v_910: symmetricstate = catch-fail((if success?((if not-caught-fail(v_906) then (if not-caught-fail(v_907) then (if not-caught-fail(v_908) then symmetricstatepack(v_908,v_907,v_906) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-3-tuple(v_909))))) then symmetricstatepack(1-proj-3-tuple(v_909),2-proj-3-tuple(v_909),hash(3-proj-3-tuple(v_909),empty)) else fail-any) else fail-any)) in
        {371}let v_911: bitstring = catch-fail(symmetricstateunpack(v_910)) in
        {372}let v_912: symmetricstate = catch-fail((if success?(getpublickey(s_902)) then (if (not-caught-fail(v_911) && success?(is-true(success?(1-proj-3-tuple(v_911))))) then symmetricstatepack(1-proj-3-tuple(v_911),2-proj-3-tuple(v_911),hash(3-proj-3-tuple(v_911),getpublickey(s_902))) else fail-any) else fail-any)) in
        {373}let hs_913: handshakestate = (if not-caught-fail(v_910) then (if not-caught-fail(v_912) then handshakestatepack(v_912,s_902,e_903,rs_904,re_905,key_psk(alice,bob),false) else fail-any) else fail-any) in
        {374}insert statestore(bob,alice,sid,statepack_a(hs_913))
    ) | (
        {436}get statestore(=bob,=alice,=sid,statepack_a(hs_914: handshakestate)) in
        {375}in(pub, message_a_915: bitstring);
        {376}let v_916: bitstring = catch-fail(handshakestateunpack(hs_914)) in
        {377}let v_917: bitstring = catch-fail(deconcat3(message_a_915)) in
        {378}let v_918: bool = catch-fail(true) in
        {379}let v_919: key = catch-fail(1-proj-3-tuple(v_917)) in
        {380}let v_920: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_916))) in
        {381}let v_921: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_916)) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-3-tuple(v_920))))) then symmetricstatepack(1-proj-3-tuple(v_920),2-proj-3-tuple(v_920),hash(3-proj-3-tuple(v_920),v_919)) else fail-any) else fail-any)) in
        {382}let v_922: bitstring = catch-fail(symmetricstateunpack(v_921)) in
        {383}let v_923: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_922),v_919)) in
        {384}let v_924: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_922),v_919)) in
        {385}let v_925: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_922),v_919)) in
        {386}let v_926: bitstring = catch-fail((if success?(2-proj-3-tuple(v_922)) then (if not-caught-fail(v_923) then (if not-caught-fail(v_924) then (if not-caught-fail(v_925) then (v_923,v_924,v_925) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {387}let v_927: symmetricstate = catch-fail((if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_926)) then cipherstatepack(2-proj-3-tuple(v_926),minnonce) else fail-any),1-proj-3-tuple(v_926),3-proj-3-tuple(v_922)) else fail-any) else fail-any)) in
        {388}let v_928: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_916))) in
        {389}let v_929: bitstring = catch-fail(symmetricstateunpack(v_927)) in
        {390}let v_930: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_929),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-2-tuple(v_928))))) then dhexp(2-proj-2-tuple(v_928),v_919) else fail-any) else fail-any))) in
        {391}let v_931: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_929),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-2-tuple(v_928))))) then dhexp(2-proj-2-tuple(v_928),v_919) else fail-any) else fail-any))) in
        {392}let v_932: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_929),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-2-tuple(v_928))))) then dhexp(2-proj-2-tuple(v_928),v_919) else fail-any) else fail-any))) in
        {393}let v_933: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-2-tuple(v_928))))) then dhexp(2-proj-2-tuple(v_928),v_919) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_929))) then (if not-caught-fail(v_930) then (if not-caught-fail(v_931) then (if not-caught-fail(v_932) then (v_930,v_931,v_932) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {394}let v_934: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-2-tuple(v_928))))) then dhexp(2-proj-2-tuple(v_928),v_919) else fail-any) else fail-any)) then (if (not-caught-fail(v_929) && success?(is-true(success?(1-proj-3-tuple(v_929))))) then (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-3-tuple(v_933))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_933)) then cipherstatepack(2-proj-3-tuple(v_933),minnonce) else fail-any),1-proj-3-tuple(v_933),3-proj-3-tuple(v_929)) else fail-any) else fail-any) else fail-any)) in
        {395}let v_935: bitstring = catch-fail(symmetricstateunpack(v_934)) in
        {396}let v_936: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_935))) in
        {397}let v_937: aead = catch-fail(decrypt(1-proj-2-tuple(v_936),2-proj-2-tuple(v_936),3-proj-3-tuple(v_935),2-proj-3-tuple(v_917))) in
        {398}let v_938: bitstring = catch-fail(aeadunpack(v_937)) in
        {399}let v_939: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_935))) in
        {400}let v_940: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_936))) && success?(1-proj-3-tuple(v_935))) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then cipherstatepack(1-proj-2-tuple(v_939),increment_nonce(2-proj-2-tuple(v_936))) else fail-any) else fail-any)) in
        {401}let v_941: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_917)) && (success?(3-proj-3-tuple(v_935)) && success?(1-proj-3-tuple(v_935)))) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-2-tuple(v_936))))) then (if not-caught-fail(v_937) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-3-tuple(v_938))))) then (if not-caught-fail(v_940) then (v_940,3-proj-3-tuple(v_938),1-proj-3-tuple(v_938)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {402}let v_942: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_941),2-proj-3-tuple(v_935),3-proj-3-tuple(v_935)))) in
        {403}let v_943: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_917)) && success?(symmetricstatepack(1-proj-3-tuple(v_941),2-proj-3-tuple(v_935),3-proj-3-tuple(v_935)))) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-3-tuple(v_942))))) then symmetricstatepack(1-proj-3-tuple(v_942),2-proj-3-tuple(v_942),hash(3-proj-3-tuple(v_942),2-proj-3-tuple(v_917))) else fail-any) else fail-any)) in
        {404}let v_944: bitstring = catch-fail((if success?(2-proj-3-tuple(v_917)) then (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-3-tuple(v_935))))) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-3-tuple(v_941))))) then (if not-caught-fail(v_943) then (v_943,2-proj-3-tuple(v_941),3-proj-3-tuple(v_941)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {405}let v_945: key = catch-fail(2-proj-3-tuple(v_944)) in
        {406}let v_946: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_916))) in
        {407}let v_947: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_944))) in
        {408}let v_948: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_947),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),v_945) else fail-any) else fail-any))) in
        {409}let v_949: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_947),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),v_945) else fail-any) else fail-any))) in
        {410}let v_950: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_947),(if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),v_945) else fail-any) else fail-any))) in
        {411}let v_951: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),v_945) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_947))) then (if not-caught-fail(v_948) then (if not-caught-fail(v_949) then (if not-caught-fail(v_950) then (v_948,v_949,v_950) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {412}let v_952: symmetricstate = catch-fail((if (success?((if success?(2-proj-7-tuple(v_916)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),v_945) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_944))) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_951)) then cipherstatepack(2-proj-3-tuple(v_951),minnonce) else fail-any),1-proj-3-tuple(v_951),3-proj-3-tuple(v_947)) else fail-any) else fail-any) else fail-any)) in
        {413}let v_953: bitstring = catch-fail(symmetricstateunpack(v_952)) in
        {414}let v_954: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_953),6-proj-7-tuple(v_916))) in
        {415}let v_955: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_953),6-proj-7-tuple(v_916))) in
        {416}let v_956: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_953),6-proj-7-tuple(v_916))) in
        {417}let v_957: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_916)) && success?(2-proj-3-tuple(v_953))) then (if not-caught-fail(v_954) then (if not-caught-fail(v_955) then (if not-caught-fail(v_956) then (v_954,v_955,v_956) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {418}let v_958: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_953),1-proj-3-tuple(v_957),3-proj-3-tuple(v_953)))) in
        {419}let v_959: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_957)) && success?(symmetricstatepack(1-proj-3-tuple(v_953),1-proj-3-tuple(v_957),3-proj-3-tuple(v_953)))) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then symmetricstatepack(1-proj-3-tuple(v_958),2-proj-3-tuple(v_958),hash(3-proj-3-tuple(v_958),2-proj-3-tuple(v_957))) else fail-any) else fail-any))) in
        {420}let v_960: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_916)) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-3-tuple(v_957))))) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-3-tuple(v_959))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_957)) then cipherstatepack(3-proj-3-tuple(v_957),minnonce) else fail-any),1-proj-3-tuple(v_957),3-proj-3-tuple(v_959)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {421}let v_961: bitstring = catch-fail(symmetricstateunpack(v_960)) in
        {422}let v_962: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_961))) in
        {423}let v_963: aead = catch-fail(decrypt(1-proj-2-tuple(v_962),2-proj-2-tuple(v_962),3-proj-3-tuple(v_961),3-proj-3-tuple(v_917))) in
        {424}let v_964: bitstring = catch-fail(aeadunpack(v_963)) in
        {425}let v_965: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_961))) in
        {426}let v_966: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_962))) && success?(1-proj-3-tuple(v_961))) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-2-tuple(v_965))))) then cipherstatepack(1-proj-2-tuple(v_965),increment_nonce(2-proj-2-tuple(v_962))) else fail-any) else fail-any)) in
        {427}let v_967: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_917)) && (success?(3-proj-3-tuple(v_961)) && success?(1-proj-3-tuple(v_961)))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-2-tuple(v_962))))) then (if not-caught-fail(v_963) then (if (not-caught-fail(v_964) && success?(is-true(success?(1-proj-3-tuple(v_964))))) then (if not-caught-fail(v_966) then (v_966,3-proj-3-tuple(v_964),1-proj-3-tuple(v_964)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {428}let v_968: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_967),2-proj-3-tuple(v_961),3-proj-3-tuple(v_961)))) in
        {429}let v_969: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_917)) && success?(symmetricstatepack(1-proj-3-tuple(v_967),2-proj-3-tuple(v_961),3-proj-3-tuple(v_961)))) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-3-tuple(v_968))))) then symmetricstatepack(1-proj-3-tuple(v_968),2-proj-3-tuple(v_968),hash(3-proj-3-tuple(v_968),3-proj-3-tuple(v_917))) else fail-any) else fail-any)) in
        {430}let v_970: bitstring = catch-fail((if success?(3-proj-3-tuple(v_917)) then (if (not-caught-fail(v_961) && success?(is-true(success?(1-proj-3-tuple(v_961))))) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-3-tuple(v_967))))) then (if not-caught-fail(v_969) then (v_969,2-proj-3-tuple(v_967),3-proj-3-tuple(v_967)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {431}let v_971: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {432}let v_972: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_970),2-proj-7-tuple(v_916),3-proj-7-tuple(v_916),v_945,v_919,6-proj-7-tuple(v_916),7-proj-7-tuple(v_916))) in
        {433}let (hs_973: handshakestate,plaintext_a: bitstring,valid_974: bool) = (if (not-caught-fail(v_916) && success?(is-true(success?(1-proj-7-tuple(v_916))))) then (if (not-caught-fail(v_917) && success?(is-true(success?(1-proj-3-tuple(v_917))))) then (if not-caught-fail(v_918) then (if not-caught-fail(v_919) then (if not-caught-fail(v_921) then (if not-caught-fail(v_927) then (if not-caught-fail(v_934) then (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-3-tuple(v_944))))) then (if not-caught-fail(v_945) then (if not-caught-fail(v_952) then (if not-caught-fail(v_960) then (if (not-caught-fail(v_970) && success?(is-true(success?(1-proj-3-tuple(v_970))))) then (if ((3-proj-3-tuple(v_944) && 3-proj-3-tuple(v_970)) && (v_945 = getpublickey((if not-caught-fail(v_971) then keypairpack(validkey(v_971),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_972) then (v_972,2-proj-3-tuple(v_970),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {434}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {435}insert statestore(bob,alice,sid,statepack_b(hs_973))
    ) | (
        {487}get statestore(=bob,=alice,=sid,statepack_b(hs_975: handshakestate)) in
        {437}let v_976: bitstring = catch-fail(handshakestateunpack(hs_975)) in
        {438}let v_977: bitstring = catch-fail((empty,empty,empty)) in
        {439}let v_978: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {440}let v_979: keypair = catch-fail((if not-caught-fail(v_978) then keypairpack(validkey(v_978),key_e(bob,alice,sid)) else fail-any)) in
        {441}let v_980: bitstring = catch-fail(getpublickey(v_979)) in
        {442}let v_981: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_976))) in
        {443}let v_982: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_976)) then (if (not-caught-fail(v_981) && success?(is-true(success?(1-proj-3-tuple(v_981))))) then symmetricstatepack(1-proj-3-tuple(v_981),2-proj-3-tuple(v_981),hash(3-proj-3-tuple(v_981),v_980)) else fail-any) else fail-any)) in
        {444}let v_983: bitstring = catch-fail(symmetricstateunpack(v_982)) in
        {445}let v_984: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_983),getpublickey(v_979))) in
        {446}let v_985: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_983),getpublickey(v_979))) in
        {447}let v_986: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_983),getpublickey(v_979))) in
        {448}let v_987: bitstring = catch-fail((if (success?(getpublickey(v_979)) && success?(2-proj-3-tuple(v_983))) then (if not-caught-fail(v_984) then (if not-caught-fail(v_985) then (if not-caught-fail(v_986) then (v_984,v_985,v_986) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_988: symmetricstate = catch-fail((if success?(getpublickey(v_979)) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-3-tuple(v_987))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_987)) then cipherstatepack(2-proj-3-tuple(v_987),minnonce) else fail-any),1-proj-3-tuple(v_987),3-proj-3-tuple(v_983)) else fail-any) else fail-any) else fail-any)) in
        {450}let v_989: bitstring = catch-fail(keypairunpack(v_979)) in
        {451}let v_990: bitstring = catch-fail(symmetricstateunpack(v_988)) in
        {452}let v_991: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_990),(if success?(5-proj-7-tuple(v_976)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then dhexp(2-proj-2-tuple(v_989),5-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {453}let v_992: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_990),(if success?(5-proj-7-tuple(v_976)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then dhexp(2-proj-2-tuple(v_989),5-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {454}let v_993: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_990),(if success?(5-proj-7-tuple(v_976)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then dhexp(2-proj-2-tuple(v_989),5-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {455}let v_994: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_976)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then dhexp(2-proj-2-tuple(v_989),5-proj-7-tuple(v_976)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_990))) then (if not-caught-fail(v_991) then (if not-caught-fail(v_992) then (if not-caught-fail(v_993) then (v_991,v_992,v_993) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_995: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_976)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then dhexp(2-proj-2-tuple(v_989),5-proj-7-tuple(v_976)) else fail-any) else fail-any)) then (if (not-caught-fail(v_990) && success?(is-true(success?(1-proj-3-tuple(v_990))))) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_994)) then cipherstatepack(2-proj-3-tuple(v_994),minnonce) else fail-any),1-proj-3-tuple(v_994),3-proj-3-tuple(v_990)) else fail-any) else fail-any) else fail-any)) in
        {457}let v_996: bitstring = catch-fail(keypairunpack(v_979)) in
        {458}let v_997: bitstring = catch-fail(symmetricstateunpack(v_995)) in
        {459}let v_998: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_997),(if success?(4-proj-7-tuple(v_976)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),4-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {460}let v_999: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_997),(if success?(4-proj-7-tuple(v_976)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),4-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {461}let v_1000: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_997),(if success?(4-proj-7-tuple(v_976)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),4-proj-7-tuple(v_976)) else fail-any) else fail-any))) in
        {462}let v_1001: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_976)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),4-proj-7-tuple(v_976)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_997))) then (if not-caught-fail(v_998) then (if not-caught-fail(v_999) then (if not-caught-fail(v_1000) then (v_998,v_999,v_1000) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {463}let v_1002: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_976)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),4-proj-7-tuple(v_976)) else fail-any) else fail-any)) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-3-tuple(v_997))))) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-3-tuple(v_1001))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1001)) then cipherstatepack(2-proj-3-tuple(v_1001),minnonce) else fail-any),1-proj-3-tuple(v_1001),3-proj-3-tuple(v_997)) else fail-any) else fail-any) else fail-any)) in
        {464}let v_1003: bitstring = catch-fail(symmetricstateunpack(v_1002)) in
        {465}let v_1004: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1003))) in
        {466}let v_1005: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1004),2-proj-2-tuple(v_1004),3-proj-3-tuple(v_1003),msg_b(bob,alice,sid))) in
        {467}let v_1006: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1003))) in
        {468}let v_1007: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1004))) && success?(1-proj-3-tuple(v_1003))) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-2-tuple(v_1006))))) then cipherstatepack(1-proj-2-tuple(v_1006),increment_nonce(2-proj-2-tuple(v_1004))) else fail-any) else fail-any)) in
        {469}let v_1008: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1003)) && success?(1-proj-3-tuple(v_1003))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-2-tuple(v_1004))))) then (if not-caught-fail(v_1005) then (if not-caught-fail(v_1007) then (v_1007,v_1005) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {470}let v_1009: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1008),2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)))) in
        {471}let v_1010: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1008)) && success?(symmetricstatepack(1-proj-2-tuple(v_1008),2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)))) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then symmetricstatepack(1-proj-3-tuple(v_1009),2-proj-3-tuple(v_1009),hash(3-proj-3-tuple(v_1009),2-proj-2-tuple(v_1008))) else fail-any) else fail-any)) in
        {472}let v_1011: bitstring = catch-fail((if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-2-tuple(v_1008))))) then (if not-caught-fail(v_1010) then (v_1010,2-proj-2-tuple(v_1008)) else fail-any) else fail-any) else fail-any)) in
        {473}let v_1012: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1011),2-proj-7-tuple(v_976),v_979,4-proj-7-tuple(v_976),5-proj-7-tuple(v_976),6-proj-7-tuple(v_976),7-proj-7-tuple(v_976))) in
        {474}let v_1013: bitstring = catch-fail(concat3(v_980,2-proj-3-tuple(v_977),2-proj-2-tuple(v_1011))) in
        {475}let v_1014: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1011))) in
        {476}let v_1015: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1014),zero)) in
        {477}let v_1016: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1014),zero)) in
        {478}let v_1017: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1014),zero)) in
        {479}let v_1018: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1014)) then (if not-caught-fail(v_1015) then (if not-caught-fail(v_1016) then (if not-caught-fail(v_1017) then (v_1015,v_1016,v_1017) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {480}let v_1019: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1018)) then cipherstatepack(1-proj-3-tuple(v_1018),minnonce) else fail-any)) in
        {481}let v_1020: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1018)) then cipherstatepack(2-proj-3-tuple(v_1018),minnonce) else fail-any)) in
        {482}let v_1021: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1011)) then (if (not-caught-fail(v_1014) && success?(is-true(success?(1-proj-3-tuple(v_1014))))) then (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then (if not-caught-fail(v_1019) then (if not-caught-fail(v_1020) then (1-proj-2-tuple(v_1011),v_1019,v_1020) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {483}let (hs_1022: handshakestate,message_b_1023: bitstring,cs1_1024: cipherstate,cs2_1025: cipherstate) = (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-7-tuple(v_976))))) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-3-tuple(v_977))))) then (if not-caught-fail(v_979) then (if not-caught-fail(v_980) then (if not-caught-fail(v_982) then (if not-caught-fail(v_988) then (if not-caught-fail(v_995) then (if not-caught-fail(v_1002) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then (if not-caught-fail(v_1012) then (if not-caught-fail(v_1013) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-3-tuple(v_1021))))) then (v_1012,v_1013,2-proj-3-tuple(v_1021),3-proj-3-tuple(v_1021)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {484}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {485}insert statestore(bob,alice,sid,statepack_c(hs_1022,cs1_1024,cs2_1025));
        {486}out(pub, message_b_1023)
    ) | (
        {488}!
        {508}get statestore(=bob,=alice,=sid,statepack_c(hs_1026: handshakestate,cs1_1027: cipherstate,cs2_1028: cipherstate)) in
        {489}let hs_1029: handshakestate = handshakestatesetcs(hs_1026,cs1_1027) in
        {490}in(pub, message_c_1030: bitstring);
        {491}let v_1031: bitstring = catch-fail(handshakestateunpack(hs_1029)) in
        {492}let v_1032: bitstring = catch-fail(deconcat3(message_c_1030)) in
        {493}let v_1033: bool = catch-fail(true) in
        {494}let v_1034: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1031))) in
        {495}let v_1035: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1034))) in
        {496}let v_1036: aead = catch-fail(decrypt(1-proj-2-tuple(v_1035),2-proj-2-tuple(v_1035),3-proj-3-tuple(v_1034),3-proj-3-tuple(v_1032))) in
        {497}let v_1037: bitstring = catch-fail(aeadunpack(v_1036)) in
        {498}let v_1038: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1034))) in
        {499}let v_1039: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1035))) && success?(1-proj-3-tuple(v_1034))) then (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-2-tuple(v_1038))))) then cipherstatepack(1-proj-2-tuple(v_1038),increment_nonce(2-proj-2-tuple(v_1035))) else fail-any) else fail-any)) in
        {500}let v_1040: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1032)) && (success?(3-proj-3-tuple(v_1034)) && success?(1-proj-3-tuple(v_1034)))) then (if (not-caught-fail(v_1035) && success?(is-true(success?(1-proj-2-tuple(v_1035))))) then (if not-caught-fail(v_1036) then (if (not-caught-fail(v_1037) && success?(is-true(success?(1-proj-3-tuple(v_1037))))) then (if not-caught-fail(v_1039) then (v_1039,3-proj-3-tuple(v_1037),1-proj-3-tuple(v_1037)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {501}let v_1041: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1040),2-proj-3-tuple(v_1034),3-proj-3-tuple(v_1034)))) in
        {502}let v_1042: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1032)) && success?(symmetricstatepack(1-proj-3-tuple(v_1040),2-proj-3-tuple(v_1034),3-proj-3-tuple(v_1034)))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-3-tuple(v_1041))))) then symmetricstatepack(1-proj-3-tuple(v_1041),2-proj-3-tuple(v_1041),hash(3-proj-3-tuple(v_1041),3-proj-3-tuple(v_1032))) else fail-any) else fail-any)) in
        {503}let v_1043: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1032)) && success?(1-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-3-tuple(v_1034))))) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-3-tuple(v_1040))))) then (if not-caught-fail(v_1042) then (v_1042,2-proj-3-tuple(v_1040),3-proj-3-tuple(v_1040)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {504}let v_1044: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1043),2-proj-7-tuple(v_1031),3-proj-7-tuple(v_1031),4-proj-7-tuple(v_1031),5-proj-7-tuple(v_1031),6-proj-7-tuple(v_1031),7-proj-7-tuple(v_1031))) in
        {505}let (hs_1045: handshakestate,plaintext_c: bitstring,valid_1046: bool) = (if (not-caught-fail(v_1031) && success?(is-true(success?(1-proj-7-tuple(v_1031))))) then (if (not-caught-fail(v_1032) && success?(is-true(success?(1-proj-3-tuple(v_1032))))) then (if not-caught-fail(v_1033) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-3-tuple(v_1043))))) then (if (v_1033 && 3-proj-3-tuple(v_1043)) then (if not-caught-fail(v_1044) then (v_1044,2-proj-3-tuple(v_1043),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {506}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {507}insert statestore(bob,alice,sid,statepack_d(hs_1045,handshakestategetcs(hs_1045),cs2_1028))
    ) | (
        {509}!
        {527}get statestore(=bob,=alice,=sid,statepack_d(hs_1047: handshakestate,cs1_1048: cipherstate,cs2_1049: cipherstate)) in
        {510}let hs_1050: handshakestate = handshakestatesetcs(hs_1047,cs2_1049) in
        {511}let v_1051: bitstring = catch-fail(handshakestateunpack(hs_1050)) in
        {512}let v_1052: bitstring = catch-fail((empty,empty,empty)) in
        {513}let v_1053: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1051))) in
        {514}let v_1054: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1053))) in
        {515}let v_1055: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1054),2-proj-2-tuple(v_1054),3-proj-3-tuple(v_1053),msg_d(bob,alice,sid))) in
        {516}let v_1056: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1053))) in
        {517}let v_1057: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1054))) && success?(1-proj-3-tuple(v_1053))) then (if (not-caught-fail(v_1056) && success?(is-true(success?(1-proj-2-tuple(v_1056))))) then cipherstatepack(1-proj-2-tuple(v_1056),increment_nonce(2-proj-2-tuple(v_1054))) else fail-any) else fail-any)) in
        {518}let v_1058: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1053)) && success?(1-proj-3-tuple(v_1053))) then (if (not-caught-fail(v_1054) && success?(is-true(success?(1-proj-2-tuple(v_1054))))) then (if not-caught-fail(v_1055) then (if not-caught-fail(v_1057) then (v_1057,v_1055) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {519}let v_1059: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1058),2-proj-3-tuple(v_1053),3-proj-3-tuple(v_1053)))) in
        {520}let v_1060: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1058)) && success?(symmetricstatepack(1-proj-2-tuple(v_1058),2-proj-3-tuple(v_1053),3-proj-3-tuple(v_1053)))) then (if (not-caught-fail(v_1059) && success?(is-true(success?(1-proj-3-tuple(v_1059))))) then symmetricstatepack(1-proj-3-tuple(v_1059),2-proj-3-tuple(v_1059),hash(3-proj-3-tuple(v_1059),2-proj-2-tuple(v_1058))) else fail-any) else fail-any)) in
        {521}let v_1061: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1051)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-3-tuple(v_1053))))) then (if (not-caught-fail(v_1058) && success?(is-true(success?(1-proj-2-tuple(v_1058))))) then (if not-caught-fail(v_1060) then (v_1060,2-proj-2-tuple(v_1058)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {522}let v_1062: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1061),2-proj-7-tuple(v_1051),3-proj-7-tuple(v_1051),4-proj-7-tuple(v_1051),5-proj-7-tuple(v_1051),6-proj-7-tuple(v_1051),7-proj-7-tuple(v_1051))) in
        {523}let v_1063: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1052),2-proj-3-tuple(v_1052),2-proj-2-tuple(v_1061))) in
        {524}let (hs_1064: handshakestate,message_d_1065: bitstring) = (if (not-caught-fail(v_1051) && success?(is-true(success?(1-proj-7-tuple(v_1051))))) then (if (not-caught-fail(v_1052) && success?(is-true(success?(1-proj-3-tuple(v_1052))))) then (if (not-caught-fail(v_1061) && success?(is-true(success?(1-proj-2-tuple(v_1061))))) then (if not-caught-fail(v_1062) then (if not-caught-fail(v_1063) then (v_1062,v_1063) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {525}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {526}out(pub, message_d_1065)
    ) | (
        {528}event LeakPsk(phase0,alice,bob);
        {529}out(pub, key_psk(alice,bob))
    ) | (
        {530}phase 1;
        {531}event LeakPsk(phase1,alice,bob);
        {532}out(pub, key_psk(alice,bob))
    ) | (
        {533}event LeakS(phase0,bob);
        {534}out(pub, key_s(bob))
    ) | (
        {535}phase 1;
        {536}event LeakS(phase1,bob);
        {537}out(pub, key_s(bob))
    )
) | (
    {538}let v_1066: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {539}let s_1067: keypair = (if not-caught-fail(v_1066) then keypairpack(validkey(v_1066),key_s(bob)) else fail-any) in
    {540}out(pub, getpublickey(s_1067));
    (
        {541}let e_1068: keypair = keypairpack(empty,empty) in
        {542}let rs_1069: key = empty in
        {543}let re_1070: key = empty in
        {544}let v_1071: bitstring = catch-fail(hash(somename,empty)) in
        {545}let v_1072: key = catch-fail(v_1071) in
        {546}let v_1073: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {547}let v_1074: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1071) then (if not-caught-fail(v_1072) then (if not-caught-fail(v_1073) then symmetricstatepack(v_1073,v_1072,v_1071) else fail-any) else fail-any) else fail-any))) in
        {548}let v_1075: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1071) then (if not-caught-fail(v_1072) then (if not-caught-fail(v_1073) then symmetricstatepack(v_1073,v_1072,v_1071) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1074) && success?(is-true(success?(1-proj-3-tuple(v_1074))))) then symmetricstatepack(1-proj-3-tuple(v_1074),2-proj-3-tuple(v_1074),hash(3-proj-3-tuple(v_1074),empty)) else fail-any) else fail-any)) in
        {549}let v_1076: bitstring = catch-fail(symmetricstateunpack(v_1075)) in
        {550}let v_1077: symmetricstate = catch-fail((if success?(getpublickey(s_1067)) then (if (not-caught-fail(v_1076) && success?(is-true(success?(1-proj-3-tuple(v_1076))))) then symmetricstatepack(1-proj-3-tuple(v_1076),2-proj-3-tuple(v_1076),hash(3-proj-3-tuple(v_1076),getpublickey(s_1067))) else fail-any) else fail-any)) in
        {551}let hs_1078: handshakestate = (if not-caught-fail(v_1075) then (if not-caught-fail(v_1077) then handshakestatepack(v_1077,s_1067,e_1068,rs_1069,re_1070,key_psk(charlie,bob),false) else fail-any) else fail-any) in
        {552}insert statestore(bob,charlie,sid,statepack_a(hs_1078))
    ) | (
        {614}get statestore(=bob,=charlie,=sid,statepack_a(hs_1079: handshakestate)) in
        {553}in(pub, message_a_1080: bitstring);
        {554}let v_1081: bitstring = catch-fail(handshakestateunpack(hs_1079)) in
        {555}let v_1082: bitstring = catch-fail(deconcat3(message_a_1080)) in
        {556}let v_1083: bool = catch-fail(true) in
        {557}let v_1084: key = catch-fail(1-proj-3-tuple(v_1082)) in
        {558}let v_1085: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1081))) in
        {559}let v_1086: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1085) && success?(is-true(success?(1-proj-3-tuple(v_1085))))) then symmetricstatepack(1-proj-3-tuple(v_1085),2-proj-3-tuple(v_1085),hash(3-proj-3-tuple(v_1085),v_1084)) else fail-any) else fail-any)) in
        {560}let v_1087: bitstring = catch-fail(symmetricstateunpack(v_1086)) in
        {561}let v_1088: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1087),v_1084)) in
        {562}let v_1089: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1087),v_1084)) in
        {563}let v_1090: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1087),v_1084)) in
        {564}let v_1091: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1087)) then (if not-caught-fail(v_1088) then (if not-caught-fail(v_1089) then (if not-caught-fail(v_1090) then (v_1088,v_1089,v_1090) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {565}let v_1092: symmetricstate = catch-fail((if (not-caught-fail(v_1087) && success?(is-true(success?(1-proj-3-tuple(v_1087))))) then (if (not-caught-fail(v_1091) && success?(is-true(success?(1-proj-3-tuple(v_1091))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1091)) then cipherstatepack(2-proj-3-tuple(v_1091),minnonce) else fail-any),1-proj-3-tuple(v_1091),3-proj-3-tuple(v_1087)) else fail-any) else fail-any)) in
        {566}let v_1093: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1081))) in
        {567}let v_1094: bitstring = catch-fail(symmetricstateunpack(v_1092)) in
        {568}let v_1095: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1094),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then dhexp(2-proj-2-tuple(v_1093),v_1084) else fail-any) else fail-any))) in
        {569}let v_1096: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1094),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then dhexp(2-proj-2-tuple(v_1093),v_1084) else fail-any) else fail-any))) in
        {570}let v_1097: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1094),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then dhexp(2-proj-2-tuple(v_1093),v_1084) else fail-any) else fail-any))) in
        {571}let v_1098: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then dhexp(2-proj-2-tuple(v_1093),v_1084) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1094))) then (if not-caught-fail(v_1095) then (if not-caught-fail(v_1096) then (if not-caught-fail(v_1097) then (v_1095,v_1096,v_1097) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {572}let v_1099: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then dhexp(2-proj-2-tuple(v_1093),v_1084) else fail-any) else fail-any)) then (if (not-caught-fail(v_1094) && success?(is-true(success?(1-proj-3-tuple(v_1094))))) then (if (not-caught-fail(v_1098) && success?(is-true(success?(1-proj-3-tuple(v_1098))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1098)) then cipherstatepack(2-proj-3-tuple(v_1098),minnonce) else fail-any),1-proj-3-tuple(v_1098),3-proj-3-tuple(v_1094)) else fail-any) else fail-any) else fail-any)) in
        {573}let v_1100: bitstring = catch-fail(symmetricstateunpack(v_1099)) in
        {574}let v_1101: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1100))) in
        {575}let v_1102: aead = catch-fail(decrypt(1-proj-2-tuple(v_1101),2-proj-2-tuple(v_1101),3-proj-3-tuple(v_1100),2-proj-3-tuple(v_1082))) in
        {576}let v_1103: bitstring = catch-fail(aeadunpack(v_1102)) in
        {577}let v_1104: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1100))) in
        {578}let v_1105: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1101))) && success?(1-proj-3-tuple(v_1100))) then (if (not-caught-fail(v_1104) && success?(is-true(success?(1-proj-2-tuple(v_1104))))) then cipherstatepack(1-proj-2-tuple(v_1104),increment_nonce(2-proj-2-tuple(v_1101))) else fail-any) else fail-any)) in
        {579}let v_1106: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1082)) && (success?(3-proj-3-tuple(v_1100)) && success?(1-proj-3-tuple(v_1100)))) then (if (not-caught-fail(v_1101) && success?(is-true(success?(1-proj-2-tuple(v_1101))))) then (if not-caught-fail(v_1102) then (if (not-caught-fail(v_1103) && success?(is-true(success?(1-proj-3-tuple(v_1103))))) then (if not-caught-fail(v_1105) then (v_1105,3-proj-3-tuple(v_1103),1-proj-3-tuple(v_1103)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {580}let v_1107: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1106),2-proj-3-tuple(v_1100),3-proj-3-tuple(v_1100)))) in
        {581}let v_1108: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1082)) && success?(symmetricstatepack(1-proj-3-tuple(v_1106),2-proj-3-tuple(v_1100),3-proj-3-tuple(v_1100)))) then (if (not-caught-fail(v_1107) && success?(is-true(success?(1-proj-3-tuple(v_1107))))) then symmetricstatepack(1-proj-3-tuple(v_1107),2-proj-3-tuple(v_1107),hash(3-proj-3-tuple(v_1107),2-proj-3-tuple(v_1082))) else fail-any) else fail-any)) in
        {582}let v_1109: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1082)) then (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-3-tuple(v_1100))))) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-3-tuple(v_1106))))) then (if not-caught-fail(v_1108) then (v_1108,2-proj-3-tuple(v_1106),3-proj-3-tuple(v_1106)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {583}let v_1110: key = catch-fail(2-proj-3-tuple(v_1109)) in
        {584}let v_1111: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1081))) in
        {585}let v_1112: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1109))) in
        {586}let v_1113: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1112),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-2-tuple(v_1111))))) then dhexp(2-proj-2-tuple(v_1111),v_1110) else fail-any) else fail-any))) in
        {587}let v_1114: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1112),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-2-tuple(v_1111))))) then dhexp(2-proj-2-tuple(v_1111),v_1110) else fail-any) else fail-any))) in
        {588}let v_1115: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1112),(if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-2-tuple(v_1111))))) then dhexp(2-proj-2-tuple(v_1111),v_1110) else fail-any) else fail-any))) in
        {589}let v_1116: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-2-tuple(v_1111))))) then dhexp(2-proj-2-tuple(v_1111),v_1110) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1112))) then (if not-caught-fail(v_1113) then (if not-caught-fail(v_1114) then (if not-caught-fail(v_1115) then (v_1113,v_1114,v_1115) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {590}let v_1117: symmetricstate = catch-fail((if (success?((if success?(2-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-2-tuple(v_1111))))) then dhexp(2-proj-2-tuple(v_1111),v_1110) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1109))) then (if (not-caught-fail(v_1112) && success?(is-true(success?(1-proj-3-tuple(v_1112))))) then (if (not-caught-fail(v_1116) && success?(is-true(success?(1-proj-3-tuple(v_1116))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1116)) then cipherstatepack(2-proj-3-tuple(v_1116),minnonce) else fail-any),1-proj-3-tuple(v_1116),3-proj-3-tuple(v_1112)) else fail-any) else fail-any) else fail-any)) in
        {591}let v_1118: bitstring = catch-fail(symmetricstateunpack(v_1117)) in
        {592}let v_1119: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1118),6-proj-7-tuple(v_1081))) in
        {593}let v_1120: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1118),6-proj-7-tuple(v_1081))) in
        {594}let v_1121: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1118),6-proj-7-tuple(v_1081))) in
        {595}let v_1122: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1081)) && success?(2-proj-3-tuple(v_1118))) then (if not-caught-fail(v_1119) then (if not-caught-fail(v_1120) then (if not-caught-fail(v_1121) then (v_1119,v_1120,v_1121) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {596}let v_1123: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1118),1-proj-3-tuple(v_1122),3-proj-3-tuple(v_1118)))) in
        {597}let v_1124: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1122)) && success?(symmetricstatepack(1-proj-3-tuple(v_1118),1-proj-3-tuple(v_1122),3-proj-3-tuple(v_1118)))) then (if (not-caught-fail(v_1123) && success?(is-true(success?(1-proj-3-tuple(v_1123))))) then symmetricstatepack(1-proj-3-tuple(v_1123),2-proj-3-tuple(v_1123),hash(3-proj-3-tuple(v_1123),2-proj-3-tuple(v_1122))) else fail-any) else fail-any))) in
        {598}let v_1125: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1081)) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then (if (not-caught-fail(v_1122) && success?(is-true(success?(1-proj-3-tuple(v_1122))))) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-3-tuple(v_1124))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1122)) then cipherstatepack(3-proj-3-tuple(v_1122),minnonce) else fail-any),1-proj-3-tuple(v_1122),3-proj-3-tuple(v_1124)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {599}let v_1126: bitstring = catch-fail(symmetricstateunpack(v_1125)) in
        {600}let v_1127: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1126))) in
        {601}let v_1128: aead = catch-fail(decrypt(1-proj-2-tuple(v_1127),2-proj-2-tuple(v_1127),3-proj-3-tuple(v_1126),3-proj-3-tuple(v_1082))) in
        {602}let v_1129: bitstring = catch-fail(aeadunpack(v_1128)) in
        {603}let v_1130: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1126))) in
        {604}let v_1131: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1127))) && success?(1-proj-3-tuple(v_1126))) then (if (not-caught-fail(v_1130) && success?(is-true(success?(1-proj-2-tuple(v_1130))))) then cipherstatepack(1-proj-2-tuple(v_1130),increment_nonce(2-proj-2-tuple(v_1127))) else fail-any) else fail-any)) in
        {605}let v_1132: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1082)) && (success?(3-proj-3-tuple(v_1126)) && success?(1-proj-3-tuple(v_1126)))) then (if (not-caught-fail(v_1127) && success?(is-true(success?(1-proj-2-tuple(v_1127))))) then (if not-caught-fail(v_1128) then (if (not-caught-fail(v_1129) && success?(is-true(success?(1-proj-3-tuple(v_1129))))) then (if not-caught-fail(v_1131) then (v_1131,3-proj-3-tuple(v_1129),1-proj-3-tuple(v_1129)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {606}let v_1133: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1132),2-proj-3-tuple(v_1126),3-proj-3-tuple(v_1126)))) in
        {607}let v_1134: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1082)) && success?(symmetricstatepack(1-proj-3-tuple(v_1132),2-proj-3-tuple(v_1126),3-proj-3-tuple(v_1126)))) then (if (not-caught-fail(v_1133) && success?(is-true(success?(1-proj-3-tuple(v_1133))))) then symmetricstatepack(1-proj-3-tuple(v_1133),2-proj-3-tuple(v_1133),hash(3-proj-3-tuple(v_1133),3-proj-3-tuple(v_1082))) else fail-any) else fail-any)) in
        {608}let v_1135: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1082)) then (if (not-caught-fail(v_1126) && success?(is-true(success?(1-proj-3-tuple(v_1126))))) then (if (not-caught-fail(v_1132) && success?(is-true(success?(1-proj-3-tuple(v_1132))))) then (if not-caught-fail(v_1134) then (v_1134,2-proj-3-tuple(v_1132),3-proj-3-tuple(v_1132)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {609}let v_1136: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {610}let v_1137: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1135),2-proj-7-tuple(v_1081),3-proj-7-tuple(v_1081),v_1110,v_1084,6-proj-7-tuple(v_1081),7-proj-7-tuple(v_1081))) in
        {611}let (hs_1138: handshakestate,plaintext_a_1139: bitstring,valid_1140: bool) = (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-7-tuple(v_1081))))) then (if (not-caught-fail(v_1082) && success?(is-true(success?(1-proj-3-tuple(v_1082))))) then (if not-caught-fail(v_1083) then (if not-caught-fail(v_1084) then (if not-caught-fail(v_1086) then (if not-caught-fail(v_1092) then (if not-caught-fail(v_1099) then (if (not-caught-fail(v_1109) && success?(is-true(success?(1-proj-3-tuple(v_1109))))) then (if not-caught-fail(v_1110) then (if not-caught-fail(v_1117) then (if not-caught-fail(v_1125) then (if (not-caught-fail(v_1135) && success?(is-true(success?(1-proj-3-tuple(v_1135))))) then (if ((3-proj-3-tuple(v_1109) && 3-proj-3-tuple(v_1135)) && (v_1110 = getpublickey((if not-caught-fail(v_1136) then keypairpack(validkey(v_1136),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1137) then (v_1137,2-proj-3-tuple(v_1135),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {612}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1139);
        {613}insert statestore(bob,charlie,sid,statepack_b(hs_1138))
    ) | (
        {665}get statestore(=bob,=charlie,=sid,statepack_b(hs_1141: handshakestate)) in
        {615}let v_1142: bitstring = catch-fail(handshakestateunpack(hs_1141)) in
        {616}let v_1143: bitstring = catch-fail((empty,empty,empty)) in
        {617}let v_1144: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {618}let v_1145: keypair = catch-fail((if not-caught-fail(v_1144) then keypairpack(validkey(v_1144),key_e(bob,charlie,sid)) else fail-any)) in
        {619}let v_1146: bitstring = catch-fail(getpublickey(v_1145)) in
        {620}let v_1147: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1142))) in
        {621}let v_1148: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then symmetricstatepack(1-proj-3-tuple(v_1147),2-proj-3-tuple(v_1147),hash(3-proj-3-tuple(v_1147),v_1146)) else fail-any) else fail-any)) in
        {622}let v_1149: bitstring = catch-fail(symmetricstateunpack(v_1148)) in
        {623}let v_1150: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1149),getpublickey(v_1145))) in
        {624}let v_1151: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1149),getpublickey(v_1145))) in
        {625}let v_1152: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1149),getpublickey(v_1145))) in
        {626}let v_1153: bitstring = catch-fail((if (success?(getpublickey(v_1145)) && success?(2-proj-3-tuple(v_1149))) then (if not-caught-fail(v_1150) then (if not-caught-fail(v_1151) then (if not-caught-fail(v_1152) then (v_1150,v_1151,v_1152) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {627}let v_1154: symmetricstate = catch-fail((if success?(getpublickey(v_1145)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-3-tuple(v_1149))))) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-3-tuple(v_1153))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1153)) then cipherstatepack(2-proj-3-tuple(v_1153),minnonce) else fail-any),1-proj-3-tuple(v_1153),3-proj-3-tuple(v_1149)) else fail-any) else fail-any) else fail-any)) in
        {628}let v_1155: bitstring = catch-fail(keypairunpack(v_1145)) in
        {629}let v_1156: bitstring = catch-fail(symmetricstateunpack(v_1154)) in
        {630}let v_1157: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1156),(if success?(5-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then dhexp(2-proj-2-tuple(v_1155),5-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {631}let v_1158: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1156),(if success?(5-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then dhexp(2-proj-2-tuple(v_1155),5-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {632}let v_1159: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1156),(if success?(5-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then dhexp(2-proj-2-tuple(v_1155),5-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {633}let v_1160: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then dhexp(2-proj-2-tuple(v_1155),5-proj-7-tuple(v_1142)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1156))) then (if not-caught-fail(v_1157) then (if not-caught-fail(v_1158) then (if not-caught-fail(v_1159) then (v_1157,v_1158,v_1159) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {634}let v_1161: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then dhexp(2-proj-2-tuple(v_1155),5-proj-7-tuple(v_1142)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-3-tuple(v_1156))))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-3-tuple(v_1160))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1160)) then cipherstatepack(2-proj-3-tuple(v_1160),minnonce) else fail-any),1-proj-3-tuple(v_1160),3-proj-3-tuple(v_1156)) else fail-any) else fail-any) else fail-any)) in
        {635}let v_1162: bitstring = catch-fail(keypairunpack(v_1145)) in
        {636}let v_1163: bitstring = catch-fail(symmetricstateunpack(v_1161)) in
        {637}let v_1164: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1163),(if success?(4-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then dhexp(2-proj-2-tuple(v_1162),4-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {638}let v_1165: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1163),(if success?(4-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then dhexp(2-proj-2-tuple(v_1162),4-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {639}let v_1166: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1163),(if success?(4-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then dhexp(2-proj-2-tuple(v_1162),4-proj-7-tuple(v_1142)) else fail-any) else fail-any))) in
        {640}let v_1167: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then dhexp(2-proj-2-tuple(v_1162),4-proj-7-tuple(v_1142)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1163))) then (if not-caught-fail(v_1164) then (if not-caught-fail(v_1165) then (if not-caught-fail(v_1166) then (v_1164,v_1165,v_1166) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {641}let v_1168: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_1142)) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then dhexp(2-proj-2-tuple(v_1162),4-proj-7-tuple(v_1142)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-3-tuple(v_1163))))) then (if (not-caught-fail(v_1167) && success?(is-true(success?(1-proj-3-tuple(v_1167))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1167)) then cipherstatepack(2-proj-3-tuple(v_1167),minnonce) else fail-any),1-proj-3-tuple(v_1167),3-proj-3-tuple(v_1163)) else fail-any) else fail-any) else fail-any)) in
        {642}let v_1169: bitstring = catch-fail(symmetricstateunpack(v_1168)) in
        {643}let v_1170: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1169))) in
        {644}let v_1171: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1170),2-proj-2-tuple(v_1170),3-proj-3-tuple(v_1169),msg_b(bob,charlie,sid))) in
        {645}let v_1172: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1169))) in
        {646}let v_1173: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1170))) && success?(1-proj-3-tuple(v_1169))) then (if (not-caught-fail(v_1172) && success?(is-true(success?(1-proj-2-tuple(v_1172))))) then cipherstatepack(1-proj-2-tuple(v_1172),increment_nonce(2-proj-2-tuple(v_1170))) else fail-any) else fail-any)) in
        {647}let v_1174: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1169)) && success?(1-proj-3-tuple(v_1169))) then (if (not-caught-fail(v_1170) && success?(is-true(success?(1-proj-2-tuple(v_1170))))) then (if not-caught-fail(v_1171) then (if not-caught-fail(v_1173) then (v_1173,v_1171) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {648}let v_1175: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1174),2-proj-3-tuple(v_1169),3-proj-3-tuple(v_1169)))) in
        {649}let v_1176: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1174)) && success?(symmetricstatepack(1-proj-2-tuple(v_1174),2-proj-3-tuple(v_1169),3-proj-3-tuple(v_1169)))) then (if (not-caught-fail(v_1175) && success?(is-true(success?(1-proj-3-tuple(v_1175))))) then symmetricstatepack(1-proj-3-tuple(v_1175),2-proj-3-tuple(v_1175),hash(3-proj-3-tuple(v_1175),2-proj-2-tuple(v_1174))) else fail-any) else fail-any)) in
        {650}let v_1177: bitstring = catch-fail((if (not-caught-fail(v_1169) && success?(is-true(success?(1-proj-3-tuple(v_1169))))) then (if (not-caught-fail(v_1174) && success?(is-true(success?(1-proj-2-tuple(v_1174))))) then (if not-caught-fail(v_1176) then (v_1176,2-proj-2-tuple(v_1174)) else fail-any) else fail-any) else fail-any)) in
        {651}let v_1178: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1177),2-proj-7-tuple(v_1142),v_1145,4-proj-7-tuple(v_1142),5-proj-7-tuple(v_1142),6-proj-7-tuple(v_1142),7-proj-7-tuple(v_1142))) in
        {652}let v_1179: bitstring = catch-fail(concat3(v_1146,2-proj-3-tuple(v_1143),2-proj-2-tuple(v_1177))) in
        {653}let v_1180: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1177))) in
        {654}let v_1181: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1180),zero)) in
        {655}let v_1182: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1180),zero)) in
        {656}let v_1183: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1180),zero)) in
        {657}let v_1184: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1180)) then (if not-caught-fail(v_1181) then (if not-caught-fail(v_1182) then (if not-caught-fail(v_1183) then (v_1181,v_1182,v_1183) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {658}let v_1185: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1184)) then cipherstatepack(1-proj-3-tuple(v_1184),minnonce) else fail-any)) in
        {659}let v_1186: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1184)) then cipherstatepack(2-proj-3-tuple(v_1184),minnonce) else fail-any)) in
        {660}let v_1187: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1177)) then (if (not-caught-fail(v_1180) && success?(is-true(success?(1-proj-3-tuple(v_1180))))) then (if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-3-tuple(v_1184))))) then (if not-caught-fail(v_1185) then (if not-caught-fail(v_1186) then (1-proj-2-tuple(v_1177),v_1185,v_1186) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {661}let (hs_1188: handshakestate,message_b_1189: bitstring,cs1_1190: cipherstate,cs2_1191: cipherstate) = (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-7-tuple(v_1142))))) then (if (not-caught-fail(v_1143) && success?(is-true(success?(1-proj-3-tuple(v_1143))))) then (if not-caught-fail(v_1145) then (if not-caught-fail(v_1146) then (if not-caught-fail(v_1148) then (if not-caught-fail(v_1154) then (if not-caught-fail(v_1161) then (if not-caught-fail(v_1168) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then (if not-caught-fail(v_1178) then (if not-caught-fail(v_1179) then (if (not-caught-fail(v_1187) && success?(is-true(success?(1-proj-3-tuple(v_1187))))) then (v_1178,v_1179,2-proj-3-tuple(v_1187),3-proj-3-tuple(v_1187)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {662}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {663}insert statestore(bob,charlie,sid,statepack_c(hs_1188,cs1_1190,cs2_1191));
        {664}out(pub, message_b_1189)
    ) | (
        {666}!
        {686}get statestore(=bob,=charlie,=sid,statepack_c(hs_1192: handshakestate,cs1_1193: cipherstate,cs2_1194: cipherstate)) in
        {667}let hs_1195: handshakestate = handshakestatesetcs(hs_1192,cs1_1193) in
        {668}in(pub, message_c_1196: bitstring);
        {669}let v_1197: bitstring = catch-fail(handshakestateunpack(hs_1195)) in
        {670}let v_1198: bitstring = catch-fail(deconcat3(message_c_1196)) in
        {671}let v_1199: bool = catch-fail(true) in
        {672}let v_1200: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1197))) in
        {673}let v_1201: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1200))) in
        {674}let v_1202: aead = catch-fail(decrypt(1-proj-2-tuple(v_1201),2-proj-2-tuple(v_1201),3-proj-3-tuple(v_1200),3-proj-3-tuple(v_1198))) in
        {675}let v_1203: bitstring = catch-fail(aeadunpack(v_1202)) in
        {676}let v_1204: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1200))) in
        {677}let v_1205: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1201))) && success?(1-proj-3-tuple(v_1200))) then (if (not-caught-fail(v_1204) && success?(is-true(success?(1-proj-2-tuple(v_1204))))) then cipherstatepack(1-proj-2-tuple(v_1204),increment_nonce(2-proj-2-tuple(v_1201))) else fail-any) else fail-any)) in
        {678}let v_1206: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1198)) && (success?(3-proj-3-tuple(v_1200)) && success?(1-proj-3-tuple(v_1200)))) then (if (not-caught-fail(v_1201) && success?(is-true(success?(1-proj-2-tuple(v_1201))))) then (if not-caught-fail(v_1202) then (if (not-caught-fail(v_1203) && success?(is-true(success?(1-proj-3-tuple(v_1203))))) then (if not-caught-fail(v_1205) then (v_1205,3-proj-3-tuple(v_1203),1-proj-3-tuple(v_1203)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {679}let v_1207: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1206),2-proj-3-tuple(v_1200),3-proj-3-tuple(v_1200)))) in
        {680}let v_1208: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1198)) && success?(symmetricstatepack(1-proj-3-tuple(v_1206),2-proj-3-tuple(v_1200),3-proj-3-tuple(v_1200)))) then (if (not-caught-fail(v_1207) && success?(is-true(success?(1-proj-3-tuple(v_1207))))) then symmetricstatepack(1-proj-3-tuple(v_1207),2-proj-3-tuple(v_1207),hash(3-proj-3-tuple(v_1207),3-proj-3-tuple(v_1198))) else fail-any) else fail-any)) in
        {681}let v_1209: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1198)) && success?(1-proj-7-tuple(v_1197))) then (if (not-caught-fail(v_1200) && success?(is-true(success?(1-proj-3-tuple(v_1200))))) then (if (not-caught-fail(v_1206) && success?(is-true(success?(1-proj-3-tuple(v_1206))))) then (if not-caught-fail(v_1208) then (v_1208,2-proj-3-tuple(v_1206),3-proj-3-tuple(v_1206)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {682}let v_1210: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1209),2-proj-7-tuple(v_1197),3-proj-7-tuple(v_1197),4-proj-7-tuple(v_1197),5-proj-7-tuple(v_1197),6-proj-7-tuple(v_1197),7-proj-7-tuple(v_1197))) in
        {683}let (hs_1211: handshakestate,plaintext_c_1212: bitstring,valid_1213: bool) = (if (not-caught-fail(v_1197) && success?(is-true(success?(1-proj-7-tuple(v_1197))))) then (if (not-caught-fail(v_1198) && success?(is-true(success?(1-proj-3-tuple(v_1198))))) then (if not-caught-fail(v_1199) then (if (not-caught-fail(v_1209) && success?(is-true(success?(1-proj-3-tuple(v_1209))))) then (if (v_1199 && 3-proj-3-tuple(v_1209)) then (if not-caught-fail(v_1210) then (v_1210,2-proj-3-tuple(v_1209),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {684}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1212);
        {685}insert statestore(bob,charlie,sid,statepack_d(hs_1211,handshakestategetcs(hs_1211),cs2_1194))
    ) | (
        {687}!
        {705}get statestore(=bob,=charlie,=sid,statepack_d(hs_1214: handshakestate,cs1_1215: cipherstate,cs2_1216: cipherstate)) in
        {688}let hs_1217: handshakestate = handshakestatesetcs(hs_1214,cs2_1216) in
        {689}let v_1218: bitstring = catch-fail(handshakestateunpack(hs_1217)) in
        {690}let v_1219: bitstring = catch-fail((empty,empty,empty)) in
        {691}let v_1220: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1218))) in
        {692}let v_1221: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1220))) in
        {693}let v_1222: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1221),2-proj-2-tuple(v_1221),3-proj-3-tuple(v_1220),msg_d(bob,charlie,sid))) in
        {694}let v_1223: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1220))) in
        {695}let v_1224: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1221))) && success?(1-proj-3-tuple(v_1220))) then (if (not-caught-fail(v_1223) && success?(is-true(success?(1-proj-2-tuple(v_1223))))) then cipherstatepack(1-proj-2-tuple(v_1223),increment_nonce(2-proj-2-tuple(v_1221))) else fail-any) else fail-any)) in
        {696}let v_1225: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1220)) && success?(1-proj-3-tuple(v_1220))) then (if (not-caught-fail(v_1221) && success?(is-true(success?(1-proj-2-tuple(v_1221))))) then (if not-caught-fail(v_1222) then (if not-caught-fail(v_1224) then (v_1224,v_1222) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {697}let v_1226: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1225),2-proj-3-tuple(v_1220),3-proj-3-tuple(v_1220)))) in
        {698}let v_1227: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1225)) && success?(symmetricstatepack(1-proj-2-tuple(v_1225),2-proj-3-tuple(v_1220),3-proj-3-tuple(v_1220)))) then (if (not-caught-fail(v_1226) && success?(is-true(success?(1-proj-3-tuple(v_1226))))) then symmetricstatepack(1-proj-3-tuple(v_1226),2-proj-3-tuple(v_1226),hash(3-proj-3-tuple(v_1226),2-proj-2-tuple(v_1225))) else fail-any) else fail-any)) in
        {699}let v_1228: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1218)) then (if (not-caught-fail(v_1220) && success?(is-true(success?(1-proj-3-tuple(v_1220))))) then (if (not-caught-fail(v_1225) && success?(is-true(success?(1-proj-2-tuple(v_1225))))) then (if not-caught-fail(v_1227) then (v_1227,2-proj-2-tuple(v_1225)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {700}let v_1229: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1228),2-proj-7-tuple(v_1218),3-proj-7-tuple(v_1218),4-proj-7-tuple(v_1218),5-proj-7-tuple(v_1218),6-proj-7-tuple(v_1218),7-proj-7-tuple(v_1218))) in
        {701}let v_1230: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1219),2-proj-3-tuple(v_1219),2-proj-2-tuple(v_1228))) in
        {702}let (hs_1231: handshakestate,message_d_1232: bitstring) = (if (not-caught-fail(v_1218) && success?(is-true(success?(1-proj-7-tuple(v_1218))))) then (if (not-caught-fail(v_1219) && success?(is-true(success?(1-proj-3-tuple(v_1219))))) then (if (not-caught-fail(v_1228) && success?(is-true(success?(1-proj-2-tuple(v_1228))))) then (if not-caught-fail(v_1229) then (if not-caught-fail(v_1230) then (v_1229,v_1230) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {703}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {704}out(pub, message_d_1232)
    ) | (
        {706}event LeakPsk(phase0,charlie,bob);
        {707}out(pub, key_psk(charlie,bob))
    ) | (
        {708}phase 1;
        {709}event LeakPsk(phase1,charlie,bob);
        {710}out(pub, key_psk(charlie,bob))
    ) | (
        {711}event LeakS(phase0,bob);
        {712}out(pub, key_s(bob))
    ) | (
        {713}phase 1;
        {714}event LeakS(phase1,bob);
        {715}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 193 rules in the queue.
400 rules inserted. The rule base contains 397 rules. 49 rules in the queue.
600 rules inserted. The rule base contains 562 rules. 252 rules in the queue.
800 rules inserted. The rule base contains 753 rules. 367 rules in the queue.
1000 rules inserted. The rule base contains 937 rules. 235 rules in the queue.
1200 rules inserted. The rule base contains 1127 rules. 262 rules in the queue.
1400 rules inserted. The rule base contains 1311 rules. 394 rules in the queue.
1600 rules inserted. The rule base contains 1496 rules. 491 rules in the queue.
1800 rules inserted. The rule base contains 1654 rules. 449 rules in the queue.
2000 rules inserted. The rule base contains 1823 rules. 409 rules in the queue.
2200 rules inserted. The rule base contains 1993 rules. 425 rules in the queue.
2400 rules inserted. The rule base contains 2169 rules. 438 rules in the queue.
2600 rules inserted. The rule base contains 2294 rules. 461 rules in the queue.
2800 rules inserted. The rule base contains 2382 rules. 479 rules in the queue.
3000 rules inserted. The rule base contains 2499 rules. 514 rules in the queue.
3200 rules inserted. The rule base contains 2677 rules. 568 rules in the queue.
3400 rules inserted. The rule base contains 2822 rules. 602 rules in the queue.
3600 rules inserted. The rule base contains 2941 rules. 580 rules in the queue.
3800 rules inserted. The rule base contains 3066 rules. 562 rules in the queue.
4000 rules inserted. The rule base contains 3229 rules. 604 rules in the queue.
4200 rules inserted. The rule base contains 3402 rules. 674 rules in the queue.
4400 rules inserted. The rule base contains 3560 rules. 714 rules in the queue.
4600 rules inserted. The rule base contains 3679 rules. 747 rules in the queue.
4800 rules inserted. The rule base contains 3790 rules. 776 rules in the queue.
5000 rules inserted. The rule base contains 3908 rules. 813 rules in the queue.
5200 rules inserted. The rule base contains 4073 rules. 817 rules in the queue.
5400 rules inserted. The rule base contains 4244 rules. 836 rules in the queue.
5600 rules inserted. The rule base contains 4412 rules. 845 rules in the queue.
5800 rules inserted. The rule base contains 4561 rules. 869 rules in the queue.
6000 rules inserted. The rule base contains 4671 rules. 858 rules in the queue.
6200 rules inserted. The rule base contains 4781 rules. 830 rules in the queue.
6400 rules inserted. The rule base contains 4855 rules. 818 rules in the queue.
6600 rules inserted. The rule base contains 4948 rules. 745 rules in the queue.
6800 rules inserted. The rule base contains 5038 rules. 660 rules in the queue.
7000 rules inserted. The rule base contains 5122 rules. 584 rules in the queue.
7200 rules inserted. The rule base contains 5282 rules. 617 rules in the queue.
7400 rules inserted. The rule base contains 5452 rules. 639 rules in the queue.
7600 rules inserted. The rule base contains 5586 rules. 649 rules in the queue.
7800 rules inserted. The rule base contains 5695 rules. 653 rules in the queue.
8000 rules inserted. The rule base contains 5842 rules. 671 rules in the queue.
8200 rules inserted. The rule base contains 5975 rules. 678 rules in the queue.
8400 rules inserted. The rule base contains 6134 rules. 705 rules in the queue.
8600 rules inserted. The rule base contains 6328 rules. 748 rules in the queue.
8800 rules inserted. The rule base contains 6513 rules. 799 rules in the queue.
9000 rules inserted. The rule base contains 6626 rules. 754 rules in the queue.
9200 rules inserted. The rule base contains 6760 rules. 758 rules in the queue.
9400 rules inserted. The rule base contains 6882 rules. 759 rules in the queue.
9600 rules inserted. The rule base contains 7025 rules. 755 rules in the queue.
9800 rules inserted. The rule base contains 7207 rules. 766 rules in the queue.
10000 rules inserted. The rule base contains 7390 rules. 786 rules in the queue.
10200 rules inserted. The rule base contains 7570 rules. 803 rules in the queue.
10400 rules inserted. The rule base contains 7715 rules. 798 rules in the queue.
10600 rules inserted. The rule base contains 7883 rules. 822 rules in the queue.
10800 rules inserted. The rule base contains 8035 rules. 830 rules in the queue.
11000 rules inserted. The rule base contains 8211 rules. 862 rules in the queue.
11200 rules inserted. The rule base contains 8352 rules. 837 rules in the queue.
11400 rules inserted. The rule base contains 8512 rules. 856 rules in the queue.
11600 rules inserted. The rule base contains 8670 rules. 872 rules in the queue.
11800 rules inserted. The rule base contains 8845 rules. 893 rules in the queue.
12000 rules inserted. The rule base contains 9028 rules. 921 rules in the queue.
12200 rules inserted. The rule base contains 9208 rules. 940 rules in the queue.
12400 rules inserted. The rule base contains 9388 rules. 959 rules in the queue.
12600 rules inserted. The rule base contains 9557 rules. 1020 rules in the queue.
12800 rules inserted. The rule base contains 9718 rules. 1069 rules in the queue.
13000 rules inserted. The rule base contains 9890 rules. 1120 rules in the queue.
13200 rules inserted. The rule base contains 10058 rules. 1171 rules in the queue.
13400 rules inserted. The rule base contains 10237 rules. 1210 rules in the queue.
13600 rules inserted. The rule base contains 10404 rules. 1298 rules in the queue.
13800 rules inserted. The rule base contains 10579 rules. 1401 rules in the queue.
14000 rules inserted. The rule base contains 10762 rules. 1430 rules in the queue.
14200 rules inserted. The rule base contains 10935 rules. 1481 rules in the queue.
14400 rules inserted. The rule base contains 11113 rules. 1527 rules in the queue.
14600 rules inserted. The rule base contains 11254 rules. 1548 rules in the queue.
14800 rules inserted. The rule base contains 11391 rules. 1619 rules in the queue.
15000 rules inserted. The rule base contains 11492 rules. 1607 rules in the queue.
15200 rules inserted. The rule base contains 11645 rules. 1654 rules in the queue.
15400 rules inserted. The rule base contains 11788 rules. 1643 rules in the queue.
15600 rules inserted. The rule base contains 11934 rules. 1582 rules in the queue.
15800 rules inserted. The rule base contains 12094 rules. 1531 rules in the queue.
16000 rules inserted. The rule base contains 12224 rules. 1507 rules in the queue.
16200 rules inserted. The rule base contains 12292 rules. 1506 rules in the queue.
16400 rules inserted. The rule base contains 12383 rules. 1452 rules in the queue.
16600 rules inserted. The rule base contains 12463 rules. 1452 rules in the queue.
16800 rules inserted. The rule base contains 12547 rules. 1392 rules in the queue.
17000 rules inserted. The rule base contains 12687 rules. 1325 rules in the queue.
17200 rules inserted. The rule base contains 12838 rules. 1271 rules in the queue.
17400 rules inserted. The rule base contains 12905 rules. 1210 rules in the queue.
17600 rules inserted. The rule base contains 12985 rules. 1178 rules in the queue.
17800 rules inserted. The rule base contains 13070 rules. 1172 rules in the queue.
18000 rules inserted. The rule base contains 13180 rules. 1168 rules in the queue.
18200 rules inserted. The rule base contains 13362 rules. 1123 rules in the queue.
18400 rules inserted. The rule base contains 13499 rules. 1126 rules in the queue.
18600 rules inserted. The rule base contains 13551 rules. 1084 rules in the queue.
18800 rules inserted. The rule base contains 13670 rules. 1045 rules in the queue.
19000 rules inserted. The rule base contains 13762 rules. 996 rules in the queue.
19200 rules inserted. The rule base contains 13939 rules. 1003 rules in the queue.
19400 rules inserted. The rule base contains 14080 rules. 997 rules in the queue.
19600 rules inserted. The rule base contains 14136 rules. 973 rules in the queue.
19800 rules inserted. The rule base contains 14283 rules. 974 rules in the queue.
20000 rules inserted. The rule base contains 14450 rules. 1006 rules in the queue.
20200 rules inserted. The rule base contains 14624 rules. 1079 rules in the queue.
20400 rules inserted. The rule base contains 14690 rules. 1033 rules in the queue.
20600 rules inserted. The rule base contains 14828 rules. 1077 rules in the queue.
20800 rules inserted. The rule base contains 14971 rules. 1066 rules in the queue.
21000 rules inserted. The rule base contains 15125 rules. 1107 rules in the queue.
21200 rules inserted. The rule base contains 15279 rules. 1191 rules in the queue.
21400 rules inserted. The rule base contains 15333 rules. 1156 rules in the queue.
21600 rules inserted. The rule base contains 15489 rules. 1243 rules in the queue.
21800 rules inserted. The rule base contains 15669 rules. 1290 rules in the queue.
22000 rules inserted. The rule base contains 15847 rules. 1338 rules in the queue.
22200 rules inserted. The rule base contains 15989 rules. 1383 rules in the queue.
22400 rules inserted. The rule base contains 16089 rules. 1328 rules in the queue.
22600 rules inserted. The rule base contains 16209 rules. 1370 rules in the queue.
22800 rules inserted. The rule base contains 16366 rules. 1384 rules in the queue.
23000 rules inserted. The rule base contains 16544 rules. 1328 rules in the queue.
23200 rules inserted. The rule base contains 16726 rules. 1296 rules in the queue.
23400 rules inserted. The rule base contains 16836 rules. 1262 rules in the queue.
23600 rules inserted. The rule base contains 16923 rules. 1274 rules in the queue.
23800 rules inserted. The rule base contains 17017 rules. 1220 rules in the queue.
24000 rules inserted. The rule base contains 17101 rules. 1248 rules in the queue.
24200 rules inserted. The rule base contains 17255 rules. 1237 rules in the queue.
24400 rules inserted. The rule base contains 17434 rules. 1220 rules in the queue.
24600 rules inserted. The rule base contains 17493 rules. 1192 rules in the queue.
24800 rules inserted. The rule base contains 17548 rules. 1147 rules in the queue.
25000 rules inserted. The rule base contains 17631 rules. 1134 rules in the queue.
25200 rules inserted. The rule base contains 17727 rules. 1123 rules in the queue.
25400 rules inserted. The rule base contains 17904 rules. 1072 rules in the queue.
25600 rules inserted. The rule base contains 17991 rules. 1072 rules in the queue.
25800 rules inserted. The rule base contains 18075 rules. 1059 rules in the queue.
26000 rules inserted. The rule base contains 18153 rules. 1035 rules in the queue.
26200 rules inserted. The rule base contains 18277 rules. 1047 rules in the queue.
26400 rules inserted. The rule base contains 18455 rules. 1119 rules in the queue.
26600 rules inserted. The rule base contains 18556 rules. 1140 rules in the queue.
26800 rules inserted. The rule base contains 18654 rules. 1120 rules in the queue.
27000 rules inserted. The rule base contains 18784 rules. 1141 rules in the queue.
27200 rules inserted. The rule base contains 18944 rules. 1181 rules in the queue.
27400 rules inserted. The rule base contains 19089 rules. 1226 rules in the queue.
27600 rules inserted. The rule base contains 19182 rules. 1268 rules in the queue.
27800 rules inserted. The rule base contains 19275 rules. 1216 rules in the queue.
28000 rules inserted. The rule base contains 19407 rules. 1243 rules in the queue.
28200 rules inserted. The rule base contains 19573 rules. 1200 rules in the queue.
28400 rules inserted. The rule base contains 19749 rules. 1128 rules in the queue.
28600 rules inserted. The rule base contains 19846 rules. 1098 rules in the queue.
28800 rules inserted. The rule base contains 19874 rules. 1056 rules in the queue.
29000 rules inserted. The rule base contains 19945 rules. 1033 rules in the queue.
29200 rules inserted. The rule base contains 20019 rules. 1019 rules in the queue.
29400 rules inserted. The rule base contains 20170 rules. 932 rules in the queue.
29600 rules inserted. The rule base contains 20200 rules. 886 rules in the queue.
29800 rules inserted. The rule base contains 20213 rules. 783 rules in the queue.
30000 rules inserted. The rule base contains 20246 rules. 760 rules in the queue.
30200 rules inserted. The rule base contains 20340 rules. 651 rules in the queue.
30400 rules inserted. The rule base contains 20404 rules. 580 rules in the queue.
30600 rules inserted. The rule base contains 20468 rules. 514 rules in the queue.
30800 rules inserted. The rule base contains 20533 rules. 457 rules in the queue.
31000 rules inserted. The rule base contains 20580 rules. 354 rules in the queue.
31200 rules inserted. The rule base contains 20609 rules. 268 rules in the queue.
31400 rules inserted. The rule base contains 20646 rules. 176 rules in the queue.
31600 rules inserted. The rule base contains 20660 rules. 30 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416776]),msg_a(alice,bob,sid[!1 = @sid_1369416776]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1369416777]),msg_a(alice,bob,sid[!1 = @sid_1369416776])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416785]),msg_a(alice,bob,sid[!1 = @sid_1369416785]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1369416786]),msg_a(alice,bob,sid[!1 = @sid_1369416785])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416795]),msg_a(alice,bob,sid[!1 = @sid_1369416795]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1369416796]),msg_a(alice,bob,sid[!1 = @sid_1369416795])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416805]),msg_a(alice,bob,sid[!1 = @sid_1369416805]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1369416806]),msg_a(alice,bob,sid[!1 = @sid_1369416805])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416814]),msg_a(alice,bob,sid[!1 = @sid_1369416814]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1369416815]),msg_a(alice,bob,sid[!1 = @sid_1369416814])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369416822]),msg_a(alice,bob,sid[!1 = @sid_1369416822]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369416822]))
Abbreviations:
sid_1369417035 = sid[!1 = @sid_1369417011]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1369417035,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_1369417035,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1369417035,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {80}.
The event SendMsg(alice,bob,stagepack_a(sid_1369417035),msg_a(alice,bob,sid_1369417035)) may be executed at {77}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))) may be sent on channel pub at output {79}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {172}.
So the message key_psk(alice,bob) may be sent on channel pub at output {173}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {362}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {536}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {537}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417035),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417035)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1369417035) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1369417035)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417037]),msg_a(alice,bob,sid[!1 = @sid_1369417037]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417037]))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417039]),msg_a(alice,bob,sid[!1 = @sid_1369417039]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417039]))
goal reachable: begin(LeakS(phase0,bob)) && begin(LeakPsk(phase1,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417041]),msg_a(alice,bob,sid[!1 = @sid_1369417041]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417041]))
goal reachable: begin(LeakS(phase0,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417044]),msg_a(alice,bob,sid[!1 = @sid_1369417044]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417044]))
RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417060]),msg_a(alice,bob,sid[!1 = @sid_1369417060]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417060]))
Abbreviations:
sid_1369417276 = sid[!1 = @sid_1369417252]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1369417276,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_1369417276,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1369417276,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {80}.
The event SendMsg(alice,bob,stagepack_a(sid_1369417276),msg_a(alice,bob,sid_1369417276)) may be executed at {77}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))) may be sent on channel pub at output {79}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {172}.
So the message key_psk(alice,bob) may be sent on channel pub at output {173}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {362}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {536}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {537}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417276),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417276)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1369417276) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1369417276)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(LeakPsk(phase0,alice,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417278]),msg_a(alice,bob,sid[!1 = @sid_1369417278]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1369417278]))
Abbreviations:
sid_1369417491 = sid[!1 = @sid_1369417467]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1369417491,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_1369417491,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_1369417491,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {80}.
The event SendMsg(alice,bob,stagepack_a(sid_1369417491),msg_a(alice,bob,sid_1369417491)) may be executed at {77}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))) may be sent on channel pub at output {79}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)).
attacker(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).

6. By 5, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)).
So the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)) in phase 1.
attacker_p1(encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).

7. The event LeakPsk(phase0,alice,bob) may be executed at {172}.
So the message key_psk(alice,bob) may be sent on channel pub at output {173}.
mess(pub,key_psk(alice,bob)).

8. By 1, the attacker may have the channel pub.
By 7, the message key_psk(alice,bob) may be sent on this channel.
So the attacker may obtain the message key_psk(alice,bob) by listening on this channel.
attacker(key_psk(alice,bob)).

9. By 8, the attacker may know key_psk(alice,bob).
So the attacker may know key_psk(alice,bob) in phase 1.
attacker_p1(key_psk(alice,bob)).

10. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))).

11. By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))).

12. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).

13. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {362}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

14. By 1, the attacker may have the channel pub.
By 13, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

22. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

23. By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).

24. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

25. The event LeakS(phase1,bob) may be executed at {536}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {537}.
mess_p1(pub,key_s(bob)).

26. By 24, the attacker may have the channel pub in phase 1.
By 25, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

27. By 26, the attacker may know key_s(bob) in phase 1.
By 23, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))).

28. By 17, the attacker may know hash(somename,empty).
By 12, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain validkey(dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_s(alice),g))).

33. By 26, the attacker may know key_s(bob) in phase 1.
By 32, the attacker may know validkey(dhexp_real(key_s(alice),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))).

34. By 29, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
By 27, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g)))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))) in phase 1.
By 33, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g)))).

36. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

37. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g))))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))) in phase 1.
By 36, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)))).

40. By 35, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))) in phase 1.
By 9, the attacker may know key_psk(alice,bob) in phase 1.
Using the function hmac_hash3 the attacker may obtain hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
attacker_p1(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))).

41. By 40, the attacker may know hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)) in phase 1.
By 22, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491))).

42. By 41, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417491),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417491)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1369417491) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1369417491)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417494]),msg_b(bob,alice,sid[!1 = @sid_1369417494]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417495]),msg_a(alice,bob,sid[!1 = @sid_1369417495]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1369417495]),msg_b(bob,alice,sid[!1 = @sid_1369417494])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417503]),msg_b(bob,alice,sid[!1 = @sid_1369417503]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417504]),msg_a(alice,bob,sid[!1 = @sid_1369417504]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1369417504]),msg_b(bob,alice,sid[!1 = @sid_1369417503])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417513]),msg_b(bob,alice,sid[!1 = @sid_1369417513]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417514]),msg_a(alice,bob,sid[!1 = @sid_1369417514]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1369417514]),msg_b(bob,alice,sid[!1 = @sid_1369417513])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417523]),msg_b(bob,alice,sid[!1 = @sid_1369417523]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417524]),msg_a(alice,bob,sid[!1 = @sid_1369417524]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1369417524]),msg_b(bob,alice,sid[!1 = @sid_1369417523])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417532]),msg_b(bob,alice,sid[!1 = @sid_1369417532]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417533]),msg_a(alice,bob,sid[!1 = @sid_1369417533]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1369417533]),msg_b(bob,alice,sid[!1 = @sid_1369417532])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417556]),msg_c(alice,bob,sid[!1 = @sid_1369417556]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417557]),msg_b(bob,alice,sid[!1 = @sid_1369417557]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417556]),msg_a(alice,bob,sid[!1 = @sid_1369417556]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1369417557]),msg_c(alice,bob,sid[!1 = @sid_1369417556])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417565]),msg_c(alice,bob,sid[!1 = @sid_1369417565]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417566]),msg_b(bob,alice,sid[!1 = @sid_1369417566]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417565]),msg_a(alice,bob,sid[!1 = @sid_1369417565]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1369417566]),msg_c(alice,bob,sid[!1 = @sid_1369417565])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417575]),msg_c(alice,bob,sid[!1 = @sid_1369417575]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417576]),msg_b(bob,alice,sid[!1 = @sid_1369417576]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417575]),msg_a(alice,bob,sid[!1 = @sid_1369417575]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1369417576]),msg_c(alice,bob,sid[!1 = @sid_1369417575])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1342,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417585]),msg_c(alice,bob,sid[!1 = @sid_1369417585]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417586]),msg_b(bob,alice,sid[!1 = @sid_1369417586]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417585]),msg_a(alice,bob,sid[!1 = @sid_1369417585]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1369417586]),msg_c(alice,bob,sid[!1 = @sid_1369417585])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417594]),msg_c(alice,bob,sid[!1 = @sid_1369417594]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417595]),msg_b(bob,alice,sid[!1 = @sid_1369417595]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417594]),msg_a(alice,bob,sid[!1 = @sid_1369417594]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1369417595]),msg_c(alice,bob,sid[!1 = @sid_1369417594])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417618]),msg_d(bob,alice,sid[!1 = @sid_1369417618]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417619]),msg_c(alice,bob,sid[!1 = @sid_1369417619]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417618]),msg_b(bob,alice,sid[!1 = @sid_1369417618]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417619]),msg_a(alice,bob,sid[!1 = @sid_1369417619]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1369417619]),msg_d(bob,alice,sid[!1 = @sid_1369417618])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417627]),msg_d(bob,alice,sid[!1 = @sid_1369417627]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417628]),msg_c(alice,bob,sid[!1 = @sid_1369417628]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417627]),msg_b(bob,alice,sid[!1 = @sid_1369417627]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417628]),msg_a(alice,bob,sid[!1 = @sid_1369417628]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1369417628]),msg_d(bob,alice,sid[!1 = @sid_1369417627])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417637]),msg_d(bob,alice,sid[!1 = @sid_1369417637]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417638]),msg_c(alice,bob,sid[!1 = @sid_1369417638]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417637]),msg_b(bob,alice,sid[!1 = @sid_1369417637]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417638]),msg_a(alice,bob,sid[!1 = @sid_1369417638]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1369417638]),msg_d(bob,alice,sid[!1 = @sid_1369417637])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1342,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417647]),msg_d(bob,alice,sid[!1 = @sid_1369417647]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417648]),msg_c(alice,bob,sid[!1 = @sid_1369417648]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417647]),msg_b(bob,alice,sid[!1 = @sid_1369417647]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417648]),msg_a(alice,bob,sid[!1 = @sid_1369417648]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1369417648]),msg_d(bob,alice,sid[!1 = @sid_1369417647])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417656]),msg_d(bob,alice,sid[!1 = @sid_1369417656]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417657]),msg_c(alice,bob,sid[!1 = @sid_1369417657]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417656]),msg_b(bob,alice,sid[!1 = @sid_1369417656]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417657]),msg_a(alice,bob,sid[!1 = @sid_1369417657]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1369417657]),msg_d(bob,alice,sid[!1 = @sid_1369417656])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1369417678]),msg_d(bob,alice,sid[!1 = @sid_1369417678]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1369417679]),msg_c(alice,bob,sid[!1 = @sid_1369417679]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1369417678]),msg_b(bob,alice,sid[!1 = @sid_1369417678]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1369417679]),msg_a(alice,bob,sid[!1 = @sid_1369417679]))) -> end(RecvEnd(true))
Abbreviations:
sid_1369417915 = sid[!1 = @sid_1369417904]
sid_1369417916 = sid[!1 = @sid_1369417859]

1. The entry statestore(alice,bob,sid_1369417915,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_1369417915,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_1369417915,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {80}.
The event SendMsg(alice,bob,stagepack_a(sid_1369417915),msg_a(alice,bob,sid_1369417915)) may be executed at {77}.
So the entry statestore(alice,bob,sid_1369417915,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {78}.
table(statestore(alice,bob,sid_1369417915,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,alice,sid_1369417916,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {374}.
table(statestore(bob,alice,sid_1369417916,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

4. The entry statestore(alice,bob,sid_1369417915,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {80}.
The event SendMsg(alice,bob,stagepack_a(sid_1369417915),msg_a(alice,bob,sid_1369417915)) may be executed at {77}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))) may be sent on channel pub at output {79}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))).

5. The entry statestore(bob,alice,sid_1369417916,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 3 may be read at get {436}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))) that may be sent on channel pub by 4 may be received at input {375}.
So the entry statestore(bob,alice,sid_1369417916,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {435}.
table(statestore(bob,alice,sid_1369417916,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false)))).

6. The entry statestore(bob,alice,sid_1369417916,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {487}.
The event SendMsg(bob,alice,stagepack_b(sid_1369417916),msg_b(bob,alice,sid_1369417916)) may be executed at {484}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))) may be sent on channel pub at output {486}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))).

7. The entry statestore(alice,bob,sid_1369417915,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {130}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))) that may be sent on channel pub by 6 may be received at input {81}.
So the entry statestore(alice,bob,sid_1369417915,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) may be inserted in a table at insert {129}.
table(statestore(alice,bob,sid_1369417915,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_1369417915,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) that may be in a table by 7 may be read at get {150}.
The event SendMsg(alice,bob,stagepack_c(sid_1369417915),msg_c(alice,bob,sid_1369417915)) may be executed at {147}.
So the entry statestore(alice,bob,sid_1369417915,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) may be inserted in a table at insert {148}.
table(statestore(alice,bob,sid_1369417915,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce)))).

9. The entry statestore(bob,alice,sid_1369417916,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {487}.
The event SendMsg(bob,alice,stagepack_b(sid_1369417916),msg_b(bob,alice,sid_1369417916)) may be executed at {484}.
So the entry statestore(bob,alice,sid_1369417916,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) may be inserted in a table at insert {485}.
table(statestore(bob,alice,sid_1369417916,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_1369417915,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) that may be in a table by 7 may be read at get {150}.
The event SendMsg(alice,bob,stagepack_c(sid_1369417915),msg_c(alice,bob,sid_1369417915)) may be executed at {147}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915))) may be sent on channel pub at output {149}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))).

11. The entry statestore(bob,alice,sid_1369417916,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) that may be in a table by 9 may be read at get {508}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915))) that may be sent on channel pub by 10 may be received at input {490}.
So the entry statestore(bob,alice,sid_1369417916,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) may be inserted in a table at insert {507}.
table(statestore(bob,alice,sid_1369417916,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce)))).

12. The entry statestore(bob,alice,sid_1369417916,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_e(bob,alice,sid_1369417916)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) that may be in a table by 11 may be read at get {527}.
The event SendMsg(bob,alice,stagepack_d(sid_1369417916),msg_d(bob,alice,sid_1369417916)) may be executed at {525}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915))),msg_d(bob,alice,sid_1369417916))) may be sent on channel pub at output {526}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915))),msg_d(bob,alice,sid_1369417916)))).

13. The entry statestore(alice,bob,sid_1369417915,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g)),key_e(alice,bob,sid_1369417915)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce))) that may be in a table by 8 may be read at get {171}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1369417916),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_e(bob,alice,sid_1369417916),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_1369417915),g))),dhexp_real(key_s(bob),dhexp_real(key_s(alice),g))),key_psk(alice,bob))),msg_a(alice,bob,sid_1369417915))),validkey(dhexp_real(key_e(bob,alice,sid_1369417916),g))),msg_b(bob,alice,sid_1369417916))),msg_c(alice,bob,sid_1369417915))),msg_d(bob,alice,sid_1369417916))) that may be sent on channel pub by 12 may be received at input {153}.
So event RecvEnd(true) may be executed at {170}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
