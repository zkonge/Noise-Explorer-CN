File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk2.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk2.noise.passive.pv", line 267, character 6:
Warning: identifier e rebound.
File "IXpsk2.noise.passive.pv", line 268, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 270, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 271, character 6:
Warning: identifier s rebound.
File "IXpsk2.noise.passive.pv", line 272, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 272, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk2.noise.passive.pv", line 273, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 273, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 274, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 281, character 6:
Warning: identifier e rebound.
File "IXpsk2.noise.passive.pv", line 282, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 287, character 6:
Warning: identifier s rebound.
File "IXpsk2.noise.passive.pv", line 288, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 288, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk2.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 291, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 292, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 300, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 317, characters 6-7:
Warning: identifier re rebound.
File "IXpsk2.noise.passive.pv", line 318, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk2.noise.passive.pv", line 321, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk2.noise.passive.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 324, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 332, characters 6-7:
Warning: identifier re rebound.
File "IXpsk2.noise.passive.pv", line 333, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk2.noise.passive.pv", line 338, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk2.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 519, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 521, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 512, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 513, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 300, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 506, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 332, characters 6-7:
Warning: identifier re rebound.
File "IXpsk2.noise.passive.pv", line 333, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 337, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk2.noise.passive.pv", line 338, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk2.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk2.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk2.noise.passive.pv", line 499, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 267, character 6:
Warning: identifier e rebound.
File "IXpsk2.noise.passive.pv", line 268, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 270, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 271, character 6:
Warning: identifier s rebound.
File "IXpsk2.noise.passive.pv", line 272, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 272, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk2.noise.passive.pv", line 273, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 273, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 274, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 573, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 574, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 565, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 567, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 559, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 281, character 6:
Warning: identifier e rebound.
File "IXpsk2.noise.passive.pv", line 282, characters 6-7:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 287, character 6:
Warning: identifier s rebound.
File "IXpsk2.noise.passive.pv", line 288, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 288, characters 26-27:
Warning: identifier ns rebound.
File "IXpsk2.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 291, characters 26-35:
Warning: identifier ciphertext rebound.
File "IXpsk2.noise.passive.pv", line 292, characters 6-7:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 227, characters 7-8:
Warning: identifier ck rebound.
File "IXpsk2.noise.passive.pv", line 228, characters 7-8:
Warning: identifier cs rebound.
File "IXpsk2.noise.passive.pv", line 228, character 36:
Warning: identifier h rebound.
File "IXpsk2.noise.passive.pv", line 553, characters 8-9:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 317, characters 6-7:
Warning: identifier re rebound.
File "IXpsk2.noise.passive.pv", line 318, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 319, characters 6-7:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 26-27:
Warning: identifier ne rebound.
File "IXpsk2.noise.passive.pv", line 320, characters 40-45:
Warning: identifier valid1 rebound.
File "IXpsk2.noise.passive.pv", line 321, characters 6-7:
Warning: identifier rs rebound.
File "IXpsk2.noise.passive.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "IXpsk2.noise.passive.pv", line 324, characters 7-8:
Warning: identifier hs rebound.
File "IXpsk2.noise.passive.pv", line 218, characters 7-8:
Warning: identifier ck rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_582: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_582));
    (
        {6}let e_583: keypair = keypairpack(empty,empty) in
        {7}let rs_584: key = empty in
        {8}let re_585: key = empty in
        {9}let v_586: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_587: key = catch-fail(v_586) in
        {11}let v_588: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_589: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_586) then (if not-caught-fail(v_587) then (if not-caught-fail(v_588) then symmetricstatepack(v_588,v_587,v_586) else fail-any) else fail-any) else fail-any))) in
        {13}let v_590: symmetricstate = catch-fail((if success?((if not-caught-fail(v_586) then (if not-caught-fail(v_587) then (if not-caught-fail(v_588) then symmetricstatepack(v_588,v_587,v_586) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then symmetricstatepack(1-proj-3-tuple(v_589),2-proj-3-tuple(v_589),hash(3-proj-3-tuple(v_589),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_590) then handshakestatepack(v_590,s_582,e_583,rs_584,re_585,key_psk(alice,bob),true) else fail-any) in
        {15}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {55}get statestore(=alice,=bob,=sid,statepack_a(hs_591: handshakestate)) in
        {16}let v_592: bitstring = catch-fail(handshakestateunpack(hs_591)) in
        {17}let v_593: bitstring = catch-fail((empty,empty,empty)) in
        {18}let v_594: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {19}let v_595: keypair = catch-fail((if not-caught-fail(v_594) then keypairpack(validkey(v_594),key_e(alice,bob,sid)) else fail-any)) in
        {20}let v_596: bitstring = catch-fail(getpublickey(v_595)) in
        {21}let v_597: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_592))) in
        {22}let v_598: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_592)) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-3-tuple(v_597))))) then symmetricstatepack(1-proj-3-tuple(v_597),2-proj-3-tuple(v_597),hash(3-proj-3-tuple(v_597),v_596)) else fail-any) else fail-any)) in
        {23}let v_599: bitstring = catch-fail(symmetricstateunpack(v_598)) in
        {24}let v_600: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {25}let v_601: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {26}let v_602: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_599),getpublickey(v_595))) in
        {27}let v_603: bitstring = catch-fail((if (success?(getpublickey(v_595)) && success?(2-proj-3-tuple(v_599))) then (if not-caught-fail(v_600) then (if not-caught-fail(v_601) then (if not-caught-fail(v_602) then (v_600,v_601,v_602) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {28}let v_604: symmetricstate = catch-fail((if success?(getpublickey(v_595)) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_603)) then cipherstatepack(2-proj-3-tuple(v_603),minnonce) else fail-any),1-proj-3-tuple(v_603),3-proj-3-tuple(v_599)) else fail-any) else fail-any) else fail-any)) in
        {29}let v_605: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {30}let v_606: keypair = catch-fail((if not-caught-fail(v_605) then keypairpack(validkey(v_605),key_s(alice)) else fail-any)) in
        {31}let v_607: bitstring = catch-fail(symmetricstateunpack(v_604)) in
        {32}let v_608: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_607))) in
        {33}let v_609: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_608),2-proj-2-tuple(v_608),3-proj-3-tuple(v_607),getpublickey(v_606))) in
        {34}let v_610: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_607))) in
        {35}let v_611: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_608))) && success?(1-proj-3-tuple(v_607))) then (if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-2-tuple(v_610))))) then cipherstatepack(1-proj-2-tuple(v_610),increment_nonce(2-proj-2-tuple(v_608))) else fail-any) else fail-any)) in
        {36}let v_612: bitstring = catch-fail((if (success?(getpublickey(v_606)) && (success?(3-proj-3-tuple(v_607)) && success?(1-proj-3-tuple(v_607)))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then (if not-caught-fail(v_609) then (if not-caught-fail(v_611) then (v_611,v_609) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {37}let v_613: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_612),2-proj-3-tuple(v_607),3-proj-3-tuple(v_607)))) in
        {38}let v_614: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_612)) && success?(symmetricstatepack(1-proj-2-tuple(v_612),2-proj-3-tuple(v_607),3-proj-3-tuple(v_607)))) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-3-tuple(v_613))))) then symmetricstatepack(1-proj-3-tuple(v_613),2-proj-3-tuple(v_613),hash(3-proj-3-tuple(v_613),2-proj-2-tuple(v_612))) else fail-any) else fail-any)) in
        {39}let v_615: bitstring = catch-fail((if success?(getpublickey(v_606)) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then (if not-caught-fail(v_614) then (v_614,2-proj-2-tuple(v_612)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {40}let v_616: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_615))) in
        {41}let v_617: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_616))) in
        {42}let v_618: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_617),2-proj-2-tuple(v_617),3-proj-3-tuple(v_616),msg_a(alice,bob,sid))) in
        {43}let v_619: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_616))) in
        {44}let v_620: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_617))) && success?(1-proj-3-tuple(v_616))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then cipherstatepack(1-proj-2-tuple(v_619),increment_nonce(2-proj-2-tuple(v_617))) else fail-any) else fail-any)) in
        {45}let v_621: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_616)) && success?(1-proj-3-tuple(v_616))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-2-tuple(v_617))))) then (if not-caught-fail(v_618) then (if not-caught-fail(v_620) then (v_620,v_618) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {46}let v_622: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_621),2-proj-3-tuple(v_616),3-proj-3-tuple(v_616)))) in
        {47}let v_623: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_621)) && success?(symmetricstatepack(1-proj-2-tuple(v_621),2-proj-3-tuple(v_616),3-proj-3-tuple(v_616)))) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-3-tuple(v_622))))) then symmetricstatepack(1-proj-3-tuple(v_622),2-proj-3-tuple(v_622),hash(3-proj-3-tuple(v_622),2-proj-2-tuple(v_621))) else fail-any) else fail-any)) in
        {48}let v_624: bitstring = catch-fail((if success?(1-proj-2-tuple(v_615)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-3-tuple(v_616))))) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-2-tuple(v_621))))) then (if not-caught-fail(v_623) then (v_623,2-proj-2-tuple(v_621)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {49}let v_625: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_624),v_606,v_595,4-proj-7-tuple(v_592),5-proj-7-tuple(v_592),6-proj-7-tuple(v_592),7-proj-7-tuple(v_592))) in
        {50}let v_626: bitstring = catch-fail(concat3(v_596,2-proj-2-tuple(v_615),2-proj-2-tuple(v_624))) in
        {51}let (hs_627: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-7-tuple(v_592))))) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-3-tuple(v_593))))) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_598) then (if not-caught-fail(v_604) then (if not-caught-fail(v_606) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-2-tuple(v_615))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (v_625,v_626) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {52}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {53}insert statestore(alice,bob,sid,statepack_b(hs_627));
        {54}out(pub, message_a)
    ) | (
        {132}get statestore(=alice,=bob,=sid,statepack_b(hs_628: handshakestate)) in
        {56}in(pub, message_b: bitstring);
        {57}let v_629: bitstring = catch-fail(handshakestateunpack(hs_628)) in
        {58}let v_630: bitstring = catch-fail(deconcat3(message_b)) in
        {59}let v_631: bool = catch-fail(true) in
        {60}let v_632: key = catch-fail(1-proj-3-tuple(v_630)) in
        {61}let v_633: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_629))) in
        {62}let v_634: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_629)) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then symmetricstatepack(1-proj-3-tuple(v_633),2-proj-3-tuple(v_633),hash(3-proj-3-tuple(v_633),v_632)) else fail-any) else fail-any)) in
        {63}let v_635: bitstring = catch-fail(symmetricstateunpack(v_634)) in
        {64}let v_636: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_635),v_632)) in
        {65}let v_637: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_635),v_632)) in
        {66}let v_638: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_635),v_632)) in
        {67}let v_639: bitstring = catch-fail((if success?(2-proj-3-tuple(v_635)) then (if not-caught-fail(v_636) then (if not-caught-fail(v_637) then (if not-caught-fail(v_638) then (v_636,v_637,v_638) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {68}let v_640: symmetricstate = catch-fail((if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_639)) then cipherstatepack(2-proj-3-tuple(v_639),minnonce) else fail-any),1-proj-3-tuple(v_639),3-proj-3-tuple(v_635)) else fail-any) else fail-any)) in
        {69}let v_641: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_629))) in
        {70}let v_642: bitstring = catch-fail(symmetricstateunpack(v_640)) in
        {71}let v_643: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_642),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then dhexp(2-proj-2-tuple(v_641),v_632) else fail-any) else fail-any))) in
        {72}let v_644: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_642),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then dhexp(2-proj-2-tuple(v_641),v_632) else fail-any) else fail-any))) in
        {73}let v_645: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_642),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then dhexp(2-proj-2-tuple(v_641),v_632) else fail-any) else fail-any))) in
        {74}let v_646: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then dhexp(2-proj-2-tuple(v_641),v_632) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_642))) then (if not-caught-fail(v_643) then (if not-caught-fail(v_644) then (if not-caught-fail(v_645) then (v_643,v_644,v_645) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {75}let v_647: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then dhexp(2-proj-2-tuple(v_641),v_632) else fail-any) else fail-any)) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-3-tuple(v_646))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_646)) then cipherstatepack(2-proj-3-tuple(v_646),minnonce) else fail-any),1-proj-3-tuple(v_646),3-proj-3-tuple(v_642)) else fail-any) else fail-any) else fail-any)) in
        {76}let v_648: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_629))) in
        {77}let v_649: bitstring = catch-fail(symmetricstateunpack(v_647)) in
        {78}let v_650: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_649),(if success?(2-proj-7-tuple(v_629)) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then dhexp(2-proj-2-tuple(v_648),v_632) else fail-any) else fail-any))) in
        {79}let v_651: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_649),(if success?(2-proj-7-tuple(v_629)) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then dhexp(2-proj-2-tuple(v_648),v_632) else fail-any) else fail-any))) in
        {80}let v_652: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_649),(if success?(2-proj-7-tuple(v_629)) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then dhexp(2-proj-2-tuple(v_648),v_632) else fail-any) else fail-any))) in
        {81}let v_653: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_629)) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then dhexp(2-proj-2-tuple(v_648),v_632) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_649))) then (if not-caught-fail(v_650) then (if not-caught-fail(v_651) then (if not-caught-fail(v_652) then (v_650,v_651,v_652) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {82}let v_654: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_629)) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then dhexp(2-proj-2-tuple(v_648),v_632) else fail-any) else fail-any)) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-3-tuple(v_649))))) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_653)) then cipherstatepack(2-proj-3-tuple(v_653),minnonce) else fail-any),1-proj-3-tuple(v_653),3-proj-3-tuple(v_649)) else fail-any) else fail-any) else fail-any)) in
        {83}let v_655: bitstring = catch-fail(symmetricstateunpack(v_654)) in
        {84}let v_656: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_655))) in
        {85}let v_657: aead = catch-fail(decrypt(1-proj-2-tuple(v_656),2-proj-2-tuple(v_656),3-proj-3-tuple(v_655),2-proj-3-tuple(v_630))) in
        {86}let v_658: bitstring = catch-fail(aeadunpack(v_657)) in
        {87}let v_659: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_655))) in
        {88}let v_660: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_656))) && success?(1-proj-3-tuple(v_655))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-2-tuple(v_659))))) then cipherstatepack(1-proj-2-tuple(v_659),increment_nonce(2-proj-2-tuple(v_656))) else fail-any) else fail-any)) in
        {89}let v_661: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_630)) && (success?(3-proj-3-tuple(v_655)) && success?(1-proj-3-tuple(v_655)))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-2-tuple(v_656))))) then (if not-caught-fail(v_657) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then (if not-caught-fail(v_660) then (v_660,3-proj-3-tuple(v_658),1-proj-3-tuple(v_658)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_662: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_661),2-proj-3-tuple(v_655),3-proj-3-tuple(v_655)))) in
        {91}let v_663: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_630)) && success?(symmetricstatepack(1-proj-3-tuple(v_661),2-proj-3-tuple(v_655),3-proj-3-tuple(v_655)))) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then symmetricstatepack(1-proj-3-tuple(v_662),2-proj-3-tuple(v_662),hash(3-proj-3-tuple(v_662),2-proj-3-tuple(v_630))) else fail-any) else fail-any)) in
        {92}let v_664: bitstring = catch-fail((if success?(2-proj-3-tuple(v_630)) then (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-3-tuple(v_655))))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then (if not-caught-fail(v_663) then (v_663,2-proj-3-tuple(v_661),3-proj-3-tuple(v_661)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {93}let v_665: key = catch-fail(2-proj-3-tuple(v_664)) in
        {94}let v_666: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_629))) in
        {95}let v_667: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_664))) in
        {96}let v_668: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_667),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then dhexp(2-proj-2-tuple(v_666),v_665) else fail-any) else fail-any))) in
        {97}let v_669: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_667),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then dhexp(2-proj-2-tuple(v_666),v_665) else fail-any) else fail-any))) in
        {98}let v_670: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_667),(if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then dhexp(2-proj-2-tuple(v_666),v_665) else fail-any) else fail-any))) in
        {99}let v_671: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then dhexp(2-proj-2-tuple(v_666),v_665) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_667))) then (if not-caught-fail(v_668) then (if not-caught-fail(v_669) then (if not-caught-fail(v_670) then (v_668,v_669,v_670) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {100}let v_672: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_629)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then dhexp(2-proj-2-tuple(v_666),v_665) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_664))) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-3-tuple(v_667))))) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-3-tuple(v_671))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_671)) then cipherstatepack(2-proj-3-tuple(v_671),minnonce) else fail-any),1-proj-3-tuple(v_671),3-proj-3-tuple(v_667)) else fail-any) else fail-any) else fail-any)) in
        {101}let v_673: bitstring = catch-fail(symmetricstateunpack(v_672)) in
        {102}let v_674: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_673),6-proj-7-tuple(v_629))) in
        {103}let v_675: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_673),6-proj-7-tuple(v_629))) in
        {104}let v_676: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_673),6-proj-7-tuple(v_629))) in
        {105}let v_677: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_629)) && success?(2-proj-3-tuple(v_673))) then (if not-caught-fail(v_674) then (if not-caught-fail(v_675) then (if not-caught-fail(v_676) then (v_674,v_675,v_676) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {106}let v_678: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_673),1-proj-3-tuple(v_677),3-proj-3-tuple(v_673)))) in
        {107}let v_679: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_677)) && success?(symmetricstatepack(1-proj-3-tuple(v_673),1-proj-3-tuple(v_677),3-proj-3-tuple(v_673)))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-3-tuple(v_678))))) then symmetricstatepack(1-proj-3-tuple(v_678),2-proj-3-tuple(v_678),hash(3-proj-3-tuple(v_678),2-proj-3-tuple(v_677))) else fail-any) else fail-any))) in
        {108}let v_680: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_629)) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_677)) then cipherstatepack(3-proj-3-tuple(v_677),minnonce) else fail-any),1-proj-3-tuple(v_677),3-proj-3-tuple(v_679)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {109}let v_681: bitstring = catch-fail(symmetricstateunpack(v_680)) in
        {110}let v_682: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_681))) in
        {111}let v_683: aead = catch-fail(decrypt(1-proj-2-tuple(v_682),2-proj-2-tuple(v_682),3-proj-3-tuple(v_681),3-proj-3-tuple(v_630))) in
        {112}let v_684: bitstring = catch-fail(aeadunpack(v_683)) in
        {113}let v_685: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_681))) in
        {114}let v_686: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_682))) && success?(1-proj-3-tuple(v_681))) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-2-tuple(v_685))))) then cipherstatepack(1-proj-2-tuple(v_685),increment_nonce(2-proj-2-tuple(v_682))) else fail-any) else fail-any)) in
        {115}let v_687: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_630)) && (success?(3-proj-3-tuple(v_681)) && success?(1-proj-3-tuple(v_681)))) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then (if not-caught-fail(v_683) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-3-tuple(v_684))))) then (if not-caught-fail(v_686) then (v_686,3-proj-3-tuple(v_684),1-proj-3-tuple(v_684)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {116}let v_688: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_687),2-proj-3-tuple(v_681),3-proj-3-tuple(v_681)))) in
        {117}let v_689: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_630)) && success?(symmetricstatepack(1-proj-3-tuple(v_687),2-proj-3-tuple(v_681),3-proj-3-tuple(v_681)))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-3-tuple(v_688))))) then symmetricstatepack(1-proj-3-tuple(v_688),2-proj-3-tuple(v_688),hash(3-proj-3-tuple(v_688),3-proj-3-tuple(v_630))) else fail-any) else fail-any)) in
        {118}let v_690: bitstring = catch-fail((if success?(3-proj-3-tuple(v_630)) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-3-tuple(v_681))))) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then (if not-caught-fail(v_689) then (v_689,2-proj-3-tuple(v_687),3-proj-3-tuple(v_687)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {119}let v_691: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {120}let v_692: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_690),2-proj-7-tuple(v_629),3-proj-7-tuple(v_629),v_665,v_632,6-proj-7-tuple(v_629),7-proj-7-tuple(v_629))) in
        {121}let v_693: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_690))) in
        {122}let v_694: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_693),zero)) in
        {123}let v_695: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_693),zero)) in
        {124}let v_696: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_693),zero)) in
        {125}let v_697: bitstring = catch-fail((if success?(2-proj-3-tuple(v_693)) then (if not-caught-fail(v_694) then (if not-caught-fail(v_695) then (if not-caught-fail(v_696) then (v_694,v_695,v_696) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {126}let v_698: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_697)) then cipherstatepack(1-proj-3-tuple(v_697),minnonce) else fail-any)) in
        {127}let v_699: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_697)) then cipherstatepack(2-proj-3-tuple(v_697),minnonce) else fail-any)) in
        {128}let v_700: bitstring = catch-fail((if success?(1-proj-3-tuple(v_690)) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-3-tuple(v_693))))) then (if (not-caught-fail(v_697) && success?(is-true(success?(1-proj-3-tuple(v_697))))) then (if not-caught-fail(v_698) then (if not-caught-fail(v_699) then (1-proj-3-tuple(v_690),v_698,v_699) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {129}let (hs_701: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-7-tuple(v_629))))) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-3-tuple(v_630))))) then (if not-caught-fail(v_631) then (if not-caught-fail(v_632) then (if not-caught-fail(v_634) then (if not-caught-fail(v_640) then (if not-caught-fail(v_647) then (if not-caught-fail(v_654) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-3-tuple(v_664))))) then (if not-caught-fail(v_665) then (if not-caught-fail(v_672) then (if not-caught-fail(v_680) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-3-tuple(v_690))))) then (if ((3-proj-3-tuple(v_664) && 3-proj-3-tuple(v_690)) && (v_665 = getpublickey((if not-caught-fail(v_691) then keypairpack(validkey(v_691),key_s(bob)) else fail-any)))) then (if not-caught-fail(v_692) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-3-tuple(v_700))))) then (v_692,2-proj-3-tuple(v_690),true,2-proj-3-tuple(v_700),3-proj-3-tuple(v_700)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {130}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {131}insert statestore(alice,bob,sid,statepack_c(hs_701,cs1,cs2))
    ) | (
        {133}!
        {152}get statestore(=alice,=bob,=sid,statepack_c(hs_702: handshakestate,cs1_703: cipherstate,cs2_704: cipherstate)) in
        {134}let hs_705: handshakestate = handshakestatesetcs(hs_702,cs1_703) in
        {135}let v_706: bitstring = catch-fail(handshakestateunpack(hs_705)) in
        {136}let v_707: bitstring = catch-fail((empty,empty,empty)) in
        {137}let v_708: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_706))) in
        {138}let v_709: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_708))) in
        {139}let v_710: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_709),2-proj-2-tuple(v_709),3-proj-3-tuple(v_708),msg_c(alice,bob,sid))) in
        {140}let v_711: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_708))) in
        {141}let v_712: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_709))) && success?(1-proj-3-tuple(v_708))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-2-tuple(v_711))))) then cipherstatepack(1-proj-2-tuple(v_711),increment_nonce(2-proj-2-tuple(v_709))) else fail-any) else fail-any)) in
        {142}let v_713: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_708)) && success?(1-proj-3-tuple(v_708))) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-2-tuple(v_709))))) then (if not-caught-fail(v_710) then (if not-caught-fail(v_712) then (v_712,v_710) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {143}let v_714: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_713),2-proj-3-tuple(v_708),3-proj-3-tuple(v_708)))) in
        {144}let v_715: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_713)) && success?(symmetricstatepack(1-proj-2-tuple(v_713),2-proj-3-tuple(v_708),3-proj-3-tuple(v_708)))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then symmetricstatepack(1-proj-3-tuple(v_714),2-proj-3-tuple(v_714),hash(3-proj-3-tuple(v_714),2-proj-2-tuple(v_713))) else fail-any) else fail-any)) in
        {145}let v_716: bitstring = catch-fail((if success?(1-proj-7-tuple(v_706)) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-2-tuple(v_713))))) then (if not-caught-fail(v_715) then (v_715,2-proj-2-tuple(v_713)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {146}let v_717: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_716),2-proj-7-tuple(v_706),3-proj-7-tuple(v_706),4-proj-7-tuple(v_706),5-proj-7-tuple(v_706),6-proj-7-tuple(v_706),7-proj-7-tuple(v_706))) in
        {147}let v_718: bitstring = catch-fail(concat3(1-proj-3-tuple(v_707),2-proj-3-tuple(v_707),2-proj-2-tuple(v_716))) in
        {148}let (hs_719: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-7-tuple(v_706))))) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_716) && success?(is-true(success?(1-proj-2-tuple(v_716))))) then (if not-caught-fail(v_717) then (if not-caught-fail(v_718) then (v_717,v_718) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {149}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {150}insert statestore(alice,bob,sid,statepack_d(hs_719,handshakestategetcs(hs_719),cs2_704));
        {151}out(pub, message_c)
    ) | (
        {153}!
        {173}get statestore(=alice,=bob,=sid,statepack_d(hs_720: handshakestate,cs1_721: cipherstate,cs2_722: cipherstate)) in
        {154}let hs_723: handshakestate = handshakestatesetcs(hs_720,cs2_722) in
        {155}in(pub, message_d: bitstring);
        {156}let v_724: bitstring = catch-fail(handshakestateunpack(hs_723)) in
        {157}let v_725: bitstring = catch-fail(deconcat3(message_d)) in
        {158}let v_726: bool = catch-fail(true) in
        {159}let v_727: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_724))) in
        {160}let v_728: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_727))) in
        {161}let v_729: aead = catch-fail(decrypt(1-proj-2-tuple(v_728),2-proj-2-tuple(v_728),3-proj-3-tuple(v_727),3-proj-3-tuple(v_725))) in
        {162}let v_730: bitstring = catch-fail(aeadunpack(v_729)) in
        {163}let v_731: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_727))) in
        {164}let v_732: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_728))) && success?(1-proj-3-tuple(v_727))) then (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-2-tuple(v_731))))) then cipherstatepack(1-proj-2-tuple(v_731),increment_nonce(2-proj-2-tuple(v_728))) else fail-any) else fail-any)) in
        {165}let v_733: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_725)) && (success?(3-proj-3-tuple(v_727)) && success?(1-proj-3-tuple(v_727)))) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-2-tuple(v_728))))) then (if not-caught-fail(v_729) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-3-tuple(v_730))))) then (if not-caught-fail(v_732) then (v_732,3-proj-3-tuple(v_730),1-proj-3-tuple(v_730)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {166}let v_734: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_733),2-proj-3-tuple(v_727),3-proj-3-tuple(v_727)))) in
        {167}let v_735: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_725)) && success?(symmetricstatepack(1-proj-3-tuple(v_733),2-proj-3-tuple(v_727),3-proj-3-tuple(v_727)))) then (if (not-caught-fail(v_734) && success?(is-true(success?(1-proj-3-tuple(v_734))))) then symmetricstatepack(1-proj-3-tuple(v_734),2-proj-3-tuple(v_734),hash(3-proj-3-tuple(v_734),3-proj-3-tuple(v_725))) else fail-any) else fail-any)) in
        {168}let v_736: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_725)) && success?(1-proj-7-tuple(v_724))) then (if (not-caught-fail(v_727) && success?(is-true(success?(1-proj-3-tuple(v_727))))) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then (if not-caught-fail(v_735) then (v_735,2-proj-3-tuple(v_733),3-proj-3-tuple(v_733)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {169}let v_737: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_736),2-proj-7-tuple(v_724),3-proj-7-tuple(v_724),4-proj-7-tuple(v_724),5-proj-7-tuple(v_724),6-proj-7-tuple(v_724),7-proj-7-tuple(v_724))) in
        {170}let (hs_738: handshakestate,plaintext_d: bitstring,valid_739: bool) = (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-7-tuple(v_724))))) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-3-tuple(v_725))))) then (if not-caught-fail(v_726) then (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-3-tuple(v_736))))) then (if (v_726 && 3-proj-3-tuple(v_736)) then (if not-caught-fail(v_737) then (v_737,2-proj-3-tuple(v_736),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {171}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {172}event RecvEnd(valid_739)
    ) | (
        {174}event LeakPsk(phase0,alice,bob);
        {175}out(pub, key_psk(alice,bob))
    ) | (
        {176}phase 1;
        {177}event LeakPsk(phase1,alice,bob);
        {178}out(pub, key_psk(alice,bob))
    ) | (
        {179}event LeakS(phase0,alice);
        {180}out(pub, key_s(alice))
    ) | (
        {181}phase 1;
        {182}event LeakS(phase1,alice);
        {183}out(pub, key_s(alice))
    )
) | (
    {184}let s_740: keypair = keypairpack(empty,empty) in
    {185}out(pub, getpublickey(s_740));
    (
        {186}let e_741: keypair = keypairpack(empty,empty) in
        {187}let rs_742: key = empty in
        {188}let re_743: key = empty in
        {189}let v_744: bitstring = catch-fail(hash(somename,empty)) in
        {190}let v_745: key = catch-fail(v_744) in
        {191}let v_746: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {192}let v_747: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_744) then (if not-caught-fail(v_745) then (if not-caught-fail(v_746) then symmetricstatepack(v_746,v_745,v_744) else fail-any) else fail-any) else fail-any))) in
        {193}let v_748: symmetricstate = catch-fail((if success?((if not-caught-fail(v_744) then (if not-caught-fail(v_745) then (if not-caught-fail(v_746) then symmetricstatepack(v_746,v_745,v_744) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then symmetricstatepack(1-proj-3-tuple(v_747),2-proj-3-tuple(v_747),hash(3-proj-3-tuple(v_747),empty)) else fail-any) else fail-any)) in
        {194}let hs_749: handshakestate = (if not-caught-fail(v_748) then handshakestatepack(v_748,s_740,e_741,rs_742,re_743,key_psk(alice,charlie),true) else fail-any) in
        {195}insert statestore(alice,charlie,sid,statepack_a(hs_749))
    ) | (
        {235}get statestore(=alice,=charlie,=sid,statepack_a(hs_750: handshakestate)) in
        {196}let v_751: bitstring = catch-fail(handshakestateunpack(hs_750)) in
        {197}let v_752: bitstring = catch-fail((empty,empty,empty)) in
        {198}let v_753: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {199}let v_754: keypair = catch-fail((if not-caught-fail(v_753) then keypairpack(validkey(v_753),key_e(alice,charlie,sid)) else fail-any)) in
        {200}let v_755: bitstring = catch-fail(getpublickey(v_754)) in
        {201}let v_756: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_751))) in
        {202}let v_757: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_751)) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then symmetricstatepack(1-proj-3-tuple(v_756),2-proj-3-tuple(v_756),hash(3-proj-3-tuple(v_756),v_755)) else fail-any) else fail-any)) in
        {203}let v_758: bitstring = catch-fail(symmetricstateunpack(v_757)) in
        {204}let v_759: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_758),getpublickey(v_754))) in
        {205}let v_760: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_758),getpublickey(v_754))) in
        {206}let v_761: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_758),getpublickey(v_754))) in
        {207}let v_762: bitstring = catch-fail((if (success?(getpublickey(v_754)) && success?(2-proj-3-tuple(v_758))) then (if not-caught-fail(v_759) then (if not-caught-fail(v_760) then (if not-caught-fail(v_761) then (v_759,v_760,v_761) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {208}let v_763: symmetricstate = catch-fail((if success?(getpublickey(v_754)) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-3-tuple(v_758))))) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_762)) then cipherstatepack(2-proj-3-tuple(v_762),minnonce) else fail-any),1-proj-3-tuple(v_762),3-proj-3-tuple(v_758)) else fail-any) else fail-any) else fail-any)) in
        {209}let v_764: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {210}let v_765: keypair = catch-fail((if not-caught-fail(v_764) then keypairpack(validkey(v_764),key_s(alice)) else fail-any)) in
        {211}let v_766: bitstring = catch-fail(symmetricstateunpack(v_763)) in
        {212}let v_767: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_766))) in
        {213}let v_768: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_767),2-proj-2-tuple(v_767),3-proj-3-tuple(v_766),getpublickey(v_765))) in
        {214}let v_769: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_766))) in
        {215}let v_770: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_767))) && success?(1-proj-3-tuple(v_766))) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-2-tuple(v_769))))) then cipherstatepack(1-proj-2-tuple(v_769),increment_nonce(2-proj-2-tuple(v_767))) else fail-any) else fail-any)) in
        {216}let v_771: bitstring = catch-fail((if (success?(getpublickey(v_765)) && (success?(3-proj-3-tuple(v_766)) && success?(1-proj-3-tuple(v_766)))) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-2-tuple(v_767))))) then (if not-caught-fail(v_768) then (if not-caught-fail(v_770) then (v_770,v_768) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {217}let v_772: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_771),2-proj-3-tuple(v_766),3-proj-3-tuple(v_766)))) in
        {218}let v_773: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_771)) && success?(symmetricstatepack(1-proj-2-tuple(v_771),2-proj-3-tuple(v_766),3-proj-3-tuple(v_766)))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_772),hash(3-proj-3-tuple(v_772),2-proj-2-tuple(v_771))) else fail-any) else fail-any)) in
        {219}let v_774: bitstring = catch-fail((if success?(getpublickey(v_765)) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-3-tuple(v_766))))) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-2-tuple(v_771))))) then (if not-caught-fail(v_773) then (v_773,2-proj-2-tuple(v_771)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {220}let v_775: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_774))) in
        {221}let v_776: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_775))) in
        {222}let v_777: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_776),2-proj-2-tuple(v_776),3-proj-3-tuple(v_775),msg_a(alice,charlie,sid))) in
        {223}let v_778: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_775))) in
        {224}let v_779: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_776))) && success?(1-proj-3-tuple(v_775))) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then cipherstatepack(1-proj-2-tuple(v_778),increment_nonce(2-proj-2-tuple(v_776))) else fail-any) else fail-any)) in
        {225}let v_780: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_775)) && success?(1-proj-3-tuple(v_775))) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then (if not-caught-fail(v_777) then (if not-caught-fail(v_779) then (v_779,v_777) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_781: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_780),2-proj-3-tuple(v_775),3-proj-3-tuple(v_775)))) in
        {227}let v_782: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_780)) && success?(symmetricstatepack(1-proj-2-tuple(v_780),2-proj-3-tuple(v_775),3-proj-3-tuple(v_775)))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-3-tuple(v_781))))) then symmetricstatepack(1-proj-3-tuple(v_781),2-proj-3-tuple(v_781),hash(3-proj-3-tuple(v_781),2-proj-2-tuple(v_780))) else fail-any) else fail-any)) in
        {228}let v_783: bitstring = catch-fail((if success?(1-proj-2-tuple(v_774)) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-2-tuple(v_780))))) then (if not-caught-fail(v_782) then (v_782,2-proj-2-tuple(v_780)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {229}let v_784: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_783),v_765,v_754,4-proj-7-tuple(v_751),5-proj-7-tuple(v_751),6-proj-7-tuple(v_751),7-proj-7-tuple(v_751))) in
        {230}let v_785: bitstring = catch-fail(concat3(v_755,2-proj-2-tuple(v_774),2-proj-2-tuple(v_783))) in
        {231}let (hs_786: handshakestate,message_a_787: bitstring) = (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-7-tuple(v_751))))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-3-tuple(v_752))))) then (if not-caught-fail(v_754) then (if not-caught-fail(v_755) then (if not-caught-fail(v_757) then (if not-caught-fail(v_763) then (if not-caught-fail(v_765) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then (if not-caught-fail(v_784) then (if not-caught-fail(v_785) then (v_784,v_785) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {232}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {233}insert statestore(alice,charlie,sid,statepack_b(hs_786));
        {234}out(pub, message_a_787)
    ) | (
        {312}get statestore(=alice,=charlie,=sid,statepack_b(hs_788: handshakestate)) in
        {236}in(pub, message_b_789: bitstring);
        {237}let v_790: bitstring = catch-fail(handshakestateunpack(hs_788)) in
        {238}let v_791: bitstring = catch-fail(deconcat3(message_b_789)) in
        {239}let v_792: bool = catch-fail(true) in
        {240}let v_793: key = catch-fail(1-proj-3-tuple(v_791)) in
        {241}let v_794: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_790))) in
        {242}let v_795: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_790)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_794),hash(3-proj-3-tuple(v_794),v_793)) else fail-any) else fail-any)) in
        {243}let v_796: bitstring = catch-fail(symmetricstateunpack(v_795)) in
        {244}let v_797: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_796),v_793)) in
        {245}let v_798: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_796),v_793)) in
        {246}let v_799: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_796),v_793)) in
        {247}let v_800: bitstring = catch-fail((if success?(2-proj-3-tuple(v_796)) then (if not-caught-fail(v_797) then (if not-caught-fail(v_798) then (if not-caught-fail(v_799) then (v_797,v_798,v_799) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {248}let v_801: symmetricstate = catch-fail((if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-3-tuple(v_796))))) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-3-tuple(v_800))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_800)) then cipherstatepack(2-proj-3-tuple(v_800),minnonce) else fail-any),1-proj-3-tuple(v_800),3-proj-3-tuple(v_796)) else fail-any) else fail-any)) in
        {249}let v_802: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_790))) in
        {250}let v_803: bitstring = catch-fail(symmetricstateunpack(v_801)) in
        {251}let v_804: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_803),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),v_793) else fail-any) else fail-any))) in
        {252}let v_805: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_803),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),v_793) else fail-any) else fail-any))) in
        {253}let v_806: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_803),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),v_793) else fail-any) else fail-any))) in
        {254}let v_807: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),v_793) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_803))) then (if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (if not-caught-fail(v_806) then (v_804,v_805,v_806) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {255}let v_808: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),v_793) else fail-any) else fail-any)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-3-tuple(v_803))))) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_807)) then cipherstatepack(2-proj-3-tuple(v_807),minnonce) else fail-any),1-proj-3-tuple(v_807),3-proj-3-tuple(v_803)) else fail-any) else fail-any) else fail-any)) in
        {256}let v_809: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_790))) in
        {257}let v_810: bitstring = catch-fail(symmetricstateunpack(v_808)) in
        {258}let v_811: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_810),(if success?(2-proj-7-tuple(v_790)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then dhexp(2-proj-2-tuple(v_809),v_793) else fail-any) else fail-any))) in
        {259}let v_812: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_810),(if success?(2-proj-7-tuple(v_790)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then dhexp(2-proj-2-tuple(v_809),v_793) else fail-any) else fail-any))) in
        {260}let v_813: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_810),(if success?(2-proj-7-tuple(v_790)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then dhexp(2-proj-2-tuple(v_809),v_793) else fail-any) else fail-any))) in
        {261}let v_814: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_790)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then dhexp(2-proj-2-tuple(v_809),v_793) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_810))) then (if not-caught-fail(v_811) then (if not-caught-fail(v_812) then (if not-caught-fail(v_813) then (v_811,v_812,v_813) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {262}let v_815: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_790)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then dhexp(2-proj-2-tuple(v_809),v_793) else fail-any) else fail-any)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-3-tuple(v_810))))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-3-tuple(v_814))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_814)) then cipherstatepack(2-proj-3-tuple(v_814),minnonce) else fail-any),1-proj-3-tuple(v_814),3-proj-3-tuple(v_810)) else fail-any) else fail-any) else fail-any)) in
        {263}let v_816: bitstring = catch-fail(symmetricstateunpack(v_815)) in
        {264}let v_817: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_816))) in
        {265}let v_818: aead = catch-fail(decrypt(1-proj-2-tuple(v_817),2-proj-2-tuple(v_817),3-proj-3-tuple(v_816),2-proj-3-tuple(v_791))) in
        {266}let v_819: bitstring = catch-fail(aeadunpack(v_818)) in
        {267}let v_820: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_816))) in
        {268}let v_821: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_817))) && success?(1-proj-3-tuple(v_816))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then cipherstatepack(1-proj-2-tuple(v_820),increment_nonce(2-proj-2-tuple(v_817))) else fail-any) else fail-any)) in
        {269}let v_822: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_791)) && (success?(3-proj-3-tuple(v_816)) && success?(1-proj-3-tuple(v_816)))) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-2-tuple(v_817))))) then (if not-caught-fail(v_818) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then (if not-caught-fail(v_821) then (v_821,3-proj-3-tuple(v_819),1-proj-3-tuple(v_819)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {270}let v_823: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_822),2-proj-3-tuple(v_816),3-proj-3-tuple(v_816)))) in
        {271}let v_824: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_791)) && success?(symmetricstatepack(1-proj-3-tuple(v_822),2-proj-3-tuple(v_816),3-proj-3-tuple(v_816)))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then symmetricstatepack(1-proj-3-tuple(v_823),2-proj-3-tuple(v_823),hash(3-proj-3-tuple(v_823),2-proj-3-tuple(v_791))) else fail-any) else fail-any)) in
        {272}let v_825: bitstring = catch-fail((if success?(2-proj-3-tuple(v_791)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-3-tuple(v_816))))) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-3-tuple(v_822))))) then (if not-caught-fail(v_824) then (v_824,2-proj-3-tuple(v_822),3-proj-3-tuple(v_822)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {273}let v_826: key = catch-fail(2-proj-3-tuple(v_825)) in
        {274}let v_827: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_790))) in
        {275}let v_828: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_825))) in
        {276}let v_829: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_828),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),v_826) else fail-any) else fail-any))) in
        {277}let v_830: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_828),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),v_826) else fail-any) else fail-any))) in
        {278}let v_831: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_828),(if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),v_826) else fail-any) else fail-any))) in
        {279}let v_832: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),v_826) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_828))) then (if not-caught-fail(v_829) then (if not-caught-fail(v_830) then (if not-caught-fail(v_831) then (v_829,v_830,v_831) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {280}let v_833: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_790)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),v_826) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_825))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_832)) then cipherstatepack(2-proj-3-tuple(v_832),minnonce) else fail-any),1-proj-3-tuple(v_832),3-proj-3-tuple(v_828)) else fail-any) else fail-any) else fail-any)) in
        {281}let v_834: bitstring = catch-fail(symmetricstateunpack(v_833)) in
        {282}let v_835: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_834),6-proj-7-tuple(v_790))) in
        {283}let v_836: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_834),6-proj-7-tuple(v_790))) in
        {284}let v_837: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_834),6-proj-7-tuple(v_790))) in
        {285}let v_838: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_790)) && success?(2-proj-3-tuple(v_834))) then (if not-caught-fail(v_835) then (if not-caught-fail(v_836) then (if not-caught-fail(v_837) then (v_835,v_836,v_837) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {286}let v_839: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_834),1-proj-3-tuple(v_838),3-proj-3-tuple(v_834)))) in
        {287}let v_840: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_838)) && success?(symmetricstatepack(1-proj-3-tuple(v_834),1-proj-3-tuple(v_838),3-proj-3-tuple(v_834)))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then symmetricstatepack(1-proj-3-tuple(v_839),2-proj-3-tuple(v_839),hash(3-proj-3-tuple(v_839),2-proj-3-tuple(v_838))) else fail-any) else fail-any))) in
        {288}let v_841: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_790)) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-3-tuple(v_838))))) then (if (not-caught-fail(v_840) && success?(is-true(success?(1-proj-3-tuple(v_840))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_838)) then cipherstatepack(3-proj-3-tuple(v_838),minnonce) else fail-any),1-proj-3-tuple(v_838),3-proj-3-tuple(v_840)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {289}let v_842: bitstring = catch-fail(symmetricstateunpack(v_841)) in
        {290}let v_843: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {291}let v_844: aead = catch-fail(decrypt(1-proj-2-tuple(v_843),2-proj-2-tuple(v_843),3-proj-3-tuple(v_842),3-proj-3-tuple(v_791))) in
        {292}let v_845: bitstring = catch-fail(aeadunpack(v_844)) in
        {293}let v_846: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {294}let v_847: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_843))) && success?(1-proj-3-tuple(v_842))) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-2-tuple(v_846))))) then cipherstatepack(1-proj-2-tuple(v_846),increment_nonce(2-proj-2-tuple(v_843))) else fail-any) else fail-any)) in
        {295}let v_848: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_791)) && (success?(3-proj-3-tuple(v_842)) && success?(1-proj-3-tuple(v_842)))) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-2-tuple(v_843))))) then (if not-caught-fail(v_844) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-3-tuple(v_845))))) then (if not-caught-fail(v_847) then (v_847,3-proj-3-tuple(v_845),1-proj-3-tuple(v_845)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {296}let v_849: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_848),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) in
        {297}let v_850: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_791)) && success?(symmetricstatepack(1-proj-3-tuple(v_848),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-3-tuple(v_849))))) then symmetricstatepack(1-proj-3-tuple(v_849),2-proj-3-tuple(v_849),hash(3-proj-3-tuple(v_849),3-proj-3-tuple(v_791))) else fail-any) else fail-any)) in
        {298}let v_851: bitstring = catch-fail((if success?(3-proj-3-tuple(v_791)) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-3-tuple(v_848))))) then (if not-caught-fail(v_850) then (v_850,2-proj-3-tuple(v_848),3-proj-3-tuple(v_848)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {299}let v_852: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {300}let v_853: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_851),2-proj-7-tuple(v_790),3-proj-7-tuple(v_790),v_826,v_793,6-proj-7-tuple(v_790),7-proj-7-tuple(v_790))) in
        {301}let v_854: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_851))) in
        {302}let v_855: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_854),zero)) in
        {303}let v_856: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_854),zero)) in
        {304}let v_857: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_854),zero)) in
        {305}let v_858: bitstring = catch-fail((if success?(2-proj-3-tuple(v_854)) then (if not-caught-fail(v_855) then (if not-caught-fail(v_856) then (if not-caught-fail(v_857) then (v_855,v_856,v_857) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {306}let v_859: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_858)) then cipherstatepack(1-proj-3-tuple(v_858),minnonce) else fail-any)) in
        {307}let v_860: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_858)) then cipherstatepack(2-proj-3-tuple(v_858),minnonce) else fail-any)) in
        {308}let v_861: bitstring = catch-fail((if success?(1-proj-3-tuple(v_851)) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then (if (not-caught-fail(v_858) && success?(is-true(success?(1-proj-3-tuple(v_858))))) then (if not-caught-fail(v_859) then (if not-caught-fail(v_860) then (1-proj-3-tuple(v_851),v_859,v_860) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {309}let (hs_862: handshakestate,plaintext_b_863: bitstring,valid_864: bool,cs1_865: cipherstate,cs2_866: cipherstate) = (if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-7-tuple(v_790))))) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if not-caught-fail(v_792) then (if not-caught-fail(v_793) then (if not-caught-fail(v_795) then (if not-caught-fail(v_801) then (if not-caught-fail(v_808) then (if not-caught-fail(v_815) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-3-tuple(v_825))))) then (if not-caught-fail(v_826) then (if not-caught-fail(v_833) then (if not-caught-fail(v_841) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-3-tuple(v_851))))) then (if ((3-proj-3-tuple(v_825) && 3-proj-3-tuple(v_851)) && (v_826 = getpublickey((if not-caught-fail(v_852) then keypairpack(validkey(v_852),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_853) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-3-tuple(v_861))))) then (v_853,2-proj-3-tuple(v_851),true,2-proj-3-tuple(v_861),3-proj-3-tuple(v_861)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {310}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_863);
        {311}insert statestore(alice,charlie,sid,statepack_c(hs_862,cs1_865,cs2_866))
    ) | (
        {313}!
        {332}get statestore(=alice,=charlie,=sid,statepack_c(hs_867: handshakestate,cs1_868: cipherstate,cs2_869: cipherstate)) in
        {314}let hs_870: handshakestate = handshakestatesetcs(hs_867,cs1_868) in
        {315}let v_871: bitstring = catch-fail(handshakestateunpack(hs_870)) in
        {316}let v_872: bitstring = catch-fail((empty,empty,empty)) in
        {317}let v_873: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_871))) in
        {318}let v_874: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_873))) in
        {319}let v_875: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_874),2-proj-2-tuple(v_874),3-proj-3-tuple(v_873),msg_c(alice,charlie,sid))) in
        {320}let v_876: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_873))) in
        {321}let v_877: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_874))) && success?(1-proj-3-tuple(v_873))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-2-tuple(v_876))))) then cipherstatepack(1-proj-2-tuple(v_876),increment_nonce(2-proj-2-tuple(v_874))) else fail-any) else fail-any)) in
        {322}let v_878: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_873)) && success?(1-proj-3-tuple(v_873))) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-2-tuple(v_874))))) then (if not-caught-fail(v_875) then (if not-caught-fail(v_877) then (v_877,v_875) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {323}let v_879: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_878),2-proj-3-tuple(v_873),3-proj-3-tuple(v_873)))) in
        {324}let v_880: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_878)) && success?(symmetricstatepack(1-proj-2-tuple(v_878),2-proj-3-tuple(v_873),3-proj-3-tuple(v_873)))) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then symmetricstatepack(1-proj-3-tuple(v_879),2-proj-3-tuple(v_879),hash(3-proj-3-tuple(v_879),2-proj-2-tuple(v_878))) else fail-any) else fail-any)) in
        {325}let v_881: bitstring = catch-fail((if success?(1-proj-7-tuple(v_871)) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-3-tuple(v_873))))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then (if not-caught-fail(v_880) then (v_880,2-proj-2-tuple(v_878)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {326}let v_882: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_881),2-proj-7-tuple(v_871),3-proj-7-tuple(v_871),4-proj-7-tuple(v_871),5-proj-7-tuple(v_871),6-proj-7-tuple(v_871),7-proj-7-tuple(v_871))) in
        {327}let v_883: bitstring = catch-fail(concat3(1-proj-3-tuple(v_872),2-proj-3-tuple(v_872),2-proj-2-tuple(v_881))) in
        {328}let (hs_884: handshakestate,message_c_885: bitstring) = (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-7-tuple(v_871))))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-2-tuple(v_881))))) then (if not-caught-fail(v_882) then (if not-caught-fail(v_883) then (v_882,v_883) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {329}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {330}insert statestore(alice,charlie,sid,statepack_d(hs_884,handshakestategetcs(hs_884),cs2_869));
        {331}out(pub, message_c_885)
    ) | (
        {333}!
        {353}get statestore(=alice,=charlie,=sid,statepack_d(hs_886: handshakestate,cs1_887: cipherstate,cs2_888: cipherstate)) in
        {334}let hs_889: handshakestate = handshakestatesetcs(hs_886,cs2_888) in
        {335}in(pub, message_d_890: bitstring);
        {336}let v_891: bitstring = catch-fail(handshakestateunpack(hs_889)) in
        {337}let v_892: bitstring = catch-fail(deconcat3(message_d_890)) in
        {338}let v_893: bool = catch-fail(true) in
        {339}let v_894: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_891))) in
        {340}let v_895: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_894))) in
        {341}let v_896: aead = catch-fail(decrypt(1-proj-2-tuple(v_895),2-proj-2-tuple(v_895),3-proj-3-tuple(v_894),3-proj-3-tuple(v_892))) in
        {342}let v_897: bitstring = catch-fail(aeadunpack(v_896)) in
        {343}let v_898: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_894))) in
        {344}let v_899: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_895))) && success?(1-proj-3-tuple(v_894))) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-2-tuple(v_898))))) then cipherstatepack(1-proj-2-tuple(v_898),increment_nonce(2-proj-2-tuple(v_895))) else fail-any) else fail-any)) in
        {345}let v_900: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_892)) && (success?(3-proj-3-tuple(v_894)) && success?(1-proj-3-tuple(v_894)))) then (if (not-caught-fail(v_895) && success?(is-true(success?(1-proj-2-tuple(v_895))))) then (if not-caught-fail(v_896) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-3-tuple(v_897))))) then (if not-caught-fail(v_899) then (v_899,3-proj-3-tuple(v_897),1-proj-3-tuple(v_897)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {346}let v_901: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_900),2-proj-3-tuple(v_894),3-proj-3-tuple(v_894)))) in
        {347}let v_902: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_892)) && success?(symmetricstatepack(1-proj-3-tuple(v_900),2-proj-3-tuple(v_894),3-proj-3-tuple(v_894)))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then symmetricstatepack(1-proj-3-tuple(v_901),2-proj-3-tuple(v_901),hash(3-proj-3-tuple(v_901),3-proj-3-tuple(v_892))) else fail-any) else fail-any)) in
        {348}let v_903: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_892)) && success?(1-proj-7-tuple(v_891))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-3-tuple(v_894))))) then (if (not-caught-fail(v_900) && success?(is-true(success?(1-proj-3-tuple(v_900))))) then (if not-caught-fail(v_902) then (v_902,2-proj-3-tuple(v_900),3-proj-3-tuple(v_900)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {349}let v_904: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_903),2-proj-7-tuple(v_891),3-proj-7-tuple(v_891),4-proj-7-tuple(v_891),5-proj-7-tuple(v_891),6-proj-7-tuple(v_891),7-proj-7-tuple(v_891))) in
        {350}let (hs_905: handshakestate,plaintext_d_906: bitstring,valid_907: bool) = (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-7-tuple(v_891))))) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-3-tuple(v_892))))) then (if not-caught-fail(v_893) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-3-tuple(v_903))))) then (if (v_893 && 3-proj-3-tuple(v_903)) then (if not-caught-fail(v_904) then (v_904,2-proj-3-tuple(v_903),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {351}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_906);
        {352}event RecvEnd(valid_907)
    ) | (
        {354}event LeakPsk(phase0,alice,charlie);
        {355}out(pub, key_psk(alice,charlie))
    ) | (
        {356}phase 1;
        {357}event LeakPsk(phase1,alice,charlie);
        {358}out(pub, key_psk(alice,charlie))
    ) | (
        {359}event LeakS(phase0,alice);
        {360}out(pub, key_s(alice))
    ) | (
        {361}phase 1;
        {362}event LeakS(phase1,alice);
        {363}out(pub, key_s(alice))
    )
) | (
    {364}let s_908: keypair = keypairpack(empty,empty) in
    {365}out(pub, getpublickey(s_908));
    (
        {366}let e_909: keypair = keypairpack(empty,empty) in
        {367}let rs_910: key = empty in
        {368}let re_911: key = empty in
        {369}let v_912: bitstring = catch-fail(hash(somename,empty)) in
        {370}let v_913: key = catch-fail(v_912) in
        {371}let v_914: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {372}let v_915: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_912) then (if not-caught-fail(v_913) then (if not-caught-fail(v_914) then symmetricstatepack(v_914,v_913,v_912) else fail-any) else fail-any) else fail-any))) in
        {373}let v_916: symmetricstate = catch-fail((if success?((if not-caught-fail(v_912) then (if not-caught-fail(v_913) then (if not-caught-fail(v_914) then symmetricstatepack(v_914,v_913,v_912) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then symmetricstatepack(1-proj-3-tuple(v_915),2-proj-3-tuple(v_915),hash(3-proj-3-tuple(v_915),empty)) else fail-any) else fail-any)) in
        {374}let hs_917: handshakestate = (if not-caught-fail(v_916) then handshakestatepack(v_916,s_908,e_909,rs_910,re_911,key_psk(alice,bob),false) else fail-any) in
        {375}insert statestore(bob,alice,sid,statepack_a(hs_917))
    ) | (
        {415}get statestore(=bob,=alice,=sid,statepack_a(hs_918: handshakestate)) in
        {376}in(pub, message_a_919: bitstring);
        {377}let v_920: bitstring = catch-fail(handshakestateunpack(hs_918)) in
        {378}let v_921: bitstring = catch-fail(deconcat3(message_a_919)) in
        {379}let v_922: bool = catch-fail(true) in
        {380}let v_923: key = catch-fail(1-proj-3-tuple(v_921)) in
        {381}let v_924: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_920))) in
        {382}let v_925: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_920)) then (if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-3-tuple(v_924))))) then symmetricstatepack(1-proj-3-tuple(v_924),2-proj-3-tuple(v_924),hash(3-proj-3-tuple(v_924),v_923)) else fail-any) else fail-any)) in
        {383}let v_926: bitstring = catch-fail(symmetricstateunpack(v_925)) in
        {384}let v_927: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_926),v_923)) in
        {385}let v_928: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_926),v_923)) in
        {386}let v_929: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_926),v_923)) in
        {387}let v_930: bitstring = catch-fail((if success?(2-proj-3-tuple(v_926)) then (if not-caught-fail(v_927) then (if not-caught-fail(v_928) then (if not-caught-fail(v_929) then (v_927,v_928,v_929) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {388}let v_931: symmetricstate = catch-fail((if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-3-tuple(v_930))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_930)) then cipherstatepack(2-proj-3-tuple(v_930),minnonce) else fail-any),1-proj-3-tuple(v_930),3-proj-3-tuple(v_926)) else fail-any) else fail-any)) in
        {389}let v_932: bitstring = catch-fail(symmetricstateunpack(v_931)) in
        {390}let v_933: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_932))) in
        {391}let v_934: aead = catch-fail(decrypt(1-proj-2-tuple(v_933),2-proj-2-tuple(v_933),3-proj-3-tuple(v_932),2-proj-3-tuple(v_921))) in
        {392}let v_935: bitstring = catch-fail(aeadunpack(v_934)) in
        {393}let v_936: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_932))) in
        {394}let v_937: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_933))) && success?(1-proj-3-tuple(v_932))) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-2-tuple(v_936))))) then cipherstatepack(1-proj-2-tuple(v_936),increment_nonce(2-proj-2-tuple(v_933))) else fail-any) else fail-any)) in
        {395}let v_938: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_921)) && (success?(3-proj-3-tuple(v_932)) && success?(1-proj-3-tuple(v_932)))) then (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-2-tuple(v_933))))) then (if not-caught-fail(v_934) then (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-3-tuple(v_935))))) then (if not-caught-fail(v_937) then (v_937,3-proj-3-tuple(v_935),1-proj-3-tuple(v_935)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {396}let v_939: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_938),2-proj-3-tuple(v_932),3-proj-3-tuple(v_932)))) in
        {397}let v_940: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_921)) && success?(symmetricstatepack(1-proj-3-tuple(v_938),2-proj-3-tuple(v_932),3-proj-3-tuple(v_932)))) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then symmetricstatepack(1-proj-3-tuple(v_939),2-proj-3-tuple(v_939),hash(3-proj-3-tuple(v_939),2-proj-3-tuple(v_921))) else fail-any) else fail-any)) in
        {398}let v_941: bitstring = catch-fail((if success?(2-proj-3-tuple(v_921)) then (if (not-caught-fail(v_932) && success?(is-true(success?(1-proj-3-tuple(v_932))))) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-3-tuple(v_938))))) then (if not-caught-fail(v_940) then (v_940,2-proj-3-tuple(v_938),3-proj-3-tuple(v_938)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {399}let v_942: key = catch-fail(2-proj-3-tuple(v_941)) in
        {400}let v_943: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_941))) in
        {401}let v_944: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_943))) in
        {402}let v_945: aead = catch-fail(decrypt(1-proj-2-tuple(v_944),2-proj-2-tuple(v_944),3-proj-3-tuple(v_943),3-proj-3-tuple(v_921))) in
        {403}let v_946: bitstring = catch-fail(aeadunpack(v_945)) in
        {404}let v_947: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_943))) in
        {405}let v_948: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_944))) && success?(1-proj-3-tuple(v_943))) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-2-tuple(v_947))))) then cipherstatepack(1-proj-2-tuple(v_947),increment_nonce(2-proj-2-tuple(v_944))) else fail-any) else fail-any)) in
        {406}let v_949: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_921)) && (success?(3-proj-3-tuple(v_943)) && success?(1-proj-3-tuple(v_943)))) then (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-2-tuple(v_944))))) then (if not-caught-fail(v_945) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-3-tuple(v_946))))) then (if not-caught-fail(v_948) then (v_948,3-proj-3-tuple(v_946),1-proj-3-tuple(v_946)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_950: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_949),2-proj-3-tuple(v_943),3-proj-3-tuple(v_943)))) in
        {408}let v_951: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_921)) && success?(symmetricstatepack(1-proj-3-tuple(v_949),2-proj-3-tuple(v_943),3-proj-3-tuple(v_943)))) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then symmetricstatepack(1-proj-3-tuple(v_950),2-proj-3-tuple(v_950),hash(3-proj-3-tuple(v_950),3-proj-3-tuple(v_921))) else fail-any) else fail-any)) in
        {409}let v_952: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_921)) && success?(1-proj-3-tuple(v_941))) then (if (not-caught-fail(v_943) && success?(is-true(success?(1-proj-3-tuple(v_943))))) then (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-3-tuple(v_949))))) then (if not-caught-fail(v_951) then (v_951,2-proj-3-tuple(v_949),3-proj-3-tuple(v_949)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {410}let v_953: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {411}let v_954: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_952),2-proj-7-tuple(v_920),3-proj-7-tuple(v_920),v_942,v_923,6-proj-7-tuple(v_920),7-proj-7-tuple(v_920))) in
        {412}let (hs_955: handshakestate,plaintext_a: bitstring,valid_956: bool) = (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-7-tuple(v_920))))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-3-tuple(v_921))))) then (if not-caught-fail(v_922) then (if not-caught-fail(v_923) then (if not-caught-fail(v_925) then (if not-caught-fail(v_931) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-3-tuple(v_941))))) then (if not-caught-fail(v_942) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-3-tuple(v_952))))) then (if ((3-proj-3-tuple(v_941) && 3-proj-3-tuple(v_952)) && (v_942 = getpublickey((if not-caught-fail(v_953) then keypairpack(validkey(v_953),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_954) then (v_954,2-proj-3-tuple(v_952),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {413}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {414}insert statestore(bob,alice,sid,statepack_b(hs_955))
    ) | (
        {492}get statestore(=bob,=alice,=sid,statepack_b(hs_957: handshakestate)) in
        {416}let v_958: bitstring = catch-fail(handshakestateunpack(hs_957)) in
        {417}let v_959: bitstring = catch-fail((empty,empty,empty)) in
        {418}let v_960: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {419}let v_961: keypair = catch-fail((if not-caught-fail(v_960) then keypairpack(validkey(v_960),key_e(bob,alice,sid)) else fail-any)) in
        {420}let v_962: bitstring = catch-fail(getpublickey(v_961)) in
        {421}let v_963: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_958))) in
        {422}let v_964: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_958)) then (if (not-caught-fail(v_963) && success?(is-true(success?(1-proj-3-tuple(v_963))))) then symmetricstatepack(1-proj-3-tuple(v_963),2-proj-3-tuple(v_963),hash(3-proj-3-tuple(v_963),v_962)) else fail-any) else fail-any)) in
        {423}let v_965: bitstring = catch-fail(symmetricstateunpack(v_964)) in
        {424}let v_966: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_965),getpublickey(v_961))) in
        {425}let v_967: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_965),getpublickey(v_961))) in
        {426}let v_968: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_965),getpublickey(v_961))) in
        {427}let v_969: bitstring = catch-fail((if (success?(getpublickey(v_961)) && success?(2-proj-3-tuple(v_965))) then (if not-caught-fail(v_966) then (if not-caught-fail(v_967) then (if not-caught-fail(v_968) then (v_966,v_967,v_968) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {428}let v_970: symmetricstate = catch-fail((if success?(getpublickey(v_961)) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-3-tuple(v_965))))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_969)) then cipherstatepack(2-proj-3-tuple(v_969),minnonce) else fail-any),1-proj-3-tuple(v_969),3-proj-3-tuple(v_965)) else fail-any) else fail-any) else fail-any)) in
        {429}let v_971: bitstring = catch-fail(keypairunpack(v_961)) in
        {430}let v_972: bitstring = catch-fail(symmetricstateunpack(v_970)) in
        {431}let v_973: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_972),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then dhexp(2-proj-2-tuple(v_971),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {432}let v_974: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_972),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then dhexp(2-proj-2-tuple(v_971),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {433}let v_975: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_972),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then dhexp(2-proj-2-tuple(v_971),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {434}let v_976: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then dhexp(2-proj-2-tuple(v_971),5-proj-7-tuple(v_958)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_972))) then (if not-caught-fail(v_973) then (if not-caught-fail(v_974) then (if not-caught-fail(v_975) then (v_973,v_974,v_975) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {435}let v_977: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then dhexp(2-proj-2-tuple(v_971),5-proj-7-tuple(v_958)) else fail-any) else fail-any)) then (if (not-caught-fail(v_972) && success?(is-true(success?(1-proj-3-tuple(v_972))))) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_976)) then cipherstatepack(2-proj-3-tuple(v_976),minnonce) else fail-any),1-proj-3-tuple(v_976),3-proj-3-tuple(v_972)) else fail-any) else fail-any) else fail-any)) in
        {436}let v_978: bitstring = catch-fail(keypairunpack(v_961)) in
        {437}let v_979: bitstring = catch-fail(symmetricstateunpack(v_977)) in
        {438}let v_980: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_979),(if success?(4-proj-7-tuple(v_958)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-2-tuple(v_978))))) then dhexp(2-proj-2-tuple(v_978),4-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {439}let v_981: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_979),(if success?(4-proj-7-tuple(v_958)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-2-tuple(v_978))))) then dhexp(2-proj-2-tuple(v_978),4-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {440}let v_982: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_979),(if success?(4-proj-7-tuple(v_958)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-2-tuple(v_978))))) then dhexp(2-proj-2-tuple(v_978),4-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {441}let v_983: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_958)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-2-tuple(v_978))))) then dhexp(2-proj-2-tuple(v_978),4-proj-7-tuple(v_958)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_979))) then (if not-caught-fail(v_980) then (if not-caught-fail(v_981) then (if not-caught-fail(v_982) then (v_980,v_981,v_982) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {442}let v_984: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_958)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-2-tuple(v_978))))) then dhexp(2-proj-2-tuple(v_978),4-proj-7-tuple(v_958)) else fail-any) else fail-any)) then (if (not-caught-fail(v_979) && success?(is-true(success?(1-proj-3-tuple(v_979))))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_983)) then cipherstatepack(2-proj-3-tuple(v_983),minnonce) else fail-any),1-proj-3-tuple(v_983),3-proj-3-tuple(v_979)) else fail-any) else fail-any) else fail-any)) in
        {443}let v_985: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {444}let v_986: keypair = catch-fail((if not-caught-fail(v_985) then keypairpack(validkey(v_985),key_s(bob)) else fail-any)) in
        {445}let v_987: bitstring = catch-fail(symmetricstateunpack(v_984)) in
        {446}let v_988: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_987))) in
        {447}let v_989: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_988),2-proj-2-tuple(v_988),3-proj-3-tuple(v_987),getpublickey(v_986))) in
        {448}let v_990: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_987))) in
        {449}let v_991: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_988))) && success?(1-proj-3-tuple(v_987))) then (if (not-caught-fail(v_990) && success?(is-true(success?(1-proj-2-tuple(v_990))))) then cipherstatepack(1-proj-2-tuple(v_990),increment_nonce(2-proj-2-tuple(v_988))) else fail-any) else fail-any)) in
        {450}let v_992: bitstring = catch-fail((if (success?(getpublickey(v_986)) && (success?(3-proj-3-tuple(v_987)) && success?(1-proj-3-tuple(v_987)))) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-2-tuple(v_988))))) then (if not-caught-fail(v_989) then (if not-caught-fail(v_991) then (v_991,v_989) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {451}let v_993: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_992),2-proj-3-tuple(v_987),3-proj-3-tuple(v_987)))) in
        {452}let v_994: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_992)) && success?(symmetricstatepack(1-proj-2-tuple(v_992),2-proj-3-tuple(v_987),3-proj-3-tuple(v_987)))) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-3-tuple(v_993))))) then symmetricstatepack(1-proj-3-tuple(v_993),2-proj-3-tuple(v_993),hash(3-proj-3-tuple(v_993),2-proj-2-tuple(v_992))) else fail-any) else fail-any)) in
        {453}let v_995: bitstring = catch-fail((if success?(getpublickey(v_986)) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-3-tuple(v_987))))) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-2-tuple(v_992))))) then (if not-caught-fail(v_994) then (v_994,2-proj-2-tuple(v_992)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {454}let v_996: bitstring = catch-fail(keypairunpack(v_986)) in
        {455}let v_997: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_995))) in
        {456}let v_998: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_997),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {457}let v_999: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_997),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {458}let v_1000: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_997),(if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),5-proj-7-tuple(v_958)) else fail-any) else fail-any))) in
        {459}let v_1001: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),5-proj-7-tuple(v_958)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_997))) then (if not-caught-fail(v_998) then (if not-caught-fail(v_999) then (if not-caught-fail(v_1000) then (v_998,v_999,v_1000) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {460}let v_1002: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_958)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-2-tuple(v_996))))) then dhexp(2-proj-2-tuple(v_996),5-proj-7-tuple(v_958)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_995))) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-3-tuple(v_997))))) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-3-tuple(v_1001))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1001)) then cipherstatepack(2-proj-3-tuple(v_1001),minnonce) else fail-any),1-proj-3-tuple(v_1001),3-proj-3-tuple(v_997)) else fail-any) else fail-any) else fail-any)) in
        {461}let v_1003: bitstring = catch-fail(symmetricstateunpack(v_1002)) in
        {462}let v_1004: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1003),6-proj-7-tuple(v_958))) in
        {463}let v_1005: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1003),6-proj-7-tuple(v_958))) in
        {464}let v_1006: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1003),6-proj-7-tuple(v_958))) in
        {465}let v_1007: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_958)) && success?(2-proj-3-tuple(v_1003))) then (if not-caught-fail(v_1004) then (if not-caught-fail(v_1005) then (if not-caught-fail(v_1006) then (v_1004,v_1005,v_1006) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {466}let v_1008: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1003),1-proj-3-tuple(v_1007),3-proj-3-tuple(v_1003)))) in
        {467}let v_1009: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1007)) && success?(symmetricstatepack(1-proj-3-tuple(v_1003),1-proj-3-tuple(v_1007),3-proj-3-tuple(v_1003)))) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-3-tuple(v_1008))))) then symmetricstatepack(1-proj-3-tuple(v_1008),2-proj-3-tuple(v_1008),hash(3-proj-3-tuple(v_1008),2-proj-3-tuple(v_1007))) else fail-any) else fail-any))) in
        {468}let v_1010: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_958)) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if (not-caught-fail(v_1007) && success?(is-true(success?(1-proj-3-tuple(v_1007))))) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1007)) then cipherstatepack(3-proj-3-tuple(v_1007),minnonce) else fail-any),1-proj-3-tuple(v_1007),3-proj-3-tuple(v_1009)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {469}let v_1011: bitstring = catch-fail(symmetricstateunpack(v_1010)) in
        {470}let v_1012: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1011))) in
        {471}let v_1013: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1012),2-proj-2-tuple(v_1012),3-proj-3-tuple(v_1011),msg_b(bob,alice,sid))) in
        {472}let v_1014: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1011))) in
        {473}let v_1015: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1012))) && success?(1-proj-3-tuple(v_1011))) then (if (not-caught-fail(v_1014) && success?(is-true(success?(1-proj-2-tuple(v_1014))))) then cipherstatepack(1-proj-2-tuple(v_1014),increment_nonce(2-proj-2-tuple(v_1012))) else fail-any) else fail-any)) in
        {474}let v_1016: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1011)) && success?(1-proj-3-tuple(v_1011))) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-2-tuple(v_1012))))) then (if not-caught-fail(v_1013) then (if not-caught-fail(v_1015) then (v_1015,v_1013) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {475}let v_1017: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1016),2-proj-3-tuple(v_1011),3-proj-3-tuple(v_1011)))) in
        {476}let v_1018: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1016)) && success?(symmetricstatepack(1-proj-2-tuple(v_1016),2-proj-3-tuple(v_1011),3-proj-3-tuple(v_1011)))) then (if (not-caught-fail(v_1017) && success?(is-true(success?(1-proj-3-tuple(v_1017))))) then symmetricstatepack(1-proj-3-tuple(v_1017),2-proj-3-tuple(v_1017),hash(3-proj-3-tuple(v_1017),2-proj-2-tuple(v_1016))) else fail-any) else fail-any)) in
        {477}let v_1019: bitstring = catch-fail((if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-3-tuple(v_1011))))) then (if (not-caught-fail(v_1016) && success?(is-true(success?(1-proj-2-tuple(v_1016))))) then (if not-caught-fail(v_1018) then (v_1018,2-proj-2-tuple(v_1016)) else fail-any) else fail-any) else fail-any)) in
        {478}let v_1020: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1019),v_986,v_961,4-proj-7-tuple(v_958),5-proj-7-tuple(v_958),6-proj-7-tuple(v_958),7-proj-7-tuple(v_958))) in
        {479}let v_1021: bitstring = catch-fail(concat3(v_962,2-proj-2-tuple(v_995),2-proj-2-tuple(v_1019))) in
        {480}let v_1022: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1019))) in
        {481}let v_1023: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1022),zero)) in
        {482}let v_1024: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1022),zero)) in
        {483}let v_1025: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1022),zero)) in
        {484}let v_1026: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1022)) then (if not-caught-fail(v_1023) then (if not-caught-fail(v_1024) then (if not-caught-fail(v_1025) then (v_1023,v_1024,v_1025) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let v_1027: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1026)) then cipherstatepack(1-proj-3-tuple(v_1026),minnonce) else fail-any)) in
        {486}let v_1028: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1026)) then cipherstatepack(2-proj-3-tuple(v_1026),minnonce) else fail-any)) in
        {487}let v_1029: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1019)) then (if (not-caught-fail(v_1022) && success?(is-true(success?(1-proj-3-tuple(v_1022))))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-3-tuple(v_1026))))) then (if not-caught-fail(v_1027) then (if not-caught-fail(v_1028) then (1-proj-2-tuple(v_1019),v_1027,v_1028) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {488}let (hs_1030: handshakestate,message_b_1031: bitstring,cs1_1032: cipherstate,cs2_1033: cipherstate) = (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-7-tuple(v_958))))) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-3-tuple(v_959))))) then (if not-caught-fail(v_961) then (if not-caught-fail(v_962) then (if not-caught-fail(v_964) then (if not-caught-fail(v_970) then (if not-caught-fail(v_977) then (if not-caught-fail(v_984) then (if not-caught-fail(v_986) then (if (not-caught-fail(v_995) && success?(is-true(success?(1-proj-2-tuple(v_995))))) then (if not-caught-fail(v_1002) then (if not-caught-fail(v_1010) then (if (not-caught-fail(v_1019) && success?(is-true(success?(1-proj-2-tuple(v_1019))))) then (if not-caught-fail(v_1020) then (if not-caught-fail(v_1021) then (if (not-caught-fail(v_1029) && success?(is-true(success?(1-proj-3-tuple(v_1029))))) then (v_1020,v_1021,2-proj-3-tuple(v_1029),3-proj-3-tuple(v_1029)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {489}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {490}insert statestore(bob,alice,sid,statepack_c(hs_1030,cs1_1032,cs2_1033));
        {491}out(pub, message_b_1031)
    ) | (
        {493}!
        {513}get statestore(=bob,=alice,=sid,statepack_c(hs_1034: handshakestate,cs1_1035: cipherstate,cs2_1036: cipherstate)) in
        {494}let hs_1037: handshakestate = handshakestatesetcs(hs_1034,cs1_1035) in
        {495}in(pub, message_c_1038: bitstring);
        {496}let v_1039: bitstring = catch-fail(handshakestateunpack(hs_1037)) in
        {497}let v_1040: bitstring = catch-fail(deconcat3(message_c_1038)) in
        {498}let v_1041: bool = catch-fail(true) in
        {499}let v_1042: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1039))) in
        {500}let v_1043: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1042))) in
        {501}let v_1044: aead = catch-fail(decrypt(1-proj-2-tuple(v_1043),2-proj-2-tuple(v_1043),3-proj-3-tuple(v_1042),3-proj-3-tuple(v_1040))) in
        {502}let v_1045: bitstring = catch-fail(aeadunpack(v_1044)) in
        {503}let v_1046: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1042))) in
        {504}let v_1047: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1043))) && success?(1-proj-3-tuple(v_1042))) then (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-2-tuple(v_1046))))) then cipherstatepack(1-proj-2-tuple(v_1046),increment_nonce(2-proj-2-tuple(v_1043))) else fail-any) else fail-any)) in
        {505}let v_1048: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1040)) && (success?(3-proj-3-tuple(v_1042)) && success?(1-proj-3-tuple(v_1042)))) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-2-tuple(v_1043))))) then (if not-caught-fail(v_1044) then (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-3-tuple(v_1045))))) then (if not-caught-fail(v_1047) then (v_1047,3-proj-3-tuple(v_1045),1-proj-3-tuple(v_1045)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {506}let v_1049: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1048),2-proj-3-tuple(v_1042),3-proj-3-tuple(v_1042)))) in
        {507}let v_1050: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1040)) && success?(symmetricstatepack(1-proj-3-tuple(v_1048),2-proj-3-tuple(v_1042),3-proj-3-tuple(v_1042)))) then (if (not-caught-fail(v_1049) && success?(is-true(success?(1-proj-3-tuple(v_1049))))) then symmetricstatepack(1-proj-3-tuple(v_1049),2-proj-3-tuple(v_1049),hash(3-proj-3-tuple(v_1049),3-proj-3-tuple(v_1040))) else fail-any) else fail-any)) in
        {508}let v_1051: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1040)) && success?(1-proj-7-tuple(v_1039))) then (if (not-caught-fail(v_1042) && success?(is-true(success?(1-proj-3-tuple(v_1042))))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then (if not-caught-fail(v_1050) then (v_1050,2-proj-3-tuple(v_1048),3-proj-3-tuple(v_1048)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {509}let v_1052: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1051),2-proj-7-tuple(v_1039),3-proj-7-tuple(v_1039),4-proj-7-tuple(v_1039),5-proj-7-tuple(v_1039),6-proj-7-tuple(v_1039),7-proj-7-tuple(v_1039))) in
        {510}let (hs_1053: handshakestate,plaintext_c: bitstring,valid_1054: bool) = (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-7-tuple(v_1039))))) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-3-tuple(v_1040))))) then (if not-caught-fail(v_1041) then (if (not-caught-fail(v_1051) && success?(is-true(success?(1-proj-3-tuple(v_1051))))) then (if (v_1041 && 3-proj-3-tuple(v_1051)) then (if not-caught-fail(v_1052) then (v_1052,2-proj-3-tuple(v_1051),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {511}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {512}insert statestore(bob,alice,sid,statepack_d(hs_1053,handshakestategetcs(hs_1053),cs2_1036))
    ) | (
        {514}!
        {532}get statestore(=bob,=alice,=sid,statepack_d(hs_1055: handshakestate,cs1_1056: cipherstate,cs2_1057: cipherstate)) in
        {515}let hs_1058: handshakestate = handshakestatesetcs(hs_1055,cs2_1057) in
        {516}let v_1059: bitstring = catch-fail(handshakestateunpack(hs_1058)) in
        {517}let v_1060: bitstring = catch-fail((empty,empty,empty)) in
        {518}let v_1061: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1059))) in
        {519}let v_1062: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1061))) in
        {520}let v_1063: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1062),2-proj-2-tuple(v_1062),3-proj-3-tuple(v_1061),msg_d(bob,alice,sid))) in
        {521}let v_1064: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1061))) in
        {522}let v_1065: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1062))) && success?(1-proj-3-tuple(v_1061))) then (if (not-caught-fail(v_1064) && success?(is-true(success?(1-proj-2-tuple(v_1064))))) then cipherstatepack(1-proj-2-tuple(v_1064),increment_nonce(2-proj-2-tuple(v_1062))) else fail-any) else fail-any)) in
        {523}let v_1066: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1061)) && success?(1-proj-3-tuple(v_1061))) then (if (not-caught-fail(v_1062) && success?(is-true(success?(1-proj-2-tuple(v_1062))))) then (if not-caught-fail(v_1063) then (if not-caught-fail(v_1065) then (v_1065,v_1063) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {524}let v_1067: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1066),2-proj-3-tuple(v_1061),3-proj-3-tuple(v_1061)))) in
        {525}let v_1068: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1066)) && success?(symmetricstatepack(1-proj-2-tuple(v_1066),2-proj-3-tuple(v_1061),3-proj-3-tuple(v_1061)))) then (if (not-caught-fail(v_1067) && success?(is-true(success?(1-proj-3-tuple(v_1067))))) then symmetricstatepack(1-proj-3-tuple(v_1067),2-proj-3-tuple(v_1067),hash(3-proj-3-tuple(v_1067),2-proj-2-tuple(v_1066))) else fail-any) else fail-any)) in
        {526}let v_1069: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1059)) then (if (not-caught-fail(v_1061) && success?(is-true(success?(1-proj-3-tuple(v_1061))))) then (if (not-caught-fail(v_1066) && success?(is-true(success?(1-proj-2-tuple(v_1066))))) then (if not-caught-fail(v_1068) then (v_1068,2-proj-2-tuple(v_1066)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {527}let v_1070: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1069),2-proj-7-tuple(v_1059),3-proj-7-tuple(v_1059),4-proj-7-tuple(v_1059),5-proj-7-tuple(v_1059),6-proj-7-tuple(v_1059),7-proj-7-tuple(v_1059))) in
        {528}let v_1071: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1060),2-proj-3-tuple(v_1060),2-proj-2-tuple(v_1069))) in
        {529}let (hs_1072: handshakestate,message_d_1073: bitstring) = (if (not-caught-fail(v_1059) && success?(is-true(success?(1-proj-7-tuple(v_1059))))) then (if (not-caught-fail(v_1060) && success?(is-true(success?(1-proj-3-tuple(v_1060))))) then (if (not-caught-fail(v_1069) && success?(is-true(success?(1-proj-2-tuple(v_1069))))) then (if not-caught-fail(v_1070) then (if not-caught-fail(v_1071) then (v_1070,v_1071) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {530}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {531}out(pub, message_d_1073)
    ) | (
        {533}event LeakPsk(phase0,alice,bob);
        {534}out(pub, key_psk(alice,bob))
    ) | (
        {535}phase 1;
        {536}event LeakPsk(phase1,alice,bob);
        {537}out(pub, key_psk(alice,bob))
    ) | (
        {538}event LeakS(phase0,bob);
        {539}out(pub, key_s(bob))
    ) | (
        {540}phase 1;
        {541}event LeakS(phase1,bob);
        {542}out(pub, key_s(bob))
    )
) | (
    {543}let s_1074: keypair = keypairpack(empty,empty) in
    {544}out(pub, getpublickey(s_1074));
    (
        {545}let e_1075: keypair = keypairpack(empty,empty) in
        {546}let rs_1076: key = empty in
        {547}let re_1077: key = empty in
        {548}let v_1078: bitstring = catch-fail(hash(somename,empty)) in
        {549}let v_1079: key = catch-fail(v_1078) in
        {550}let v_1080: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {551}let v_1081: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1078) then (if not-caught-fail(v_1079) then (if not-caught-fail(v_1080) then symmetricstatepack(v_1080,v_1079,v_1078) else fail-any) else fail-any) else fail-any))) in
        {552}let v_1082: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1078) then (if not-caught-fail(v_1079) then (if not-caught-fail(v_1080) then symmetricstatepack(v_1080,v_1079,v_1078) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-3-tuple(v_1081))))) then symmetricstatepack(1-proj-3-tuple(v_1081),2-proj-3-tuple(v_1081),hash(3-proj-3-tuple(v_1081),empty)) else fail-any) else fail-any)) in
        {553}let hs_1083: handshakestate = (if not-caught-fail(v_1082) then handshakestatepack(v_1082,s_1074,e_1075,rs_1076,re_1077,key_psk(charlie,bob),false) else fail-any) in
        {554}insert statestore(bob,charlie,sid,statepack_a(hs_1083))
    ) | (
        {594}get statestore(=bob,=charlie,=sid,statepack_a(hs_1084: handshakestate)) in
        {555}in(pub, message_a_1085: bitstring);
        {556}let v_1086: bitstring = catch-fail(handshakestateunpack(hs_1084)) in
        {557}let v_1087: bitstring = catch-fail(deconcat3(message_a_1085)) in
        {558}let v_1088: bool = catch-fail(true) in
        {559}let v_1089: key = catch-fail(1-proj-3-tuple(v_1087)) in
        {560}let v_1090: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1086))) in
        {561}let v_1091: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1086)) then (if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-3-tuple(v_1090))))) then symmetricstatepack(1-proj-3-tuple(v_1090),2-proj-3-tuple(v_1090),hash(3-proj-3-tuple(v_1090),v_1089)) else fail-any) else fail-any)) in
        {562}let v_1092: bitstring = catch-fail(symmetricstateunpack(v_1091)) in
        {563}let v_1093: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1092),v_1089)) in
        {564}let v_1094: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1092),v_1089)) in
        {565}let v_1095: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1092),v_1089)) in
        {566}let v_1096: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1092)) then (if not-caught-fail(v_1093) then (if not-caught-fail(v_1094) then (if not-caught-fail(v_1095) then (v_1093,v_1094,v_1095) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {567}let v_1097: symmetricstate = catch-fail((if (not-caught-fail(v_1092) && success?(is-true(success?(1-proj-3-tuple(v_1092))))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-3-tuple(v_1096))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1096)) then cipherstatepack(2-proj-3-tuple(v_1096),minnonce) else fail-any),1-proj-3-tuple(v_1096),3-proj-3-tuple(v_1092)) else fail-any) else fail-any)) in
        {568}let v_1098: bitstring = catch-fail(symmetricstateunpack(v_1097)) in
        {569}let v_1099: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1098))) in
        {570}let v_1100: aead = catch-fail(decrypt(1-proj-2-tuple(v_1099),2-proj-2-tuple(v_1099),3-proj-3-tuple(v_1098),2-proj-3-tuple(v_1087))) in
        {571}let v_1101: bitstring = catch-fail(aeadunpack(v_1100)) in
        {572}let v_1102: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1098))) in
        {573}let v_1103: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1099))) && success?(1-proj-3-tuple(v_1098))) then (if (not-caught-fail(v_1102) && success?(is-true(success?(1-proj-2-tuple(v_1102))))) then cipherstatepack(1-proj-2-tuple(v_1102),increment_nonce(2-proj-2-tuple(v_1099))) else fail-any) else fail-any)) in
        {574}let v_1104: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1087)) && (success?(3-proj-3-tuple(v_1098)) && success?(1-proj-3-tuple(v_1098)))) then (if (not-caught-fail(v_1099) && success?(is-true(success?(1-proj-2-tuple(v_1099))))) then (if not-caught-fail(v_1100) then (if (not-caught-fail(v_1101) && success?(is-true(success?(1-proj-3-tuple(v_1101))))) then (if not-caught-fail(v_1103) then (v_1103,3-proj-3-tuple(v_1101),1-proj-3-tuple(v_1101)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {575}let v_1105: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1104),2-proj-3-tuple(v_1098),3-proj-3-tuple(v_1098)))) in
        {576}let v_1106: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1087)) && success?(symmetricstatepack(1-proj-3-tuple(v_1104),2-proj-3-tuple(v_1098),3-proj-3-tuple(v_1098)))) then (if (not-caught-fail(v_1105) && success?(is-true(success?(1-proj-3-tuple(v_1105))))) then symmetricstatepack(1-proj-3-tuple(v_1105),2-proj-3-tuple(v_1105),hash(3-proj-3-tuple(v_1105),2-proj-3-tuple(v_1087))) else fail-any) else fail-any)) in
        {577}let v_1107: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1087)) then (if (not-caught-fail(v_1098) && success?(is-true(success?(1-proj-3-tuple(v_1098))))) then (if (not-caught-fail(v_1104) && success?(is-true(success?(1-proj-3-tuple(v_1104))))) then (if not-caught-fail(v_1106) then (v_1106,2-proj-3-tuple(v_1104),3-proj-3-tuple(v_1104)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {578}let v_1108: key = catch-fail(2-proj-3-tuple(v_1107)) in
        {579}let v_1109: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1107))) in
        {580}let v_1110: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1109))) in
        {581}let v_1111: aead = catch-fail(decrypt(1-proj-2-tuple(v_1110),2-proj-2-tuple(v_1110),3-proj-3-tuple(v_1109),3-proj-3-tuple(v_1087))) in
        {582}let v_1112: bitstring = catch-fail(aeadunpack(v_1111)) in
        {583}let v_1113: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1109))) in
        {584}let v_1114: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1110))) && success?(1-proj-3-tuple(v_1109))) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then cipherstatepack(1-proj-2-tuple(v_1113),increment_nonce(2-proj-2-tuple(v_1110))) else fail-any) else fail-any)) in
        {585}let v_1115: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1087)) && (success?(3-proj-3-tuple(v_1109)) && success?(1-proj-3-tuple(v_1109)))) then (if (not-caught-fail(v_1110) && success?(is-true(success?(1-proj-2-tuple(v_1110))))) then (if not-caught-fail(v_1111) then (if (not-caught-fail(v_1112) && success?(is-true(success?(1-proj-3-tuple(v_1112))))) then (if not-caught-fail(v_1114) then (v_1114,3-proj-3-tuple(v_1112),1-proj-3-tuple(v_1112)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {586}let v_1116: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1115),2-proj-3-tuple(v_1109),3-proj-3-tuple(v_1109)))) in
        {587}let v_1117: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1087)) && success?(symmetricstatepack(1-proj-3-tuple(v_1115),2-proj-3-tuple(v_1109),3-proj-3-tuple(v_1109)))) then (if (not-caught-fail(v_1116) && success?(is-true(success?(1-proj-3-tuple(v_1116))))) then symmetricstatepack(1-proj-3-tuple(v_1116),2-proj-3-tuple(v_1116),hash(3-proj-3-tuple(v_1116),3-proj-3-tuple(v_1087))) else fail-any) else fail-any)) in
        {588}let v_1118: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1087)) && success?(1-proj-3-tuple(v_1107))) then (if (not-caught-fail(v_1109) && success?(is-true(success?(1-proj-3-tuple(v_1109))))) then (if (not-caught-fail(v_1115) && success?(is-true(success?(1-proj-3-tuple(v_1115))))) then (if not-caught-fail(v_1117) then (v_1117,2-proj-3-tuple(v_1115),3-proj-3-tuple(v_1115)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {589}let v_1119: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {590}let v_1120: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1118),2-proj-7-tuple(v_1086),3-proj-7-tuple(v_1086),v_1108,v_1089,6-proj-7-tuple(v_1086),7-proj-7-tuple(v_1086))) in
        {591}let (hs_1121: handshakestate,plaintext_a_1122: bitstring,valid_1123: bool) = (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-7-tuple(v_1086))))) then (if (not-caught-fail(v_1087) && success?(is-true(success?(1-proj-3-tuple(v_1087))))) then (if not-caught-fail(v_1088) then (if not-caught-fail(v_1089) then (if not-caught-fail(v_1091) then (if not-caught-fail(v_1097) then (if (not-caught-fail(v_1107) && success?(is-true(success?(1-proj-3-tuple(v_1107))))) then (if not-caught-fail(v_1108) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then (if ((3-proj-3-tuple(v_1107) && 3-proj-3-tuple(v_1118)) && (v_1108 = getpublickey((if not-caught-fail(v_1119) then keypairpack(validkey(v_1119),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1120) then (v_1120,2-proj-3-tuple(v_1118),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {592}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1122);
        {593}insert statestore(bob,charlie,sid,statepack_b(hs_1121))
    ) | (
        {671}get statestore(=bob,=charlie,=sid,statepack_b(hs_1124: handshakestate)) in
        {595}let v_1125: bitstring = catch-fail(handshakestateunpack(hs_1124)) in
        {596}let v_1126: bitstring = catch-fail((empty,empty,empty)) in
        {597}let v_1127: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {598}let v_1128: keypair = catch-fail((if not-caught-fail(v_1127) then keypairpack(validkey(v_1127),key_e(bob,charlie,sid)) else fail-any)) in
        {599}let v_1129: bitstring = catch-fail(getpublickey(v_1128)) in
        {600}let v_1130: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1125))) in
        {601}let v_1131: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1130) && success?(is-true(success?(1-proj-3-tuple(v_1130))))) then symmetricstatepack(1-proj-3-tuple(v_1130),2-proj-3-tuple(v_1130),hash(3-proj-3-tuple(v_1130),v_1129)) else fail-any) else fail-any)) in
        {602}let v_1132: bitstring = catch-fail(symmetricstateunpack(v_1131)) in
        {603}let v_1133: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1132),getpublickey(v_1128))) in
        {604}let v_1134: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1132),getpublickey(v_1128))) in
        {605}let v_1135: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1132),getpublickey(v_1128))) in
        {606}let v_1136: bitstring = catch-fail((if (success?(getpublickey(v_1128)) && success?(2-proj-3-tuple(v_1132))) then (if not-caught-fail(v_1133) then (if not-caught-fail(v_1134) then (if not-caught-fail(v_1135) then (v_1133,v_1134,v_1135) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {607}let v_1137: symmetricstate = catch-fail((if success?(getpublickey(v_1128)) then (if (not-caught-fail(v_1132) && success?(is-true(success?(1-proj-3-tuple(v_1132))))) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-3-tuple(v_1136))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1136)) then cipherstatepack(2-proj-3-tuple(v_1136),minnonce) else fail-any),1-proj-3-tuple(v_1136),3-proj-3-tuple(v_1132)) else fail-any) else fail-any) else fail-any)) in
        {608}let v_1138: bitstring = catch-fail(keypairunpack(v_1128)) in
        {609}let v_1139: bitstring = catch-fail(symmetricstateunpack(v_1137)) in
        {610}let v_1140: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1139),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then dhexp(2-proj-2-tuple(v_1138),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {611}let v_1141: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1139),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then dhexp(2-proj-2-tuple(v_1138),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {612}let v_1142: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1139),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then dhexp(2-proj-2-tuple(v_1138),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {613}let v_1143: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then dhexp(2-proj-2-tuple(v_1138),5-proj-7-tuple(v_1125)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1139))) then (if not-caught-fail(v_1140) then (if not-caught-fail(v_1141) then (if not-caught-fail(v_1142) then (v_1140,v_1141,v_1142) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {614}let v_1144: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then dhexp(2-proj-2-tuple(v_1138),5-proj-7-tuple(v_1125)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-3-tuple(v_1139))))) then (if (not-caught-fail(v_1143) && success?(is-true(success?(1-proj-3-tuple(v_1143))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1143)) then cipherstatepack(2-proj-3-tuple(v_1143),minnonce) else fail-any),1-proj-3-tuple(v_1143),3-proj-3-tuple(v_1139)) else fail-any) else fail-any) else fail-any)) in
        {615}let v_1145: bitstring = catch-fail(keypairunpack(v_1128)) in
        {616}let v_1146: bitstring = catch-fail(symmetricstateunpack(v_1144)) in
        {617}let v_1147: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1146),(if success?(4-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-2-tuple(v_1145))))) then dhexp(2-proj-2-tuple(v_1145),4-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {618}let v_1148: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1146),(if success?(4-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-2-tuple(v_1145))))) then dhexp(2-proj-2-tuple(v_1145),4-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {619}let v_1149: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1146),(if success?(4-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-2-tuple(v_1145))))) then dhexp(2-proj-2-tuple(v_1145),4-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {620}let v_1150: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-2-tuple(v_1145))))) then dhexp(2-proj-2-tuple(v_1145),4-proj-7-tuple(v_1125)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1146))) then (if not-caught-fail(v_1147) then (if not-caught-fail(v_1148) then (if not-caught-fail(v_1149) then (v_1147,v_1148,v_1149) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {621}let v_1151: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-2-tuple(v_1145))))) then dhexp(2-proj-2-tuple(v_1145),4-proj-7-tuple(v_1125)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1146) && success?(is-true(success?(1-proj-3-tuple(v_1146))))) then (if (not-caught-fail(v_1150) && success?(is-true(success?(1-proj-3-tuple(v_1150))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1150)) then cipherstatepack(2-proj-3-tuple(v_1150),minnonce) else fail-any),1-proj-3-tuple(v_1150),3-proj-3-tuple(v_1146)) else fail-any) else fail-any) else fail-any)) in
        {622}let v_1152: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {623}let v_1153: keypair = catch-fail((if not-caught-fail(v_1152) then keypairpack(validkey(v_1152),key_s(bob)) else fail-any)) in
        {624}let v_1154: bitstring = catch-fail(symmetricstateunpack(v_1151)) in
        {625}let v_1155: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1154))) in
        {626}let v_1156: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1155),2-proj-2-tuple(v_1155),3-proj-3-tuple(v_1154),getpublickey(v_1153))) in
        {627}let v_1157: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1154))) in
        {628}let v_1158: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1155))) && success?(1-proj-3-tuple(v_1154))) then (if (not-caught-fail(v_1157) && success?(is-true(success?(1-proj-2-tuple(v_1157))))) then cipherstatepack(1-proj-2-tuple(v_1157),increment_nonce(2-proj-2-tuple(v_1155))) else fail-any) else fail-any)) in
        {629}let v_1159: bitstring = catch-fail((if (success?(getpublickey(v_1153)) && (success?(3-proj-3-tuple(v_1154)) && success?(1-proj-3-tuple(v_1154)))) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then (if not-caught-fail(v_1156) then (if not-caught-fail(v_1158) then (v_1158,v_1156) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {630}let v_1160: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1159),2-proj-3-tuple(v_1154),3-proj-3-tuple(v_1154)))) in
        {631}let v_1161: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1159)) && success?(symmetricstatepack(1-proj-2-tuple(v_1159),2-proj-3-tuple(v_1154),3-proj-3-tuple(v_1154)))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-3-tuple(v_1160))))) then symmetricstatepack(1-proj-3-tuple(v_1160),2-proj-3-tuple(v_1160),hash(3-proj-3-tuple(v_1160),2-proj-2-tuple(v_1159))) else fail-any) else fail-any)) in
        {632}let v_1162: bitstring = catch-fail((if success?(getpublickey(v_1153)) then (if (not-caught-fail(v_1154) && success?(is-true(success?(1-proj-3-tuple(v_1154))))) then (if (not-caught-fail(v_1159) && success?(is-true(success?(1-proj-2-tuple(v_1159))))) then (if not-caught-fail(v_1161) then (v_1161,2-proj-2-tuple(v_1159)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {633}let v_1163: bitstring = catch-fail(keypairunpack(v_1153)) in
        {634}let v_1164: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1162))) in
        {635}let v_1165: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1164),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then dhexp(2-proj-2-tuple(v_1163),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {636}let v_1166: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1164),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then dhexp(2-proj-2-tuple(v_1163),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {637}let v_1167: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1164),(if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then dhexp(2-proj-2-tuple(v_1163),5-proj-7-tuple(v_1125)) else fail-any) else fail-any))) in
        {638}let v_1168: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then dhexp(2-proj-2-tuple(v_1163),5-proj-7-tuple(v_1125)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1164))) then (if not-caught-fail(v_1165) then (if not-caught-fail(v_1166) then (if not-caught-fail(v_1167) then (v_1165,v_1166,v_1167) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {639}let v_1169: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then dhexp(2-proj-2-tuple(v_1163),5-proj-7-tuple(v_1125)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_1162))) then (if (not-caught-fail(v_1164) && success?(is-true(success?(1-proj-3-tuple(v_1164))))) then (if (not-caught-fail(v_1168) && success?(is-true(success?(1-proj-3-tuple(v_1168))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1168)) then cipherstatepack(2-proj-3-tuple(v_1168),minnonce) else fail-any),1-proj-3-tuple(v_1168),3-proj-3-tuple(v_1164)) else fail-any) else fail-any) else fail-any)) in
        {640}let v_1170: bitstring = catch-fail(symmetricstateunpack(v_1169)) in
        {641}let v_1171: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1170),6-proj-7-tuple(v_1125))) in
        {642}let v_1172: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1170),6-proj-7-tuple(v_1125))) in
        {643}let v_1173: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1170),6-proj-7-tuple(v_1125))) in
        {644}let v_1174: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1125)) && success?(2-proj-3-tuple(v_1170))) then (if not-caught-fail(v_1171) then (if not-caught-fail(v_1172) then (if not-caught-fail(v_1173) then (v_1171,v_1172,v_1173) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {645}let v_1175: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1170),1-proj-3-tuple(v_1174),3-proj-3-tuple(v_1170)))) in
        {646}let v_1176: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1174)) && success?(symmetricstatepack(1-proj-3-tuple(v_1170),1-proj-3-tuple(v_1174),3-proj-3-tuple(v_1170)))) then (if (not-caught-fail(v_1175) && success?(is-true(success?(1-proj-3-tuple(v_1175))))) then symmetricstatepack(1-proj-3-tuple(v_1175),2-proj-3-tuple(v_1175),hash(3-proj-3-tuple(v_1175),2-proj-3-tuple(v_1174))) else fail-any) else fail-any))) in
        {647}let v_1177: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1125)) then (if (not-caught-fail(v_1170) && success?(is-true(success?(1-proj-3-tuple(v_1170))))) then (if (not-caught-fail(v_1174) && success?(is-true(success?(1-proj-3-tuple(v_1174))))) then (if (not-caught-fail(v_1176) && success?(is-true(success?(1-proj-3-tuple(v_1176))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1174)) then cipherstatepack(3-proj-3-tuple(v_1174),minnonce) else fail-any),1-proj-3-tuple(v_1174),3-proj-3-tuple(v_1176)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {648}let v_1178: bitstring = catch-fail(symmetricstateunpack(v_1177)) in
        {649}let v_1179: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1178))) in
        {650}let v_1180: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1179),2-proj-2-tuple(v_1179),3-proj-3-tuple(v_1178),msg_b(bob,charlie,sid))) in
        {651}let v_1181: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1178))) in
        {652}let v_1182: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1179))) && success?(1-proj-3-tuple(v_1178))) then (if (not-caught-fail(v_1181) && success?(is-true(success?(1-proj-2-tuple(v_1181))))) then cipherstatepack(1-proj-2-tuple(v_1181),increment_nonce(2-proj-2-tuple(v_1179))) else fail-any) else fail-any)) in
        {653}let v_1183: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1178)) && success?(1-proj-3-tuple(v_1178))) then (if (not-caught-fail(v_1179) && success?(is-true(success?(1-proj-2-tuple(v_1179))))) then (if not-caught-fail(v_1180) then (if not-caught-fail(v_1182) then (v_1182,v_1180) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {654}let v_1184: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1183),2-proj-3-tuple(v_1178),3-proj-3-tuple(v_1178)))) in
        {655}let v_1185: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1183)) && success?(symmetricstatepack(1-proj-2-tuple(v_1183),2-proj-3-tuple(v_1178),3-proj-3-tuple(v_1178)))) then (if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-3-tuple(v_1184))))) then symmetricstatepack(1-proj-3-tuple(v_1184),2-proj-3-tuple(v_1184),hash(3-proj-3-tuple(v_1184),2-proj-2-tuple(v_1183))) else fail-any) else fail-any)) in
        {656}let v_1186: bitstring = catch-fail((if (not-caught-fail(v_1178) && success?(is-true(success?(1-proj-3-tuple(v_1178))))) then (if (not-caught-fail(v_1183) && success?(is-true(success?(1-proj-2-tuple(v_1183))))) then (if not-caught-fail(v_1185) then (v_1185,2-proj-2-tuple(v_1183)) else fail-any) else fail-any) else fail-any)) in
        {657}let v_1187: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1186),v_1153,v_1128,4-proj-7-tuple(v_1125),5-proj-7-tuple(v_1125),6-proj-7-tuple(v_1125),7-proj-7-tuple(v_1125))) in
        {658}let v_1188: bitstring = catch-fail(concat3(v_1129,2-proj-2-tuple(v_1162),2-proj-2-tuple(v_1186))) in
        {659}let v_1189: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1186))) in
        {660}let v_1190: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1189),zero)) in
        {661}let v_1191: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1189),zero)) in
        {662}let v_1192: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1189),zero)) in
        {663}let v_1193: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1189)) then (if not-caught-fail(v_1190) then (if not-caught-fail(v_1191) then (if not-caught-fail(v_1192) then (v_1190,v_1191,v_1192) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {664}let v_1194: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1193)) then cipherstatepack(1-proj-3-tuple(v_1193),minnonce) else fail-any)) in
        {665}let v_1195: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1193)) then cipherstatepack(2-proj-3-tuple(v_1193),minnonce) else fail-any)) in
        {666}let v_1196: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1186)) then (if (not-caught-fail(v_1189) && success?(is-true(success?(1-proj-3-tuple(v_1189))))) then (if (not-caught-fail(v_1193) && success?(is-true(success?(1-proj-3-tuple(v_1193))))) then (if not-caught-fail(v_1194) then (if not-caught-fail(v_1195) then (1-proj-2-tuple(v_1186),v_1194,v_1195) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {667}let (hs_1197: handshakestate,message_b_1198: bitstring,cs1_1199: cipherstate,cs2_1200: cipherstate) = (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-7-tuple(v_1125))))) then (if (not-caught-fail(v_1126) && success?(is-true(success?(1-proj-3-tuple(v_1126))))) then (if not-caught-fail(v_1128) then (if not-caught-fail(v_1129) then (if not-caught-fail(v_1131) then (if not-caught-fail(v_1137) then (if not-caught-fail(v_1144) then (if not-caught-fail(v_1151) then (if not-caught-fail(v_1153) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-2-tuple(v_1162))))) then (if not-caught-fail(v_1169) then (if not-caught-fail(v_1177) then (if (not-caught-fail(v_1186) && success?(is-true(success?(1-proj-2-tuple(v_1186))))) then (if not-caught-fail(v_1187) then (if not-caught-fail(v_1188) then (if (not-caught-fail(v_1196) && success?(is-true(success?(1-proj-3-tuple(v_1196))))) then (v_1187,v_1188,2-proj-3-tuple(v_1196),3-proj-3-tuple(v_1196)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {668}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {669}insert statestore(bob,charlie,sid,statepack_c(hs_1197,cs1_1199,cs2_1200));
        {670}out(pub, message_b_1198)
    ) | (
        {672}!
        {692}get statestore(=bob,=charlie,=sid,statepack_c(hs_1201: handshakestate,cs1_1202: cipherstate,cs2_1203: cipherstate)) in
        {673}let hs_1204: handshakestate = handshakestatesetcs(hs_1201,cs1_1202) in
        {674}in(pub, message_c_1205: bitstring);
        {675}let v_1206: bitstring = catch-fail(handshakestateunpack(hs_1204)) in
        {676}let v_1207: bitstring = catch-fail(deconcat3(message_c_1205)) in
        {677}let v_1208: bool = catch-fail(true) in
        {678}let v_1209: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1206))) in
        {679}let v_1210: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1209))) in
        {680}let v_1211: aead = catch-fail(decrypt(1-proj-2-tuple(v_1210),2-proj-2-tuple(v_1210),3-proj-3-tuple(v_1209),3-proj-3-tuple(v_1207))) in
        {681}let v_1212: bitstring = catch-fail(aeadunpack(v_1211)) in
        {682}let v_1213: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1209))) in
        {683}let v_1214: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1210))) && success?(1-proj-3-tuple(v_1209))) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then cipherstatepack(1-proj-2-tuple(v_1213),increment_nonce(2-proj-2-tuple(v_1210))) else fail-any) else fail-any)) in
        {684}let v_1215: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1207)) && (success?(3-proj-3-tuple(v_1209)) && success?(1-proj-3-tuple(v_1209)))) then (if (not-caught-fail(v_1210) && success?(is-true(success?(1-proj-2-tuple(v_1210))))) then (if not-caught-fail(v_1211) then (if (not-caught-fail(v_1212) && success?(is-true(success?(1-proj-3-tuple(v_1212))))) then (if not-caught-fail(v_1214) then (v_1214,3-proj-3-tuple(v_1212),1-proj-3-tuple(v_1212)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {685}let v_1216: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1215),2-proj-3-tuple(v_1209),3-proj-3-tuple(v_1209)))) in
        {686}let v_1217: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1207)) && success?(symmetricstatepack(1-proj-3-tuple(v_1215),2-proj-3-tuple(v_1209),3-proj-3-tuple(v_1209)))) then (if (not-caught-fail(v_1216) && success?(is-true(success?(1-proj-3-tuple(v_1216))))) then symmetricstatepack(1-proj-3-tuple(v_1216),2-proj-3-tuple(v_1216),hash(3-proj-3-tuple(v_1216),3-proj-3-tuple(v_1207))) else fail-any) else fail-any)) in
        {687}let v_1218: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1207)) && success?(1-proj-7-tuple(v_1206))) then (if (not-caught-fail(v_1209) && success?(is-true(success?(1-proj-3-tuple(v_1209))))) then (if (not-caught-fail(v_1215) && success?(is-true(success?(1-proj-3-tuple(v_1215))))) then (if not-caught-fail(v_1217) then (v_1217,2-proj-3-tuple(v_1215),3-proj-3-tuple(v_1215)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {688}let v_1219: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1218),2-proj-7-tuple(v_1206),3-proj-7-tuple(v_1206),4-proj-7-tuple(v_1206),5-proj-7-tuple(v_1206),6-proj-7-tuple(v_1206),7-proj-7-tuple(v_1206))) in
        {689}let (hs_1220: handshakestate,plaintext_c_1221: bitstring,valid_1222: bool) = (if (not-caught-fail(v_1206) && success?(is-true(success?(1-proj-7-tuple(v_1206))))) then (if (not-caught-fail(v_1207) && success?(is-true(success?(1-proj-3-tuple(v_1207))))) then (if not-caught-fail(v_1208) then (if (not-caught-fail(v_1218) && success?(is-true(success?(1-proj-3-tuple(v_1218))))) then (if (v_1208 && 3-proj-3-tuple(v_1218)) then (if not-caught-fail(v_1219) then (v_1219,2-proj-3-tuple(v_1218),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {690}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1221);
        {691}insert statestore(bob,charlie,sid,statepack_d(hs_1220,handshakestategetcs(hs_1220),cs2_1203))
    ) | (
        {693}!
        {711}get statestore(=bob,=charlie,=sid,statepack_d(hs_1223: handshakestate,cs1_1224: cipherstate,cs2_1225: cipherstate)) in
        {694}let hs_1226: handshakestate = handshakestatesetcs(hs_1223,cs2_1225) in
        {695}let v_1227: bitstring = catch-fail(handshakestateunpack(hs_1226)) in
        {696}let v_1228: bitstring = catch-fail((empty,empty,empty)) in
        {697}let v_1229: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1227))) in
        {698}let v_1230: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1229))) in
        {699}let v_1231: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1230),2-proj-2-tuple(v_1230),3-proj-3-tuple(v_1229),msg_d(bob,charlie,sid))) in
        {700}let v_1232: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1229))) in
        {701}let v_1233: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1230))) && success?(1-proj-3-tuple(v_1229))) then (if (not-caught-fail(v_1232) && success?(is-true(success?(1-proj-2-tuple(v_1232))))) then cipherstatepack(1-proj-2-tuple(v_1232),increment_nonce(2-proj-2-tuple(v_1230))) else fail-any) else fail-any)) in
        {702}let v_1234: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1229)) && success?(1-proj-3-tuple(v_1229))) then (if (not-caught-fail(v_1230) && success?(is-true(success?(1-proj-2-tuple(v_1230))))) then (if not-caught-fail(v_1231) then (if not-caught-fail(v_1233) then (v_1233,v_1231) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {703}let v_1235: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1234),2-proj-3-tuple(v_1229),3-proj-3-tuple(v_1229)))) in
        {704}let v_1236: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1234)) && success?(symmetricstatepack(1-proj-2-tuple(v_1234),2-proj-3-tuple(v_1229),3-proj-3-tuple(v_1229)))) then (if (not-caught-fail(v_1235) && success?(is-true(success?(1-proj-3-tuple(v_1235))))) then symmetricstatepack(1-proj-3-tuple(v_1235),2-proj-3-tuple(v_1235),hash(3-proj-3-tuple(v_1235),2-proj-2-tuple(v_1234))) else fail-any) else fail-any)) in
        {705}let v_1237: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1227)) then (if (not-caught-fail(v_1229) && success?(is-true(success?(1-proj-3-tuple(v_1229))))) then (if (not-caught-fail(v_1234) && success?(is-true(success?(1-proj-2-tuple(v_1234))))) then (if not-caught-fail(v_1236) then (v_1236,2-proj-2-tuple(v_1234)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {706}let v_1238: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1237),2-proj-7-tuple(v_1227),3-proj-7-tuple(v_1227),4-proj-7-tuple(v_1227),5-proj-7-tuple(v_1227),6-proj-7-tuple(v_1227),7-proj-7-tuple(v_1227))) in
        {707}let v_1239: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1228),2-proj-3-tuple(v_1228),2-proj-2-tuple(v_1237))) in
        {708}let (hs_1240: handshakestate,message_d_1241: bitstring) = (if (not-caught-fail(v_1227) && success?(is-true(success?(1-proj-7-tuple(v_1227))))) then (if (not-caught-fail(v_1228) && success?(is-true(success?(1-proj-3-tuple(v_1228))))) then (if (not-caught-fail(v_1237) && success?(is-true(success?(1-proj-2-tuple(v_1237))))) then (if not-caught-fail(v_1238) then (if not-caught-fail(v_1239) then (v_1238,v_1239) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {709}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {710}out(pub, message_d_1241)
    ) | (
        {712}event LeakPsk(phase0,charlie,bob);
        {713}out(pub, key_psk(charlie,bob))
    ) | (
        {714}phase 1;
        {715}event LeakPsk(phase1,charlie,bob);
        {716}out(pub, key_psk(charlie,bob))
    ) | (
        {717}event LeakS(phase0,bob);
        {718}out(pub, key_s(bob))
    ) | (
        {719}phase 1;
        {720}event LeakS(phase1,bob);
        {721}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 220 rules in the queue.
400 rules inserted. The rule base contains 400 rules. 42 rules in the queue.
600 rules inserted. The rule base contains 568 rules. 164 rules in the queue.
800 rules inserted. The rule base contains 730 rules. 141 rules in the queue.
1000 rules inserted. The rule base contains 913 rules. 214 rules in the queue.
1200 rules inserted. The rule base contains 1084 rules. 231 rules in the queue.
1400 rules inserted. The rule base contains 1239 rules. 255 rules in the queue.
1600 rules inserted. The rule base contains 1287 rules. 180 rules in the queue.
1800 rules inserted. The rule base contains 1437 rules. 209 rules in the queue.
2000 rules inserted. The rule base contains 1567 rules. 254 rules in the queue.
2200 rules inserted. The rule base contains 1699 rules. 291 rules in the queue.
2400 rules inserted. The rule base contains 1788 rules. 304 rules in the queue.
2600 rules inserted. The rule base contains 1918 rules. 329 rules in the queue.
2800 rules inserted. The rule base contains 2029 rules. 322 rules in the queue.
3000 rules inserted. The rule base contains 2151 rules. 299 rules in the queue.
3200 rules inserted. The rule base contains 2318 rules. 313 rules in the queue.
3400 rules inserted. The rule base contains 2473 rules. 327 rules in the queue.
3600 rules inserted. The rule base contains 2612 rules. 362 rules in the queue.
3800 rules inserted. The rule base contains 2788 rules. 408 rules in the queue.
4000 rules inserted. The rule base contains 2945 rules. 434 rules in the queue.
4200 rules inserted. The rule base contains 3083 rules. 460 rules in the queue.
4400 rules inserted. The rule base contains 3208 rules. 461 rules in the queue.
4600 rules inserted. The rule base contains 3336 rules. 475 rules in the queue.
4800 rules inserted. The rule base contains 3453 rules. 480 rules in the queue.
5000 rules inserted. The rule base contains 3566 rules. 469 rules in the queue.
5200 rules inserted. The rule base contains 3690 rules. 468 rules in the queue.
5400 rules inserted. The rule base contains 3838 rules. 443 rules in the queue.
5600 rules inserted. The rule base contains 3989 rules. 411 rules in the queue.
5800 rules inserted. The rule base contains 4156 rules. 422 rules in the queue.
6000 rules inserted. The rule base contains 4301 rules. 435 rules in the queue.
6200 rules inserted. The rule base contains 4441 rules. 425 rules in the queue.
6400 rules inserted. The rule base contains 4594 rules. 433 rules in the queue.
6600 rules inserted. The rule base contains 4748 rules. 448 rules in the queue.
6800 rules inserted. The rule base contains 4892 rules. 481 rules in the queue.
7000 rules inserted. The rule base contains 5041 rules. 500 rules in the queue.
7200 rules inserted. The rule base contains 5173 rules. 528 rules in the queue.
7400 rules inserted. The rule base contains 5285 rules. 555 rules in the queue.
7600 rules inserted. The rule base contains 5395 rules. 575 rules in the queue.
7800 rules inserted. The rule base contains 5507 rules. 577 rules in the queue.
8000 rules inserted. The rule base contains 5634 rules. 585 rules in the queue.
8200 rules inserted. The rule base contains 5725 rules. 568 rules in the queue.
8400 rules inserted. The rule base contains 5828 rules. 533 rules in the queue.
8600 rules inserted. The rule base contains 5922 rules. 488 rules in the queue.
8800 rules inserted. The rule base contains 6028 rules. 455 rules in the queue.
9000 rules inserted. The rule base contains 6174 rules. 430 rules in the queue.
9200 rules inserted. The rule base contains 6271 rules. 441 rules in the queue.
9400 rules inserted. The rule base contains 6400 rules. 430 rules in the queue.
9600 rules inserted. The rule base contains 6478 rules. 433 rules in the queue.
9800 rules inserted. The rule base contains 6559 rules. 429 rules in the queue.
10000 rules inserted. The rule base contains 6665 rules. 429 rules in the queue.
10200 rules inserted. The rule base contains 6760 rules. 378 rules in the queue.
10400 rules inserted. The rule base contains 6902 rules. 335 rules in the queue.
10600 rules inserted. The rule base contains 6999 rules. 297 rules in the queue.
10800 rules inserted. The rule base contains 7129 rules. 294 rules in the queue.
11000 rules inserted. The rule base contains 7249 rules. 258 rules in the queue.
11200 rules inserted. The rule base contains 7357 rules. 256 rules in the queue.
11400 rules inserted. The rule base contains 7461 rules. 258 rules in the queue.
11600 rules inserted. The rule base contains 7515 rules. 229 rules in the queue.
11800 rules inserted. The rule base contains 7588 rules. 197 rules in the queue.
12000 rules inserted. The rule base contains 7655 rules. 110 rules in the queue.
12200 rules inserted. The rule base contains 7669 rules. 34 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_30823556919]),msg_a(alice,charlie,sid[!1 = @sid_30823556919]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556920]),msg_a(alice,charlie,sid[!1 = @sid_30823556919])))
Abbreviations:
sid_30823556956 = sid[!1 = @sid_30823556946]
sid_30823556957 = sid[!1 = @sid_30823556932]

1. The entry statestore(bob,alice,sid_30823556956,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_30823556956,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_30823556957,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_30823556957,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_30823556957,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {235}.
The event SendMsg(alice,charlie,stagepack_a(sid_30823556957),msg_a(alice,charlie,sid_30823556957)) may be executed at {232}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823556957))) may be sent on channel pub at output {234}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823556957)))).

4. The entry statestore(bob,alice,sid_30823556956,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {415}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823556957))) that may be sent on channel pub by 3 may be received at input {376}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_30823556957),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_30823556956),msg_a(alice,charlie,sid_30823556957)) may be executed at {413}.
end(RecvMsg(bob,alice,stagepack_a(sid_30823556956),msg_a(alice,charlie,sid_30823556957))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_30823556960]),msg_a(alice,charlie,sid[!1 = @sid_30823556960]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556961]),msg_a(alice,charlie,sid[!1 = @sid_30823556960])))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823556964]),msg_a(alice,bob,sid[!1 = @sid_30823556964]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556965]),msg_a(alice,bob,sid[!1 = @sid_30823556964])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_30823556974]),msg_a(alice,charlie,sid[!1 = @sid_30823556974]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556975]),msg_a(alice,charlie,sid[!1 = @sid_30823556974])))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823556978]),msg_a(alice,bob,sid[!1 = @sid_30823556978]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556979]),msg_a(alice,bob,sid[!1 = @sid_30823556978])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_30823556988]),msg_a(alice,charlie,sid[!1 = @sid_30823556988]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823556989]),msg_a(alice,charlie,sid[!1 = @sid_30823556988])))
Abbreviations:
sid_30823557025 = sid[!1 = @sid_30823557015]
sid_30823557026 = sid[!1 = @sid_30823557001]

1. The entry statestore(bob,alice,sid_30823557025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_30823557025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_30823557026,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_30823557026,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_30823557026,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {235}.
The event SendMsg(alice,charlie,stagepack_a(sid_30823557026),msg_a(alice,charlie,sid_30823557026)) may be executed at {232}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557026))) may be sent on channel pub at output {234}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557026)))).

4. The entry statestore(bob,alice,sid_30823557025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {415}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557026))) that may be sent on channel pub by 3 may be received at input {376}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_30823557026),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_30823557025),msg_a(alice,charlie,sid_30823557026)) may be executed at {413}.
end(RecvMsg(bob,alice,stagepack_a(sid_30823557025),msg_a(alice,charlie,sid_30823557026))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_30823557029]),msg_a(alice,charlie,sid[!1 = @sid_30823557029]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_30823557030]),msg_a(alice,charlie,sid[!1 = @sid_30823557029])))
Abbreviations:
sid_30823557066 = sid[!1 = @sid_30823557056]
sid_30823557067 = sid[!1 = @sid_30823557042]

1. The entry statestore(bob,alice,sid_30823557066,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_30823557066,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_30823557067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {195}.
table(statestore(alice,charlie,sid_30823557067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_30823557067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {235}.
The event SendMsg(alice,charlie,stagepack_a(sid_30823557067),msg_a(alice,charlie,sid_30823557067)) may be executed at {232}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557067))) may be sent on channel pub at output {234}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557067)))).

4. The entry statestore(bob,alice,sid_30823557066,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {415}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_30823557067))) that may be sent on channel pub by 3 may be received at input {376}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_30823557067),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_30823557066),msg_a(alice,charlie,sid_30823557067)) may be executed at {413}.
end(RecvMsg(bob,alice,stagepack_a(sid_30823557066),msg_a(alice,charlie,sid_30823557067))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557070]),msg_a(alice,bob,sid[!1 = @sid_30823557070]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_30823557070]))
Abbreviations:
sid_30823557141 = sid[!1 = @sid_30823557117]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_30823557141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_30823557141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_30823557141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557141),msg_a(alice,bob,sid_30823557141)) may be executed at {52}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))) may be sent on channel pub at output {54}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))).
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 10, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g)))).

17. By 16, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))).
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141))).

18. By 17, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557141),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557141)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_30823557141).
attacker(msg_a(alice,bob,sid_30823557141)).

19. By 18, the attacker may know msg_a(alice,bob,sid_30823557141).
So the attacker may know msg_a(alice,bob,sid_30823557141) in phase 1.
attacker_p1(msg_a(alice,bob,sid_30823557141)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557144]),msg_a(alice,bob,sid[!1 = @sid_30823557144]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_30823557144]))
Abbreviations:
sid_30823557216 = sid[!1 = @sid_30823557192]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_30823557216,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_30823557216,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_30823557216,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557216),msg_a(alice,bob,sid_30823557216)) may be executed at {52}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))) may be sent on channel pub at output {54}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))).
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 10, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g)))).

17. By 16, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))).
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216))).

18. By 17, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557216),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557216)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_30823557216).
attacker(msg_a(alice,bob,sid_30823557216)).

19. By 18, the attacker may know msg_a(alice,bob,sid_30823557216).
So the attacker may know msg_a(alice,bob,sid_30823557216) in phase 1.
attacker_p1(msg_a(alice,bob,sid_30823557216)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557219]),msg_a(alice,bob,sid[!1 = @sid_30823557219]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_30823557219]))
Abbreviations:
sid_30823557292 = sid[!1 = @sid_30823557268]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_30823557292,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_30823557292,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_30823557292,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557292),msg_a(alice,bob,sid_30823557292)) may be executed at {52}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))) may be sent on channel pub at output {54}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))).
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 10, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g)))).

17. By 16, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))).
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292))).

18. By 17, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557292),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557292)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_30823557292).
attacker(msg_a(alice,bob,sid_30823557292)).

19. By 18, the attacker may know msg_a(alice,bob,sid_30823557292).
So the attacker may know msg_a(alice,bob,sid_30823557292) in phase 1.
attacker_p1(msg_a(alice,bob,sid_30823557292)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557295]),msg_a(alice,bob,sid[!1 = @sid_30823557295]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_30823557295]))
Abbreviations:
sid_30823557366 = sid[!1 = @sid_30823557342]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_30823557366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_30823557366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_30823557366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557366),msg_a(alice,bob,sid_30823557366)) may be executed at {52}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))) may be sent on channel pub at output {54}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))).
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 10, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g)))).

17. By 16, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))).
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366))).

18. By 17, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557366),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557366)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_30823557366).
attacker(msg_a(alice,bob,sid_30823557366)).

19. By 18, the attacker may know msg_a(alice,bob,sid_30823557366).
So the attacker may know msg_a(alice,bob,sid_30823557366) in phase 1.
attacker_p1(msg_a(alice,bob,sid_30823557366)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557369]),msg_b(bob,alice,sid[!1 = @sid_30823557369]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557370]),msg_a(alice,bob,sid[!1 = @sid_30823557370]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_30823557370]),msg_b(bob,alice,sid[!1 = @sid_30823557369])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557378]),msg_b(bob,alice,sid[!1 = @sid_30823557378]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557379]),msg_a(alice,bob,sid[!1 = @sid_30823557379]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_30823557379]),msg_b(bob,alice,sid[!1 = @sid_30823557378])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557388]),msg_b(bob,alice,sid[!1 = @sid_30823557388]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557389]),msg_a(alice,bob,sid[!1 = @sid_30823557389]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_30823557389]),msg_b(bob,alice,sid[!1 = @sid_30823557388])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557398]),msg_b(bob,alice,sid[!1 = @sid_30823557398]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557399]),msg_a(alice,bob,sid[!1 = @sid_30823557399]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_30823557399]),msg_b(bob,alice,sid[!1 = @sid_30823557398])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557407]),msg_b(bob,alice,sid[!1 = @sid_30823557407]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557408]),msg_a(alice,bob,sid[!1 = @sid_30823557408]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_30823557408]),msg_b(bob,alice,sid[!1 = @sid_30823557407])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557433]),msg_c(alice,bob,sid[!1 = @sid_30823557433]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557434]),msg_b(bob,alice,sid[!1 = @sid_30823557434]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557433]),msg_a(alice,bob,sid[!1 = @sid_30823557433]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_30823557434]),msg_c(alice,bob,sid[!1 = @sid_30823557433])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557442]),msg_c(alice,bob,sid[!1 = @sid_30823557442]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557443]),msg_b(bob,alice,sid[!1 = @sid_30823557443]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557442]),msg_a(alice,bob,sid[!1 = @sid_30823557442]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_30823557443]),msg_c(alice,bob,sid[!1 = @sid_30823557442])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557452]),msg_c(alice,bob,sid[!1 = @sid_30823557452]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557453]),msg_b(bob,alice,sid[!1 = @sid_30823557453]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557452]),msg_a(alice,bob,sid[!1 = @sid_30823557452]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_30823557453]),msg_c(alice,bob,sid[!1 = @sid_30823557452])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1351,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557462]),msg_c(alice,bob,sid[!1 = @sid_30823557462]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557463]),msg_b(bob,alice,sid[!1 = @sid_30823557463]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557462]),msg_a(alice,bob,sid[!1 = @sid_30823557462]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_30823557463]),msg_c(alice,bob,sid[!1 = @sid_30823557462])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557471]),msg_c(alice,bob,sid[!1 = @sid_30823557471]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557472]),msg_b(bob,alice,sid[!1 = @sid_30823557472]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557471]),msg_a(alice,bob,sid[!1 = @sid_30823557471]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_30823557472]),msg_c(alice,bob,sid[!1 = @sid_30823557471])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557497]),msg_d(bob,alice,sid[!1 = @sid_30823557497]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557498]),msg_c(alice,bob,sid[!1 = @sid_30823557498]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557497]),msg_b(bob,alice,sid[!1 = @sid_30823557497]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557498]),msg_a(alice,bob,sid[!1 = @sid_30823557498]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_30823557498]),msg_d(bob,alice,sid[!1 = @sid_30823557497])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557506]),msg_d(bob,alice,sid[!1 = @sid_30823557506]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557507]),msg_c(alice,bob,sid[!1 = @sid_30823557507]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557506]),msg_b(bob,alice,sid[!1 = @sid_30823557506]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557507]),msg_a(alice,bob,sid[!1 = @sid_30823557507]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_30823557507]),msg_d(bob,alice,sid[!1 = @sid_30823557506])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557516]),msg_d(bob,alice,sid[!1 = @sid_30823557516]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557517]),msg_c(alice,bob,sid[!1 = @sid_30823557517]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557516]),msg_b(bob,alice,sid[!1 = @sid_30823557516]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557517]),msg_a(alice,bob,sid[!1 = @sid_30823557517]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_30823557517]),msg_d(bob,alice,sid[!1 = @sid_30823557516])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1351,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557526]),msg_d(bob,alice,sid[!1 = @sid_30823557526]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557527]),msg_c(alice,bob,sid[!1 = @sid_30823557527]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557526]),msg_b(bob,alice,sid[!1 = @sid_30823557526]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557527]),msg_a(alice,bob,sid[!1 = @sid_30823557527]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_30823557527]),msg_d(bob,alice,sid[!1 = @sid_30823557526])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557535]),msg_d(bob,alice,sid[!1 = @sid_30823557535]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557536]),msg_c(alice,bob,sid[!1 = @sid_30823557536]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557535]),msg_b(bob,alice,sid[!1 = @sid_30823557535]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557536]),msg_a(alice,bob,sid[!1 = @sid_30823557536]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_30823557536]),msg_d(bob,alice,sid[!1 = @sid_30823557535])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_30823557559]),msg_d(bob,alice,sid[!1 = @sid_30823557559]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_30823557560]),msg_c(alice,bob,sid[!1 = @sid_30823557560]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_30823557559]),msg_b(bob,alice,sid[!1 = @sid_30823557559]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_30823557560]),msg_a(alice,bob,sid[!1 = @sid_30823557560]))) -> end(RecvEnd(true))
Abbreviations:
sid_30823557791 = sid[!1 = @sid_30823557780]
sid_30823557792 = sid[!1 = @sid_30823557736]

1. The entry statestore(alice,bob,sid_30823557791,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_30823557791,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_30823557791,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557791),msg_a(alice,bob,sid_30823557791)) may be executed at {52}.
So the entry statestore(alice,bob,sid_30823557791,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {53}.
table(statestore(alice,bob,sid_30823557791,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,alice,sid_30823557792,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {375}.
table(statestore(bob,alice,sid_30823557792,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

4. The entry statestore(alice,bob,sid_30823557791,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {55}.
The event SendMsg(alice,bob,stagepack_a(sid_30823557791),msg_a(alice,bob,sid_30823557791)) may be executed at {52}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))) may be sent on channel pub at output {54}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))).

5. The entry statestore(bob,alice,sid_30823557792,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 3 may be read at get {415}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))) that may be sent on channel pub by 4 may be received at input {376}.
We have validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_30823557792,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {414}.
table(statestore(bob,alice,sid_30823557792,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false)))).

6. The entry statestore(bob,alice,sid_30823557792,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_30823557792),msg_b(bob,alice,sid_30823557792)) may be executed at {489}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))) may be sent on channel pub at output {491}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))).

7. The entry statestore(alice,bob,sid_30823557791,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {132}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))) that may be sent on channel pub by 6 may be received at input {56}.
So the entry statestore(alice,bob,sid_30823557791,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {131}.
table(statestore(alice,bob,sid_30823557791,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_30823557791,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 7 may be read at get {152}.
The event SendMsg(alice,bob,stagepack_c(sid_30823557791),msg_c(alice,bob,sid_30823557791)) may be executed at {149}.
So the entry statestore(alice,bob,sid_30823557791,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {150}.
table(statestore(alice,bob,sid_30823557791,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce)))).

9. The entry statestore(bob,alice,sid_30823557792,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {492}.
The event SendMsg(bob,alice,stagepack_b(sid_30823557792),msg_b(bob,alice,sid_30823557792)) may be executed at {489}.
So the entry statestore(bob,alice,sid_30823557792,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {490}.
table(statestore(bob,alice,sid_30823557792,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_30823557791,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 7 may be read at get {152}.
The event SendMsg(alice,bob,stagepack_c(sid_30823557791),msg_c(alice,bob,sid_30823557791)) may be executed at {149}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791))) may be sent on channel pub at output {151}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))).

11. The entry statestore(bob,alice,sid_30823557792,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 9 may be read at get {513}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791))) that may be sent on channel pub by 10 may be received at input {495}.
So the entry statestore(bob,alice,sid_30823557792,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {512}.
table(statestore(bob,alice,sid_30823557792,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce)))).

12. The entry statestore(bob,alice,sid_30823557792,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_e(bob,alice,sid_30823557792)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 11 may be read at get {532}.
The event SendMsg(bob,alice,stagepack_d(sid_30823557792),msg_d(bob,alice,sid_30823557792)) may be executed at {530}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791))),msg_d(bob,alice,sid_30823557792))) may be sent on channel pub at output {531}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791))),msg_d(bob,alice,sid_30823557792)))).

13. The entry statestore(alice,bob,sid_30823557791,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g)),key_e(alice,bob,sid_30823557791)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 8 may be read at get {173}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_30823557791))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),validkey(dhexp_real(key_s(bob),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_30823557791),g))),validkey(dhexp_real(key_e(bob,alice,sid_30823557792),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_e(alice,bob,sid_30823557791),g))),dhexp_real(key_e(bob,alice,sid_30823557792),dhexp_real(key_s(alice),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_30823557791),g))),key_psk(alice,bob))),msg_b(bob,alice,sid_30823557792))),msg_c(alice,bob,sid_30823557791))),msg_d(bob,alice,sid_30823557792))) that may be sent on channel pub by 12 may be received at input {155}.
So event RecvEnd(true) may be executed at {172}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
