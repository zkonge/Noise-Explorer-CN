File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "K1X.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "K1X.noise.passive.pv", line 261, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 272, character 6:
Warning: identifier e rebound.
File "K1X.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 276, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 276, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 277, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 284, character 6:
Warning: identifier e rebound.
File "K1X.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 289, character 6:
Warning: identifier s rebound.
File "K1X.noise.passive.pv", line 290, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 290, characters 26-27:
Warning: identifier ns rebound.
File "K1X.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 310, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 318, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 318, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 319, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "K1X.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 332, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 340, characters 6-7:
Warning: identifier re rebound.
File "K1X.noise.passive.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 344, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 344, characters 26-27:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 344, characters 40-45:
Warning: identifier valid1 rebound.
File "K1X.noise.passive.pv", line 345, characters 6-7:
Warning: identifier rs rebound.
File "K1X.noise.passive.pv", line 346, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 349, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 358, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 360, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 567, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 568, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 318, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 318, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 319, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 559, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 561, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 553, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 547, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 340, characters 6-7:
Warning: identifier re rebound.
File "K1X.noise.passive.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 344, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 344, characters 26-27:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 344, characters 40-45:
Warning: identifier valid1 rebound.
File "K1X.noise.passive.pv", line 345, characters 6-7:
Warning: identifier rs rebound.
File "K1X.noise.passive.pv", line 346, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 349, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 540, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 272, character 6:
Warning: identifier e rebound.
File "K1X.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 276, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 276, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 277, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 261, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 619, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 621, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 612, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 613, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 310, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 606, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 358, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 360, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 599, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 284, character 6:
Warning: identifier e rebound.
File "K1X.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ne rebound.
File "K1X.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 289, character 6:
Warning: identifier s rebound.
File "K1X.noise.passive.pv", line 290, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 290, characters 26-27:
Warning: identifier ns rebound.
File "K1X.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "K1X.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "K1X.noise.passive.pv", line 593, characters 8-9:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "K1X.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "K1X.noise.passive.pv", line 332, characters 7-8:
Warning: identifier hs rebound.
File "K1X.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let v_554: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
    {5}let s_555: keypair = (if not-caught-fail(v_554) then keypairpack(validkey(v_554),key_s(alice)) else fail-any) in
    {6}out(pub, getpublickey(s_555));
    (
        {7}let e_556: keypair = keypairpack(empty,empty) in
        {8}let rs_557: key = empty in
        {9}let re_558: key = empty in
        {10}let v_559: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_560: key = catch-fail(v_559) in
        {12}let v_561: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_562: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_559) then (if not-caught-fail(v_560) then (if not-caught-fail(v_561) then symmetricstatepack(v_561,v_560,v_559) else fail-any) else fail-any) else fail-any))) in
        {14}let v_563: symmetricstate = catch-fail((if success?((if not-caught-fail(v_559) then (if not-caught-fail(v_560) then (if not-caught-fail(v_561) then symmetricstatepack(v_561,v_560,v_559) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_562) && success?(is-true(success?(1-proj-3-tuple(v_562))))) then symmetricstatepack(1-proj-3-tuple(v_562),2-proj-3-tuple(v_562),hash(3-proj-3-tuple(v_562),empty)) else fail-any) else fail-any)) in
        {15}let v_564: bitstring = catch-fail(symmetricstateunpack(v_563)) in
        {16}let v_565: symmetricstate = catch-fail((if success?(getpublickey(s_555)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then symmetricstatepack(1-proj-3-tuple(v_564),2-proj-3-tuple(v_564),hash(3-proj-3-tuple(v_564),getpublickey(s_555))) else fail-any) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_563) then (if not-caught-fail(v_565) then handshakestatepack(v_565,s_555,e_556,rs_557,re_558,empty,true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {41}get statestore(=alice,=bob,=sid,statepack_a(hs_566: handshakestate)) in
        {19}let v_567: bitstring = catch-fail(handshakestateunpack(hs_566)) in
        {20}let v_568: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_569: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_570: keypair = catch-fail((if not-caught-fail(v_569) then keypairpack(validkey(v_569),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_571: bitstring = catch-fail(getpublickey(v_570)) in
        {24}let v_572: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_567))) in
        {25}let v_573: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_567)) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-3-tuple(v_572))))) then symmetricstatepack(1-proj-3-tuple(v_572),2-proj-3-tuple(v_572),hash(3-proj-3-tuple(v_572),v_571)) else fail-any) else fail-any)) in
        {26}let v_574: bitstring = catch-fail(symmetricstateunpack(v_573)) in
        {27}let v_575: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_574))) in
        {28}let v_576: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_575),2-proj-2-tuple(v_575),3-proj-3-tuple(v_574),msg_a(alice,bob,sid))) in
        {29}let v_577: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_574))) in
        {30}let v_578: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_575))) && success?(1-proj-3-tuple(v_574))) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-2-tuple(v_577))))) then cipherstatepack(1-proj-2-tuple(v_577),increment_nonce(2-proj-2-tuple(v_575))) else fail-any) else fail-any)) in
        {31}let v_579: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_574)) && success?(1-proj-3-tuple(v_574))) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-2-tuple(v_575))))) then (if not-caught-fail(v_576) then (if not-caught-fail(v_578) then (v_578,v_576) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {32}let v_580: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_579),2-proj-3-tuple(v_574),3-proj-3-tuple(v_574)))) in
        {33}let v_581: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_579)) && success?(symmetricstatepack(1-proj-2-tuple(v_579),2-proj-3-tuple(v_574),3-proj-3-tuple(v_574)))) then (if (not-caught-fail(v_580) && success?(is-true(success?(1-proj-3-tuple(v_580))))) then symmetricstatepack(1-proj-3-tuple(v_580),2-proj-3-tuple(v_580),hash(3-proj-3-tuple(v_580),2-proj-2-tuple(v_579))) else fail-any) else fail-any)) in
        {34}let v_582: bitstring = catch-fail((if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-3-tuple(v_574))))) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then (if not-caught-fail(v_581) then (v_581,2-proj-2-tuple(v_579)) else fail-any) else fail-any) else fail-any)) in
        {35}let v_583: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_582),2-proj-7-tuple(v_567),v_570,4-proj-7-tuple(v_567),5-proj-7-tuple(v_567),6-proj-7-tuple(v_567),7-proj-7-tuple(v_567))) in
        {36}let v_584: bitstring = catch-fail(concat3(v_571,2-proj-3-tuple(v_568),2-proj-2-tuple(v_582))) in
        {37}let (hs_585: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-7-tuple(v_567))))) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-3-tuple(v_568))))) then (if not-caught-fail(v_570) then (if not-caught-fail(v_571) then (if not-caught-fail(v_573) then (if (not-caught-fail(v_582) && success?(is-true(success?(1-proj-2-tuple(v_582))))) then (if not-caught-fail(v_583) then (if not-caught-fail(v_584) then (v_583,v_584) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {38}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {39}insert statestore(alice,bob,sid,statepack_b(hs_585));
        {40}out(pub, message_a)
    ) | (
        {89}get statestore(=alice,=bob,=sid,statepack_b(hs_586: handshakestate)) in
        {42}in(pub, message_b: bitstring);
        {43}let v_587: bitstring = catch-fail(handshakestateunpack(hs_586)) in
        {44}let v_588: bitstring = catch-fail(deconcat3(message_b)) in
        {45}let v_589: bool = catch-fail(true) in
        {46}let v_590: key = catch-fail(1-proj-3-tuple(v_588)) in
        {47}let v_591: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_587))) in
        {48}let v_592: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_587)) then (if (not-caught-fail(v_591) && success?(is-true(success?(1-proj-3-tuple(v_591))))) then symmetricstatepack(1-proj-3-tuple(v_591),2-proj-3-tuple(v_591),hash(3-proj-3-tuple(v_591),v_590)) else fail-any) else fail-any)) in
        {49}let v_593: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_587))) in
        {50}let v_594: bitstring = catch-fail(symmetricstateunpack(v_592)) in
        {51}let v_595: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_594),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then dhexp(2-proj-2-tuple(v_593),v_590) else fail-any) else fail-any))) in
        {52}let v_596: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_594),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then dhexp(2-proj-2-tuple(v_593),v_590) else fail-any) else fail-any))) in
        {53}let v_597: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_594),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then dhexp(2-proj-2-tuple(v_593),v_590) else fail-any) else fail-any))) in
        {54}let v_598: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then dhexp(2-proj-2-tuple(v_593),v_590) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_594))) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_597) then (v_595,v_596,v_597) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {55}let v_599: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then dhexp(2-proj-2-tuple(v_593),v_590) else fail-any) else fail-any)) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-3-tuple(v_594))))) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_598)) then cipherstatepack(2-proj-3-tuple(v_598),minnonce) else fail-any),1-proj-3-tuple(v_598),3-proj-3-tuple(v_594)) else fail-any) else fail-any) else fail-any)) in
        {56}let v_600: bitstring = catch-fail(symmetricstateunpack(v_599)) in
        {57}let v_601: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_600))) in
        {58}let v_602: aead = catch-fail(decrypt(1-proj-2-tuple(v_601),2-proj-2-tuple(v_601),3-proj-3-tuple(v_600),2-proj-3-tuple(v_588))) in
        {59}let v_603: bitstring = catch-fail(aeadunpack(v_602)) in
        {60}let v_604: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_600))) in
        {61}let v_605: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_601))) && success?(1-proj-3-tuple(v_600))) then (if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-2-tuple(v_604))))) then cipherstatepack(1-proj-2-tuple(v_604),increment_nonce(2-proj-2-tuple(v_601))) else fail-any) else fail-any)) in
        {62}let v_606: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_588)) && (success?(3-proj-3-tuple(v_600)) && success?(1-proj-3-tuple(v_600)))) then (if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-2-tuple(v_601))))) then (if not-caught-fail(v_602) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then (if not-caught-fail(v_605) then (v_605,3-proj-3-tuple(v_603),1-proj-3-tuple(v_603)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {63}let v_607: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_606),2-proj-3-tuple(v_600),3-proj-3-tuple(v_600)))) in
        {64}let v_608: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_588)) && success?(symmetricstatepack(1-proj-3-tuple(v_606),2-proj-3-tuple(v_600),3-proj-3-tuple(v_600)))) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then symmetricstatepack(1-proj-3-tuple(v_607),2-proj-3-tuple(v_607),hash(3-proj-3-tuple(v_607),2-proj-3-tuple(v_588))) else fail-any) else fail-any)) in
        {65}let v_609: bitstring = catch-fail((if success?(2-proj-3-tuple(v_588)) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-3-tuple(v_600))))) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-3-tuple(v_606))))) then (if not-caught-fail(v_608) then (v_608,2-proj-3-tuple(v_606),3-proj-3-tuple(v_606)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {66}let v_610: key = catch-fail(2-proj-3-tuple(v_609)) in
        {67}let v_611: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_587))) in
        {68}let v_612: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_609))) in
        {69}let v_613: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_612),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then dhexp(2-proj-2-tuple(v_611),v_610) else fail-any) else fail-any))) in
        {70}let v_614: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_612),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then dhexp(2-proj-2-tuple(v_611),v_610) else fail-any) else fail-any))) in
        {71}let v_615: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_612),(if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then dhexp(2-proj-2-tuple(v_611),v_610) else fail-any) else fail-any))) in
        {72}let v_616: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then dhexp(2-proj-2-tuple(v_611),v_610) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_612))) then (if not-caught-fail(v_613) then (if not-caught-fail(v_614) then (if not-caught-fail(v_615) then (v_613,v_614,v_615) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {73}let v_617: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_587)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then dhexp(2-proj-2-tuple(v_611),v_610) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_609))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-3-tuple(v_612))))) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-3-tuple(v_616))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_616)) then cipherstatepack(2-proj-3-tuple(v_616),minnonce) else fail-any),1-proj-3-tuple(v_616),3-proj-3-tuple(v_612)) else fail-any) else fail-any) else fail-any)) in
        {74}let v_618: bitstring = catch-fail(symmetricstateunpack(v_617)) in
        {75}let v_619: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_618))) in
        {76}let v_620: aead = catch-fail(decrypt(1-proj-2-tuple(v_619),2-proj-2-tuple(v_619),3-proj-3-tuple(v_618),3-proj-3-tuple(v_588))) in
        {77}let v_621: bitstring = catch-fail(aeadunpack(v_620)) in
        {78}let v_622: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_618))) in
        {79}let v_623: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_619))) && success?(1-proj-3-tuple(v_618))) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-2-tuple(v_622))))) then cipherstatepack(1-proj-2-tuple(v_622),increment_nonce(2-proj-2-tuple(v_619))) else fail-any) else fail-any)) in
        {80}let v_624: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_588)) && (success?(3-proj-3-tuple(v_618)) && success?(1-proj-3-tuple(v_618)))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then (if not-caught-fail(v_620) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then (if not-caught-fail(v_623) then (v_623,3-proj-3-tuple(v_621),1-proj-3-tuple(v_621)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {81}let v_625: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_624),2-proj-3-tuple(v_618),3-proj-3-tuple(v_618)))) in
        {82}let v_626: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_588)) && success?(symmetricstatepack(1-proj-3-tuple(v_624),2-proj-3-tuple(v_618),3-proj-3-tuple(v_618)))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then symmetricstatepack(1-proj-3-tuple(v_625),2-proj-3-tuple(v_625),hash(3-proj-3-tuple(v_625),3-proj-3-tuple(v_588))) else fail-any) else fail-any)) in
        {83}let v_627: bitstring = catch-fail((if success?(3-proj-3-tuple(v_588)) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if not-caught-fail(v_626) then (v_626,2-proj-3-tuple(v_624),3-proj-3-tuple(v_624)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {84}let v_628: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {85}let v_629: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_627),2-proj-7-tuple(v_587),3-proj-7-tuple(v_587),v_610,v_590,6-proj-7-tuple(v_587),7-proj-7-tuple(v_587))) in
        {86}let (hs_630: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-7-tuple(v_587))))) then (if (not-caught-fail(v_588) && success?(is-true(success?(1-proj-3-tuple(v_588))))) then (if not-caught-fail(v_589) then (if not-caught-fail(v_590) then (if not-caught-fail(v_592) then (if not-caught-fail(v_599) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then (if not-caught-fail(v_610) then (if not-caught-fail(v_617) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then (if ((3-proj-3-tuple(v_609) && 3-proj-3-tuple(v_627)) && (v_610 = getpublickey((if not-caught-fail(v_628) then keypairpack(validkey(v_628),key_s(bob)) else fail-any)))) then (if not-caught-fail(v_629) then (v_629,2-proj-3-tuple(v_627),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {87}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {88}insert statestore(alice,bob,sid,statepack_c(hs_630))
    ) | (
        {122}get statestore(=alice,=bob,=sid,statepack_c(hs_631: handshakestate)) in
        {90}let v_632: bitstring = catch-fail(handshakestateunpack(hs_631)) in
        {91}let v_633: bitstring = catch-fail((empty,empty,empty)) in
        {92}let v_634: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_632))) in
        {93}let v_635: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_632))) in
        {94}let v_636: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_635),(if (success?(5-proj-7-tuple(v_632)) && success?(2-proj-7-tuple(v_632))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then dhexp(2-proj-2-tuple(v_634),5-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {95}let v_637: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_635),(if (success?(5-proj-7-tuple(v_632)) && success?(2-proj-7-tuple(v_632))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then dhexp(2-proj-2-tuple(v_634),5-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {96}let v_638: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_635),(if (success?(5-proj-7-tuple(v_632)) && success?(2-proj-7-tuple(v_632))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then dhexp(2-proj-2-tuple(v_634),5-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {97}let v_639: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_632)) && success?(2-proj-7-tuple(v_632))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then dhexp(2-proj-2-tuple(v_634),5-proj-7-tuple(v_632)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_635))) then (if not-caught-fail(v_636) then (if not-caught-fail(v_637) then (if not-caught-fail(v_638) then (v_636,v_637,v_638) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {98}let v_640: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_632)) && success?(2-proj-7-tuple(v_632))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then dhexp(2-proj-2-tuple(v_634),5-proj-7-tuple(v_632)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_632))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_639)) then cipherstatepack(2-proj-3-tuple(v_639),minnonce) else fail-any),1-proj-3-tuple(v_639),3-proj-3-tuple(v_635)) else fail-any) else fail-any) else fail-any)) in
        {99}let v_641: bitstring = catch-fail(symmetricstateunpack(v_640)) in
        {100}let v_642: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_641))) in
        {101}let v_643: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_642),2-proj-2-tuple(v_642),3-proj-3-tuple(v_641),msg_c(alice,bob,sid))) in
        {102}let v_644: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_641))) in
        {103}let v_645: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_642))) && success?(1-proj-3-tuple(v_641))) then (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-2-tuple(v_644))))) then cipherstatepack(1-proj-2-tuple(v_644),increment_nonce(2-proj-2-tuple(v_642))) else fail-any) else fail-any)) in
        {104}let v_646: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_641)) && success?(1-proj-3-tuple(v_641))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-2-tuple(v_642))))) then (if not-caught-fail(v_643) then (if not-caught-fail(v_645) then (v_645,v_643) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {105}let v_647: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_646),2-proj-3-tuple(v_641),3-proj-3-tuple(v_641)))) in
        {106}let v_648: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_646)) && success?(symmetricstatepack(1-proj-2-tuple(v_646),2-proj-3-tuple(v_641),3-proj-3-tuple(v_641)))) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then symmetricstatepack(1-proj-3-tuple(v_647),2-proj-3-tuple(v_647),hash(3-proj-3-tuple(v_647),2-proj-2-tuple(v_646))) else fail-any) else fail-any)) in
        {107}let v_649: bitstring = catch-fail((if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-3-tuple(v_641))))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then (if not-caught-fail(v_648) then (v_648,2-proj-2-tuple(v_646)) else fail-any) else fail-any) else fail-any)) in
        {108}let v_650: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_649),2-proj-7-tuple(v_632),3-proj-7-tuple(v_632),4-proj-7-tuple(v_632),5-proj-7-tuple(v_632),6-proj-7-tuple(v_632),7-proj-7-tuple(v_632))) in
        {109}let v_651: bitstring = catch-fail(concat3(1-proj-3-tuple(v_633),2-proj-3-tuple(v_633),2-proj-2-tuple(v_649))) in
        {110}let v_652: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_649))) in
        {111}let v_653: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_652),zero)) in
        {112}let v_654: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_652),zero)) in
        {113}let v_655: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_652),zero)) in
        {114}let v_656: bitstring = catch-fail((if success?(2-proj-3-tuple(v_652)) then (if not-caught-fail(v_653) then (if not-caught-fail(v_654) then (if not-caught-fail(v_655) then (v_653,v_654,v_655) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {115}let v_657: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_656)) then cipherstatepack(1-proj-3-tuple(v_656),minnonce) else fail-any)) in
        {116}let v_658: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_656)) then cipherstatepack(2-proj-3-tuple(v_656),minnonce) else fail-any)) in
        {117}let v_659: bitstring = catch-fail((if success?(1-proj-2-tuple(v_649)) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-3-tuple(v_656))))) then (if not-caught-fail(v_657) then (if not-caught-fail(v_658) then (1-proj-2-tuple(v_649),v_657,v_658) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {118}let (hs_660: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-7-tuple(v_632))))) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then (if not-caught-fail(v_640) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-2-tuple(v_649))))) then (if not-caught-fail(v_650) then (if not-caught-fail(v_651) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (v_650,v_651,2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {119}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {120}insert statestore(alice,bob,sid,statepack_d(hs_660,cs1,cs2));
        {121}out(pub, message_c)
    ) | (
        {123}!
        {143}get statestore(=alice,=bob,=sid,statepack_d(hs_661: handshakestate,cs1_662: cipherstate,cs2_663: cipherstate)) in
        {124}let hs_664: handshakestate = handshakestatesetcs(hs_661,cs2_663) in
        {125}in(pub, message_d: bitstring);
        {126}let v_665: bitstring = catch-fail(handshakestateunpack(hs_664)) in
        {127}let v_666: bitstring = catch-fail(deconcat3(message_d)) in
        {128}let v_667: bool = catch-fail(true) in
        {129}let v_668: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_665))) in
        {130}let v_669: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_668))) in
        {131}let v_670: aead = catch-fail(decrypt(1-proj-2-tuple(v_669),2-proj-2-tuple(v_669),3-proj-3-tuple(v_668),3-proj-3-tuple(v_666))) in
        {132}let v_671: bitstring = catch-fail(aeadunpack(v_670)) in
        {133}let v_672: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_668))) in
        {134}let v_673: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_669))) && success?(1-proj-3-tuple(v_668))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then cipherstatepack(1-proj-2-tuple(v_672),increment_nonce(2-proj-2-tuple(v_669))) else fail-any) else fail-any)) in
        {135}let v_674: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_666)) && (success?(3-proj-3-tuple(v_668)) && success?(1-proj-3-tuple(v_668)))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then (if not-caught-fail(v_670) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-3-tuple(v_671))))) then (if not-caught-fail(v_673) then (v_673,3-proj-3-tuple(v_671),1-proj-3-tuple(v_671)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {136}let v_675: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_674),2-proj-3-tuple(v_668),3-proj-3-tuple(v_668)))) in
        {137}let v_676: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_666)) && success?(symmetricstatepack(1-proj-3-tuple(v_674),2-proj-3-tuple(v_668),3-proj-3-tuple(v_668)))) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-3-tuple(v_675))))) then symmetricstatepack(1-proj-3-tuple(v_675),2-proj-3-tuple(v_675),hash(3-proj-3-tuple(v_675),3-proj-3-tuple(v_666))) else fail-any) else fail-any)) in
        {138}let v_677: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_666)) && success?(1-proj-7-tuple(v_665))) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then (if not-caught-fail(v_676) then (v_676,2-proj-3-tuple(v_674),3-proj-3-tuple(v_674)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {139}let v_678: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_677),2-proj-7-tuple(v_665),3-proj-7-tuple(v_665),4-proj-7-tuple(v_665),5-proj-7-tuple(v_665),6-proj-7-tuple(v_665),7-proj-7-tuple(v_665))) in
        {140}let (hs_679: handshakestate,plaintext_d: bitstring,valid_680: bool) = (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-7-tuple(v_665))))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-3-tuple(v_666))))) then (if not-caught-fail(v_667) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then (if (v_667 && 3-proj-3-tuple(v_677)) then (if not-caught-fail(v_678) then (v_678,2-proj-3-tuple(v_677),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {141}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {142}insert statestore(alice,bob,sid,statepack_e(hs_679,cs1_662,handshakestategetcs(hs_679)))
    ) | (
        {144}!
        {162}get statestore(=alice,=bob,=sid,statepack_e(hs_681: handshakestate,cs1_682: cipherstate,cs2_683: cipherstate)) in
        {145}let hs_684: handshakestate = handshakestatesetcs(hs_681,cs1_682) in
        {146}let v_685: bitstring = catch-fail(handshakestateunpack(hs_684)) in
        {147}let v_686: bitstring = catch-fail((empty,empty,empty)) in
        {148}let v_687: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_685))) in
        {149}let v_688: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_687))) in
        {150}let v_689: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_688),2-proj-2-tuple(v_688),3-proj-3-tuple(v_687),msg_e(alice,bob,sid))) in
        {151}let v_690: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_687))) in
        {152}let v_691: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_688))) && success?(1-proj-3-tuple(v_687))) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-2-tuple(v_690))))) then cipherstatepack(1-proj-2-tuple(v_690),increment_nonce(2-proj-2-tuple(v_688))) else fail-any) else fail-any)) in
        {153}let v_692: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_687)) && success?(1-proj-3-tuple(v_687))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-2-tuple(v_688))))) then (if not-caught-fail(v_689) then (if not-caught-fail(v_691) then (v_691,v_689) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {154}let v_693: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_692),2-proj-3-tuple(v_687),3-proj-3-tuple(v_687)))) in
        {155}let v_694: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_692)) && success?(symmetricstatepack(1-proj-2-tuple(v_692),2-proj-3-tuple(v_687),3-proj-3-tuple(v_687)))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-3-tuple(v_693))))) then symmetricstatepack(1-proj-3-tuple(v_693),2-proj-3-tuple(v_693),hash(3-proj-3-tuple(v_693),2-proj-2-tuple(v_692))) else fail-any) else fail-any)) in
        {156}let v_695: bitstring = catch-fail((if success?(1-proj-7-tuple(v_685)) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-2-tuple(v_692))))) then (if not-caught-fail(v_694) then (v_694,2-proj-2-tuple(v_692)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {157}let v_696: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_695),2-proj-7-tuple(v_685),3-proj-7-tuple(v_685),4-proj-7-tuple(v_685),5-proj-7-tuple(v_685),6-proj-7-tuple(v_685),7-proj-7-tuple(v_685))) in
        {158}let v_697: bitstring = catch-fail(concat3(1-proj-3-tuple(v_686),2-proj-3-tuple(v_686),2-proj-2-tuple(v_695))) in
        {159}let (hs_698: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-7-tuple(v_685))))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-3-tuple(v_686))))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-2-tuple(v_695))))) then (if not-caught-fail(v_696) then (if not-caught-fail(v_697) then (v_696,v_697) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {160}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {161}out(pub, message_e)
    ) | (
        {163}event LeakS(phase0,alice);
        {164}out(pub, key_s(alice))
    ) | (
        {165}phase 1;
        {166}event LeakS(phase1,alice);
        {167}out(pub, key_s(alice))
    )
) | (
    {168}let v_699: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
    {169}let s_700: keypair = (if not-caught-fail(v_699) then keypairpack(validkey(v_699),key_s(alice)) else fail-any) in
    {170}out(pub, getpublickey(s_700));
    (
        {171}let e_701: keypair = keypairpack(empty,empty) in
        {172}let rs_702: key = empty in
        {173}let re_703: key = empty in
        {174}let v_704: bitstring = catch-fail(hash(somename,empty)) in
        {175}let v_705: key = catch-fail(v_704) in
        {176}let v_706: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {177}let v_707: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_704) then (if not-caught-fail(v_705) then (if not-caught-fail(v_706) then symmetricstatepack(v_706,v_705,v_704) else fail-any) else fail-any) else fail-any))) in
        {178}let v_708: symmetricstate = catch-fail((if success?((if not-caught-fail(v_704) then (if not-caught-fail(v_705) then (if not-caught-fail(v_706) then symmetricstatepack(v_706,v_705,v_704) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then symmetricstatepack(1-proj-3-tuple(v_707),2-proj-3-tuple(v_707),hash(3-proj-3-tuple(v_707),empty)) else fail-any) else fail-any)) in
        {179}let v_709: bitstring = catch-fail(symmetricstateunpack(v_708)) in
        {180}let v_710: symmetricstate = catch-fail((if success?(getpublickey(s_700)) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-3-tuple(v_709))))) then symmetricstatepack(1-proj-3-tuple(v_709),2-proj-3-tuple(v_709),hash(3-proj-3-tuple(v_709),getpublickey(s_700))) else fail-any) else fail-any)) in
        {181}let hs_711: handshakestate = (if not-caught-fail(v_708) then (if not-caught-fail(v_710) then handshakestatepack(v_710,s_700,e_701,rs_702,re_703,empty,true) else fail-any) else fail-any) in
        {182}insert statestore(alice,charlie,sid,statepack_a(hs_711))
    ) | (
        {205}get statestore(=alice,=charlie,=sid,statepack_a(hs_712: handshakestate)) in
        {183}let v_713: bitstring = catch-fail(handshakestateunpack(hs_712)) in
        {184}let v_714: bitstring = catch-fail((empty,empty,empty)) in
        {185}let v_715: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {186}let v_716: keypair = catch-fail((if not-caught-fail(v_715) then keypairpack(validkey(v_715),key_e(alice,charlie,sid)) else fail-any)) in
        {187}let v_717: bitstring = catch-fail(getpublickey(v_716)) in
        {188}let v_718: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_713))) in
        {189}let v_719: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_713)) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-3-tuple(v_718))))) then symmetricstatepack(1-proj-3-tuple(v_718),2-proj-3-tuple(v_718),hash(3-proj-3-tuple(v_718),v_717)) else fail-any) else fail-any)) in
        {190}let v_720: bitstring = catch-fail(symmetricstateunpack(v_719)) in
        {191}let v_721: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_720))) in
        {192}let v_722: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_721),2-proj-2-tuple(v_721),3-proj-3-tuple(v_720),msg_a(alice,charlie,sid))) in
        {193}let v_723: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_720))) in
        {194}let v_724: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_721))) && success?(1-proj-3-tuple(v_720))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-2-tuple(v_723))))) then cipherstatepack(1-proj-2-tuple(v_723),increment_nonce(2-proj-2-tuple(v_721))) else fail-any) else fail-any)) in
        {195}let v_725: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_720)) && success?(1-proj-3-tuple(v_720))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-2-tuple(v_721))))) then (if not-caught-fail(v_722) then (if not-caught-fail(v_724) then (v_724,v_722) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {196}let v_726: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_725),2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)))) in
        {197}let v_727: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_725)) && success?(symmetricstatepack(1-proj-2-tuple(v_725),2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)))) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-3-tuple(v_726))))) then symmetricstatepack(1-proj-3-tuple(v_726),2-proj-3-tuple(v_726),hash(3-proj-3-tuple(v_726),2-proj-2-tuple(v_725))) else fail-any) else fail-any)) in
        {198}let v_728: bitstring = catch-fail((if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-2-tuple(v_725))))) then (if not-caught-fail(v_727) then (v_727,2-proj-2-tuple(v_725)) else fail-any) else fail-any) else fail-any)) in
        {199}let v_729: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_728),2-proj-7-tuple(v_713),v_716,4-proj-7-tuple(v_713),5-proj-7-tuple(v_713),6-proj-7-tuple(v_713),7-proj-7-tuple(v_713))) in
        {200}let v_730: bitstring = catch-fail(concat3(v_717,2-proj-3-tuple(v_714),2-proj-2-tuple(v_728))) in
        {201}let (hs_731: handshakestate,message_a_732: bitstring) = (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-7-tuple(v_713))))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (if not-caught-fail(v_716) then (if not-caught-fail(v_717) then (if not-caught-fail(v_719) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-2-tuple(v_728))))) then (if not-caught-fail(v_729) then (if not-caught-fail(v_730) then (v_729,v_730) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {202}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {203}insert statestore(alice,charlie,sid,statepack_b(hs_731));
        {204}out(pub, message_a_732)
    ) | (
        {253}get statestore(=alice,=charlie,=sid,statepack_b(hs_733: handshakestate)) in
        {206}in(pub, message_b_734: bitstring);
        {207}let v_735: bitstring = catch-fail(handshakestateunpack(hs_733)) in
        {208}let v_736: bitstring = catch-fail(deconcat3(message_b_734)) in
        {209}let v_737: bool = catch-fail(true) in
        {210}let v_738: key = catch-fail(1-proj-3-tuple(v_736)) in
        {211}let v_739: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_735))) in
        {212}let v_740: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_735)) then (if (not-caught-fail(v_739) && success?(is-true(success?(1-proj-3-tuple(v_739))))) then symmetricstatepack(1-proj-3-tuple(v_739),2-proj-3-tuple(v_739),hash(3-proj-3-tuple(v_739),v_738)) else fail-any) else fail-any)) in
        {213}let v_741: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_735))) in
        {214}let v_742: bitstring = catch-fail(symmetricstateunpack(v_740)) in
        {215}let v_743: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_742),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then dhexp(2-proj-2-tuple(v_741),v_738) else fail-any) else fail-any))) in
        {216}let v_744: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_742),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then dhexp(2-proj-2-tuple(v_741),v_738) else fail-any) else fail-any))) in
        {217}let v_745: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_742),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then dhexp(2-proj-2-tuple(v_741),v_738) else fail-any) else fail-any))) in
        {218}let v_746: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then dhexp(2-proj-2-tuple(v_741),v_738) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_742))) then (if not-caught-fail(v_743) then (if not-caught-fail(v_744) then (if not-caught-fail(v_745) then (v_743,v_744,v_745) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {219}let v_747: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then dhexp(2-proj-2-tuple(v_741),v_738) else fail-any) else fail-any)) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-3-tuple(v_746))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_746)) then cipherstatepack(2-proj-3-tuple(v_746),minnonce) else fail-any),1-proj-3-tuple(v_746),3-proj-3-tuple(v_742)) else fail-any) else fail-any) else fail-any)) in
        {220}let v_748: bitstring = catch-fail(symmetricstateunpack(v_747)) in
        {221}let v_749: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_748))) in
        {222}let v_750: aead = catch-fail(decrypt(1-proj-2-tuple(v_749),2-proj-2-tuple(v_749),3-proj-3-tuple(v_748),2-proj-3-tuple(v_736))) in
        {223}let v_751: bitstring = catch-fail(aeadunpack(v_750)) in
        {224}let v_752: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_748))) in
        {225}let v_753: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_749))) && success?(1-proj-3-tuple(v_748))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-2-tuple(v_752))))) then cipherstatepack(1-proj-2-tuple(v_752),increment_nonce(2-proj-2-tuple(v_749))) else fail-any) else fail-any)) in
        {226}let v_754: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_736)) && (success?(3-proj-3-tuple(v_748)) && success?(1-proj-3-tuple(v_748)))) then (if (not-caught-fail(v_749) && success?(is-true(success?(1-proj-2-tuple(v_749))))) then (if not-caught-fail(v_750) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-3-tuple(v_751))))) then (if not-caught-fail(v_753) then (v_753,3-proj-3-tuple(v_751),1-proj-3-tuple(v_751)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {227}let v_755: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_754),2-proj-3-tuple(v_748),3-proj-3-tuple(v_748)))) in
        {228}let v_756: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_736)) && success?(symmetricstatepack(1-proj-3-tuple(v_754),2-proj-3-tuple(v_748),3-proj-3-tuple(v_748)))) then (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-3-tuple(v_755))))) then symmetricstatepack(1-proj-3-tuple(v_755),2-proj-3-tuple(v_755),hash(3-proj-3-tuple(v_755),2-proj-3-tuple(v_736))) else fail-any) else fail-any)) in
        {229}let v_757: bitstring = catch-fail((if success?(2-proj-3-tuple(v_736)) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-3-tuple(v_748))))) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-3-tuple(v_754))))) then (if not-caught-fail(v_756) then (v_756,2-proj-3-tuple(v_754),3-proj-3-tuple(v_754)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {230}let v_758: key = catch-fail(2-proj-3-tuple(v_757)) in
        {231}let v_759: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_735))) in
        {232}let v_760: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_757))) in
        {233}let v_761: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_760),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then dhexp(2-proj-2-tuple(v_759),v_758) else fail-any) else fail-any))) in
        {234}let v_762: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_760),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then dhexp(2-proj-2-tuple(v_759),v_758) else fail-any) else fail-any))) in
        {235}let v_763: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_760),(if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then dhexp(2-proj-2-tuple(v_759),v_758) else fail-any) else fail-any))) in
        {236}let v_764: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then dhexp(2-proj-2-tuple(v_759),v_758) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_760))) then (if not-caught-fail(v_761) then (if not-caught-fail(v_762) then (if not-caught-fail(v_763) then (v_761,v_762,v_763) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {237}let v_765: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_735)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then dhexp(2-proj-2-tuple(v_759),v_758) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_757))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then (if (not-caught-fail(v_764) && success?(is-true(success?(1-proj-3-tuple(v_764))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_764)) then cipherstatepack(2-proj-3-tuple(v_764),minnonce) else fail-any),1-proj-3-tuple(v_764),3-proj-3-tuple(v_760)) else fail-any) else fail-any) else fail-any)) in
        {238}let v_766: bitstring = catch-fail(symmetricstateunpack(v_765)) in
        {239}let v_767: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_766))) in
        {240}let v_768: aead = catch-fail(decrypt(1-proj-2-tuple(v_767),2-proj-2-tuple(v_767),3-proj-3-tuple(v_766),3-proj-3-tuple(v_736))) in
        {241}let v_769: bitstring = catch-fail(aeadunpack(v_768)) in
        {242}let v_770: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_766))) in
        {243}let v_771: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_767))) && success?(1-proj-3-tuple(v_766))) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then cipherstatepack(1-proj-2-tuple(v_770),increment_nonce(2-proj-2-tuple(v_767))) else fail-any) else fail-any)) in
        {244}let v_772: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_736)) && (success?(3-proj-3-tuple(v_766)) && success?(1-proj-3-tuple(v_766)))) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-2-tuple(v_767))))) then (if not-caught-fail(v_768) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-3-tuple(v_769))))) then (if not-caught-fail(v_771) then (v_771,3-proj-3-tuple(v_769),1-proj-3-tuple(v_769)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {245}let v_773: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_766),3-proj-3-tuple(v_766)))) in
        {246}let v_774: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_736)) && success?(symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_766),3-proj-3-tuple(v_766)))) then (if (not-caught-fail(v_773) && success?(is-true(success?(1-proj-3-tuple(v_773))))) then symmetricstatepack(1-proj-3-tuple(v_773),2-proj-3-tuple(v_773),hash(3-proj-3-tuple(v_773),3-proj-3-tuple(v_736))) else fail-any) else fail-any)) in
        {247}let v_775: bitstring = catch-fail((if success?(3-proj-3-tuple(v_736)) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-3-tuple(v_766))))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then (if not-caught-fail(v_774) then (v_774,2-proj-3-tuple(v_772),3-proj-3-tuple(v_772)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {248}let v_776: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {249}let v_777: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_775),2-proj-7-tuple(v_735),3-proj-7-tuple(v_735),v_758,v_738,6-proj-7-tuple(v_735),7-proj-7-tuple(v_735))) in
        {250}let (hs_778: handshakestate,plaintext_b_779: bitstring,valid_780: bool) = (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-7-tuple(v_735))))) then (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-3-tuple(v_736))))) then (if not-caught-fail(v_737) then (if not-caught-fail(v_738) then (if not-caught-fail(v_740) then (if not-caught-fail(v_747) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-3-tuple(v_757))))) then (if not-caught-fail(v_758) then (if not-caught-fail(v_765) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then (if ((3-proj-3-tuple(v_757) && 3-proj-3-tuple(v_775)) && (v_758 = getpublickey((if not-caught-fail(v_776) then keypairpack(validkey(v_776),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_777) then (v_777,2-proj-3-tuple(v_775),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {251}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_779);
        {252}insert statestore(alice,charlie,sid,statepack_c(hs_778))
    ) | (
        {286}get statestore(=alice,=charlie,=sid,statepack_c(hs_781: handshakestate)) in
        {254}let v_782: bitstring = catch-fail(handshakestateunpack(hs_781)) in
        {255}let v_783: bitstring = catch-fail((empty,empty,empty)) in
        {256}let v_784: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_782))) in
        {257}let v_785: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_782))) in
        {258}let v_786: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_782)) && success?(2-proj-7-tuple(v_782))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_782)) else fail-any) else fail-any))) in
        {259}let v_787: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_782)) && success?(2-proj-7-tuple(v_782))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_782)) else fail-any) else fail-any))) in
        {260}let v_788: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_782)) && success?(2-proj-7-tuple(v_782))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_782)) else fail-any) else fail-any))) in
        {261}let v_789: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_782)) && success?(2-proj-7-tuple(v_782))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_782)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_785))) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (if not-caught-fail(v_788) then (v_786,v_787,v_788) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {262}let v_790: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_782)) && success?(2-proj-7-tuple(v_782))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_782)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_782))) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_789)) then cipherstatepack(2-proj-3-tuple(v_789),minnonce) else fail-any),1-proj-3-tuple(v_789),3-proj-3-tuple(v_785)) else fail-any) else fail-any) else fail-any)) in
        {263}let v_791: bitstring = catch-fail(symmetricstateunpack(v_790)) in
        {264}let v_792: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {265}let v_793: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_792),2-proj-2-tuple(v_792),3-proj-3-tuple(v_791),msg_c(alice,charlie,sid))) in
        {266}let v_794: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {267}let v_795: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_792))) && success?(1-proj-3-tuple(v_791))) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then cipherstatepack(1-proj-2-tuple(v_794),increment_nonce(2-proj-2-tuple(v_792))) else fail-any) else fail-any)) in
        {268}let v_796: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_791)) && success?(1-proj-3-tuple(v_791))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then (if not-caught-fail(v_793) then (if not-caught-fail(v_795) then (v_795,v_793) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {269}let v_797: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_796),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) in
        {270}let v_798: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_796)) && success?(symmetricstatepack(1-proj-2-tuple(v_796),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then symmetricstatepack(1-proj-3-tuple(v_797),2-proj-3-tuple(v_797),hash(3-proj-3-tuple(v_797),2-proj-2-tuple(v_796))) else fail-any) else fail-any)) in
        {271}let v_799: bitstring = catch-fail((if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-2-tuple(v_796))))) then (if not-caught-fail(v_798) then (v_798,2-proj-2-tuple(v_796)) else fail-any) else fail-any) else fail-any)) in
        {272}let v_800: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_799),2-proj-7-tuple(v_782),3-proj-7-tuple(v_782),4-proj-7-tuple(v_782),5-proj-7-tuple(v_782),6-proj-7-tuple(v_782),7-proj-7-tuple(v_782))) in
        {273}let v_801: bitstring = catch-fail(concat3(1-proj-3-tuple(v_783),2-proj-3-tuple(v_783),2-proj-2-tuple(v_799))) in
        {274}let v_802: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_799))) in
        {275}let v_803: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_802),zero)) in
        {276}let v_804: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_802),zero)) in
        {277}let v_805: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_802),zero)) in
        {278}let v_806: bitstring = catch-fail((if success?(2-proj-3-tuple(v_802)) then (if not-caught-fail(v_803) then (if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (v_803,v_804,v_805) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {279}let v_807: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_806)) then cipherstatepack(1-proj-3-tuple(v_806),minnonce) else fail-any)) in
        {280}let v_808: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_806)) then cipherstatepack(2-proj-3-tuple(v_806),minnonce) else fail-any)) in
        {281}let v_809: bitstring = catch-fail((if success?(1-proj-2-tuple(v_799)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-3-tuple(v_802))))) then (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-3-tuple(v_806))))) then (if not-caught-fail(v_807) then (if not-caught-fail(v_808) then (1-proj-2-tuple(v_799),v_807,v_808) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {282}let (hs_810: handshakestate,message_c_811: bitstring,cs1_812: cipherstate,cs2_813: cipherstate) = (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-7-tuple(v_782))))) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then (if not-caught-fail(v_790) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-2-tuple(v_799))))) then (if not-caught-fail(v_800) then (if not-caught-fail(v_801) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-3-tuple(v_809))))) then (v_800,v_801,2-proj-3-tuple(v_809),3-proj-3-tuple(v_809)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {283}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {284}insert statestore(alice,charlie,sid,statepack_d(hs_810,cs1_812,cs2_813));
        {285}out(pub, message_c_811)
    ) | (
        {287}!
        {307}get statestore(=alice,=charlie,=sid,statepack_d(hs_814: handshakestate,cs1_815: cipherstate,cs2_816: cipherstate)) in
        {288}let hs_817: handshakestate = handshakestatesetcs(hs_814,cs2_816) in
        {289}in(pub, message_d_818: bitstring);
        {290}let v_819: bitstring = catch-fail(handshakestateunpack(hs_817)) in
        {291}let v_820: bitstring = catch-fail(deconcat3(message_d_818)) in
        {292}let v_821: bool = catch-fail(true) in
        {293}let v_822: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_819))) in
        {294}let v_823: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_822))) in
        {295}let v_824: aead = catch-fail(decrypt(1-proj-2-tuple(v_823),2-proj-2-tuple(v_823),3-proj-3-tuple(v_822),3-proj-3-tuple(v_820))) in
        {296}let v_825: bitstring = catch-fail(aeadunpack(v_824)) in
        {297}let v_826: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_822))) in
        {298}let v_827: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_823))) && success?(1-proj-3-tuple(v_822))) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-2-tuple(v_826))))) then cipherstatepack(1-proj-2-tuple(v_826),increment_nonce(2-proj-2-tuple(v_823))) else fail-any) else fail-any)) in
        {299}let v_828: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_820)) && (success?(3-proj-3-tuple(v_822)) && success?(1-proj-3-tuple(v_822)))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-2-tuple(v_823))))) then (if not-caught-fail(v_824) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-3-tuple(v_825))))) then (if not-caught-fail(v_827) then (v_827,3-proj-3-tuple(v_825),1-proj-3-tuple(v_825)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {300}let v_829: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_828),2-proj-3-tuple(v_822),3-proj-3-tuple(v_822)))) in
        {301}let v_830: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_820)) && success?(symmetricstatepack(1-proj-3-tuple(v_828),2-proj-3-tuple(v_822),3-proj-3-tuple(v_822)))) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-3-tuple(v_829))))) then symmetricstatepack(1-proj-3-tuple(v_829),2-proj-3-tuple(v_829),hash(3-proj-3-tuple(v_829),3-proj-3-tuple(v_820))) else fail-any) else fail-any)) in
        {302}let v_831: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_820)) && success?(1-proj-7-tuple(v_819))) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-3-tuple(v_822))))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then (if not-caught-fail(v_830) then (v_830,2-proj-3-tuple(v_828),3-proj-3-tuple(v_828)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {303}let v_832: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_831),2-proj-7-tuple(v_819),3-proj-7-tuple(v_819),4-proj-7-tuple(v_819),5-proj-7-tuple(v_819),6-proj-7-tuple(v_819),7-proj-7-tuple(v_819))) in
        {304}let (hs_833: handshakestate,plaintext_d_834: bitstring,valid_835: bool) = (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-7-tuple(v_819))))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then (if not-caught-fail(v_821) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-3-tuple(v_831))))) then (if (v_821 && 3-proj-3-tuple(v_831)) then (if not-caught-fail(v_832) then (v_832,2-proj-3-tuple(v_831),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {305}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_834);
        {306}insert statestore(alice,charlie,sid,statepack_e(hs_833,cs1_815,handshakestategetcs(hs_833)))
    ) | (
        {308}!
        {326}get statestore(=alice,=charlie,=sid,statepack_e(hs_836: handshakestate,cs1_837: cipherstate,cs2_838: cipherstate)) in
        {309}let hs_839: handshakestate = handshakestatesetcs(hs_836,cs1_837) in
        {310}let v_840: bitstring = catch-fail(handshakestateunpack(hs_839)) in
        {311}let v_841: bitstring = catch-fail((empty,empty,empty)) in
        {312}let v_842: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_840))) in
        {313}let v_843: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {314}let v_844: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_843),2-proj-2-tuple(v_843),3-proj-3-tuple(v_842),msg_e(alice,charlie,sid))) in
        {315}let v_845: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {316}let v_846: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_843))) && success?(1-proj-3-tuple(v_842))) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then cipherstatepack(1-proj-2-tuple(v_845),increment_nonce(2-proj-2-tuple(v_843))) else fail-any) else fail-any)) in
        {317}let v_847: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_842)) && success?(1-proj-3-tuple(v_842))) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-2-tuple(v_843))))) then (if not-caught-fail(v_844) then (if not-caught-fail(v_846) then (v_846,v_844) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {318}let v_848: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_847),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) in
        {319}let v_849: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_847)) && success?(symmetricstatepack(1-proj-2-tuple(v_847),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-3-tuple(v_848))))) then symmetricstatepack(1-proj-3-tuple(v_848),2-proj-3-tuple(v_848),hash(3-proj-3-tuple(v_848),2-proj-2-tuple(v_847))) else fail-any) else fail-any)) in
        {320}let v_850: bitstring = catch-fail((if success?(1-proj-7-tuple(v_840)) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-2-tuple(v_847))))) then (if not-caught-fail(v_849) then (v_849,2-proj-2-tuple(v_847)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {321}let v_851: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_850),2-proj-7-tuple(v_840),3-proj-7-tuple(v_840),4-proj-7-tuple(v_840),5-proj-7-tuple(v_840),6-proj-7-tuple(v_840),7-proj-7-tuple(v_840))) in
        {322}let v_852: bitstring = catch-fail(concat3(1-proj-3-tuple(v_841),2-proj-3-tuple(v_841),2-proj-2-tuple(v_850))) in
        {323}let (hs_853: handshakestate,message_e_854: bitstring) = (if (not-caught-fail(v_840) && success?(is-true(success?(1-proj-7-tuple(v_840))))) then (if (not-caught-fail(v_841) && success?(is-true(success?(1-proj-3-tuple(v_841))))) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-2-tuple(v_850))))) then (if not-caught-fail(v_851) then (if not-caught-fail(v_852) then (v_851,v_852) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {324}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {325}out(pub, message_e_854)
    ) | (
        {327}event LeakS(phase0,alice);
        {328}out(pub, key_s(alice))
    ) | (
        {329}phase 1;
        {330}event LeakS(phase1,alice);
        {331}out(pub, key_s(alice))
    )
) | (
    {332}let s_855: keypair = keypairpack(empty,empty) in
    {333}out(pub, getpublickey(s_855));
    (
        {334}let e_856: keypair = keypairpack(empty,empty) in
        {335}let v_857: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {336}let rs_858: key = getpublickey((if not-caught-fail(v_857) then keypairpack(validkey(v_857),key_s(alice)) else fail-any)) in
        {337}let re_859: key = empty in
        {338}let v_860: bitstring = catch-fail(hash(somename,empty)) in
        {339}let v_861: key = catch-fail(v_860) in
        {340}let v_862: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {341}let v_863: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_860) then (if not-caught-fail(v_861) then (if not-caught-fail(v_862) then symmetricstatepack(v_862,v_861,v_860) else fail-any) else fail-any) else fail-any))) in
        {342}let v_864: symmetricstate = catch-fail((if success?((if not-caught-fail(v_860) then (if not-caught-fail(v_861) then (if not-caught-fail(v_862) then symmetricstatepack(v_862,v_861,v_860) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then symmetricstatepack(1-proj-3-tuple(v_863),2-proj-3-tuple(v_863),hash(3-proj-3-tuple(v_863),empty)) else fail-any) else fail-any)) in
        {343}let v_865: bitstring = catch-fail(symmetricstateunpack(v_864)) in
        {344}let v_866: symmetricstate = catch-fail((if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-3-tuple(v_865))))) then symmetricstatepack(1-proj-3-tuple(v_865),2-proj-3-tuple(v_865),hash(3-proj-3-tuple(v_865),rs_858)) else fail-any)) in
        {345}let hs_867: handshakestate = (if not-caught-fail(v_864) then (if not-caught-fail(v_866) then handshakestatepack(v_866,s_855,e_856,rs_858,re_859,empty,false) else fail-any) else fail-any) in
        {346}insert statestore(bob,alice,sid,statepack_a(hs_867))
    ) | (
        {368}get statestore(=bob,=alice,=sid,statepack_a(hs_868: handshakestate)) in
        {347}in(pub, message_a_869: bitstring);
        {348}let v_870: bitstring = catch-fail(handshakestateunpack(hs_868)) in
        {349}let v_871: bitstring = catch-fail(deconcat3(message_a_869)) in
        {350}let v_872: bool = catch-fail(true) in
        {351}let v_873: key = catch-fail(1-proj-3-tuple(v_871)) in
        {352}let v_874: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_870))) in
        {353}let v_875: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_870)) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-3-tuple(v_874))))) then symmetricstatepack(1-proj-3-tuple(v_874),2-proj-3-tuple(v_874),hash(3-proj-3-tuple(v_874),v_873)) else fail-any) else fail-any)) in
        {354}let v_876: bitstring = catch-fail(symmetricstateunpack(v_875)) in
        {355}let v_877: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_876))) in
        {356}let v_878: aead = catch-fail(decrypt(1-proj-2-tuple(v_877),2-proj-2-tuple(v_877),3-proj-3-tuple(v_876),3-proj-3-tuple(v_871))) in
        {357}let v_879: bitstring = catch-fail(aeadunpack(v_878)) in
        {358}let v_880: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_876))) in
        {359}let v_881: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_877))) && success?(1-proj-3-tuple(v_876))) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-2-tuple(v_880))))) then cipherstatepack(1-proj-2-tuple(v_880),increment_nonce(2-proj-2-tuple(v_877))) else fail-any) else fail-any)) in
        {360}let v_882: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_871)) && (success?(3-proj-3-tuple(v_876)) && success?(1-proj-3-tuple(v_876)))) then (if (not-caught-fail(v_877) && success?(is-true(success?(1-proj-2-tuple(v_877))))) then (if not-caught-fail(v_878) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then (if not-caught-fail(v_881) then (v_881,3-proj-3-tuple(v_879),1-proj-3-tuple(v_879)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {361}let v_883: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_882),2-proj-3-tuple(v_876),3-proj-3-tuple(v_876)))) in
        {362}let v_884: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_871)) && success?(symmetricstatepack(1-proj-3-tuple(v_882),2-proj-3-tuple(v_876),3-proj-3-tuple(v_876)))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_883),hash(3-proj-3-tuple(v_883),3-proj-3-tuple(v_871))) else fail-any) else fail-any)) in
        {363}let v_885: bitstring = catch-fail((if success?(3-proj-3-tuple(v_871)) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (if not-caught-fail(v_884) then (v_884,2-proj-3-tuple(v_882),3-proj-3-tuple(v_882)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {364}let v_886: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_885),2-proj-7-tuple(v_870),3-proj-7-tuple(v_870),4-proj-7-tuple(v_870),v_873,6-proj-7-tuple(v_870),7-proj-7-tuple(v_870))) in
        {365}let (hs_887: handshakestate,plaintext_a: bitstring,valid_888: bool) = (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-7-tuple(v_870))))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-3-tuple(v_871))))) then (if not-caught-fail(v_872) then (if not-caught-fail(v_873) then (if not-caught-fail(v_875) then (if (not-caught-fail(v_885) && success?(is-true(success?(1-proj-3-tuple(v_885))))) then (if (v_872 && 3-proj-3-tuple(v_885)) then (if not-caught-fail(v_886) then (v_886,2-proj-3-tuple(v_885),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {366}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {367}insert statestore(bob,alice,sid,statepack_b(hs_887))
    ) | (
        {416}get statestore(=bob,=alice,=sid,statepack_b(hs_889: handshakestate)) in
        {369}let v_890: bitstring = catch-fail(handshakestateunpack(hs_889)) in
        {370}let v_891: bitstring = catch-fail((empty,empty,empty)) in
        {371}let v_892: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {372}let v_893: keypair = catch-fail((if not-caught-fail(v_892) then keypairpack(validkey(v_892),key_e(bob,alice,sid)) else fail-any)) in
        {373}let v_894: bitstring = catch-fail(getpublickey(v_893)) in
        {374}let v_895: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_890))) in
        {375}let v_896: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_890)) then (if (not-caught-fail(v_895) && success?(is-true(success?(1-proj-3-tuple(v_895))))) then symmetricstatepack(1-proj-3-tuple(v_895),2-proj-3-tuple(v_895),hash(3-proj-3-tuple(v_895),v_894)) else fail-any) else fail-any)) in
        {376}let v_897: bitstring = catch-fail(keypairunpack(v_893)) in
        {377}let v_898: bitstring = catch-fail(symmetricstateunpack(v_896)) in
        {378}let v_899: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_898),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-2-tuple(v_897))))) then dhexp(2-proj-2-tuple(v_897),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {379}let v_900: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_898),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-2-tuple(v_897))))) then dhexp(2-proj-2-tuple(v_897),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {380}let v_901: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_898),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-2-tuple(v_897))))) then dhexp(2-proj-2-tuple(v_897),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {381}let v_902: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-2-tuple(v_897))))) then dhexp(2-proj-2-tuple(v_897),5-proj-7-tuple(v_890)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_898))) then (if not-caught-fail(v_899) then (if not-caught-fail(v_900) then (if not-caught-fail(v_901) then (v_899,v_900,v_901) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {382}let v_903: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-2-tuple(v_897))))) then dhexp(2-proj-2-tuple(v_897),5-proj-7-tuple(v_890)) else fail-any) else fail-any)) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-3-tuple(v_898))))) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-3-tuple(v_902))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_902)) then cipherstatepack(2-proj-3-tuple(v_902),minnonce) else fail-any),1-proj-3-tuple(v_902),3-proj-3-tuple(v_898)) else fail-any) else fail-any) else fail-any)) in
        {383}let v_904: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {384}let v_905: keypair = catch-fail((if not-caught-fail(v_904) then keypairpack(validkey(v_904),key_s(bob)) else fail-any)) in
        {385}let v_906: bitstring = catch-fail(symmetricstateunpack(v_903)) in
        {386}let v_907: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_906))) in
        {387}let v_908: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_907),2-proj-2-tuple(v_907),3-proj-3-tuple(v_906),getpublickey(v_905))) in
        {388}let v_909: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_906))) in
        {389}let v_910: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_907))) && success?(1-proj-3-tuple(v_906))) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-2-tuple(v_909))))) then cipherstatepack(1-proj-2-tuple(v_909),increment_nonce(2-proj-2-tuple(v_907))) else fail-any) else fail-any)) in
        {390}let v_911: bitstring = catch-fail((if (success?(getpublickey(v_905)) && (success?(3-proj-3-tuple(v_906)) && success?(1-proj-3-tuple(v_906)))) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then (if not-caught-fail(v_908) then (if not-caught-fail(v_910) then (v_910,v_908) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {391}let v_912: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_911),2-proj-3-tuple(v_906),3-proj-3-tuple(v_906)))) in
        {392}let v_913: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_911)) && success?(symmetricstatepack(1-proj-2-tuple(v_911),2-proj-3-tuple(v_906),3-proj-3-tuple(v_906)))) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then symmetricstatepack(1-proj-3-tuple(v_912),2-proj-3-tuple(v_912),hash(3-proj-3-tuple(v_912),2-proj-2-tuple(v_911))) else fail-any) else fail-any)) in
        {393}let v_914: bitstring = catch-fail((if success?(getpublickey(v_905)) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then (if (not-caught-fail(v_911) && success?(is-true(success?(1-proj-2-tuple(v_911))))) then (if not-caught-fail(v_913) then (v_913,2-proj-2-tuple(v_911)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {394}let v_915: bitstring = catch-fail(keypairunpack(v_905)) in
        {395}let v_916: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_914))) in
        {396}let v_917: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_916),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {397}let v_918: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_916),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {398}let v_919: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_916),(if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_890)) else fail-any) else fail-any))) in
        {399}let v_920: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_890)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_916))) then (if not-caught-fail(v_917) then (if not-caught-fail(v_918) then (if not-caught-fail(v_919) then (v_917,v_918,v_919) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {400}let v_921: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_890)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_890)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_914))) then (if (not-caught-fail(v_916) && success?(is-true(success?(1-proj-3-tuple(v_916))))) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-3-tuple(v_920))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_920)) then cipherstatepack(2-proj-3-tuple(v_920),minnonce) else fail-any),1-proj-3-tuple(v_920),3-proj-3-tuple(v_916)) else fail-any) else fail-any) else fail-any)) in
        {401}let v_922: bitstring = catch-fail(symmetricstateunpack(v_921)) in
        {402}let v_923: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_922))) in
        {403}let v_924: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_923),2-proj-2-tuple(v_923),3-proj-3-tuple(v_922),msg_b(bob,alice,sid))) in
        {404}let v_925: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_922))) in
        {405}let v_926: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_923))) && success?(1-proj-3-tuple(v_922))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-2-tuple(v_925))))) then cipherstatepack(1-proj-2-tuple(v_925),increment_nonce(2-proj-2-tuple(v_923))) else fail-any) else fail-any)) in
        {406}let v_927: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_922)) && success?(1-proj-3-tuple(v_922))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-2-tuple(v_923))))) then (if not-caught-fail(v_924) then (if not-caught-fail(v_926) then (v_926,v_924) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_928: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_927),2-proj-3-tuple(v_922),3-proj-3-tuple(v_922)))) in
        {408}let v_929: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_927)) && success?(symmetricstatepack(1-proj-2-tuple(v_927),2-proj-3-tuple(v_922),3-proj-3-tuple(v_922)))) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then symmetricstatepack(1-proj-3-tuple(v_928),2-proj-3-tuple(v_928),hash(3-proj-3-tuple(v_928),2-proj-2-tuple(v_927))) else fail-any) else fail-any)) in
        {409}let v_930: bitstring = catch-fail((if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if (not-caught-fail(v_927) && success?(is-true(success?(1-proj-2-tuple(v_927))))) then (if not-caught-fail(v_929) then (v_929,2-proj-2-tuple(v_927)) else fail-any) else fail-any) else fail-any)) in
        {410}let v_931: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_930),v_905,v_893,4-proj-7-tuple(v_890),5-proj-7-tuple(v_890),6-proj-7-tuple(v_890),7-proj-7-tuple(v_890))) in
        {411}let v_932: bitstring = catch-fail(concat3(v_894,2-proj-2-tuple(v_914),2-proj-2-tuple(v_930))) in
        {412}let (hs_933: handshakestate,message_b_934: bitstring) = (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-7-tuple(v_890))))) then (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-3-tuple(v_891))))) then (if not-caught-fail(v_893) then (if not-caught-fail(v_894) then (if not-caught-fail(v_896) then (if not-caught-fail(v_903) then (if not-caught-fail(v_905) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then (if not-caught-fail(v_921) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-2-tuple(v_930))))) then (if not-caught-fail(v_931) then (if not-caught-fail(v_932) then (v_931,v_932) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {413}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {414}insert statestore(bob,alice,sid,statepack_c(hs_933));
        {415}out(pub, message_b_934)
    ) | (
        {450}get statestore(=bob,=alice,=sid,statepack_c(hs_935: handshakestate)) in
        {417}in(pub, message_c_936: bitstring);
        {418}let v_937: bitstring = catch-fail(handshakestateunpack(hs_935)) in
        {419}let v_938: bitstring = catch-fail(deconcat3(message_c_936)) in
        {420}let v_939: bool = catch-fail(true) in
        {421}let v_940: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_937))) in
        {422}let v_941: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_937))) in
        {423}let v_942: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_941),(if (success?(4-proj-7-tuple(v_937)) && success?(3-proj-7-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then dhexp(2-proj-2-tuple(v_940),4-proj-7-tuple(v_937)) else fail-any) else fail-any))) in
        {424}let v_943: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_941),(if (success?(4-proj-7-tuple(v_937)) && success?(3-proj-7-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then dhexp(2-proj-2-tuple(v_940),4-proj-7-tuple(v_937)) else fail-any) else fail-any))) in
        {425}let v_944: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_941),(if (success?(4-proj-7-tuple(v_937)) && success?(3-proj-7-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then dhexp(2-proj-2-tuple(v_940),4-proj-7-tuple(v_937)) else fail-any) else fail-any))) in
        {426}let v_945: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_937)) && success?(3-proj-7-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then dhexp(2-proj-2-tuple(v_940),4-proj-7-tuple(v_937)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_941))) then (if not-caught-fail(v_942) then (if not-caught-fail(v_943) then (if not-caught-fail(v_944) then (v_942,v_943,v_944) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {427}let v_946: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_937)) && success?(3-proj-7-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then dhexp(2-proj-2-tuple(v_940),4-proj-7-tuple(v_937)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_937))) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-3-tuple(v_941))))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-3-tuple(v_945))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_945)) then cipherstatepack(2-proj-3-tuple(v_945),minnonce) else fail-any),1-proj-3-tuple(v_945),3-proj-3-tuple(v_941)) else fail-any) else fail-any) else fail-any)) in
        {428}let v_947: bitstring = catch-fail(symmetricstateunpack(v_946)) in
        {429}let v_948: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_947))) in
        {430}let v_949: aead = catch-fail(decrypt(1-proj-2-tuple(v_948),2-proj-2-tuple(v_948),3-proj-3-tuple(v_947),3-proj-3-tuple(v_938))) in
        {431}let v_950: bitstring = catch-fail(aeadunpack(v_949)) in
        {432}let v_951: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_947))) in
        {433}let v_952: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_948))) && success?(1-proj-3-tuple(v_947))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-2-tuple(v_951))))) then cipherstatepack(1-proj-2-tuple(v_951),increment_nonce(2-proj-2-tuple(v_948))) else fail-any) else fail-any)) in
        {434}let v_953: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_938)) && (success?(3-proj-3-tuple(v_947)) && success?(1-proj-3-tuple(v_947)))) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then (if not-caught-fail(v_949) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then (if not-caught-fail(v_952) then (v_952,3-proj-3-tuple(v_950),1-proj-3-tuple(v_950)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {435}let v_954: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_953),2-proj-3-tuple(v_947),3-proj-3-tuple(v_947)))) in
        {436}let v_955: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_938)) && success?(symmetricstatepack(1-proj-3-tuple(v_953),2-proj-3-tuple(v_947),3-proj-3-tuple(v_947)))) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-3-tuple(v_954))))) then symmetricstatepack(1-proj-3-tuple(v_954),2-proj-3-tuple(v_954),hash(3-proj-3-tuple(v_954),3-proj-3-tuple(v_938))) else fail-any) else fail-any)) in
        {437}let v_956: bitstring = catch-fail((if success?(3-proj-3-tuple(v_938)) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if not-caught-fail(v_955) then (v_955,2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {438}let v_957: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_956),2-proj-7-tuple(v_937),3-proj-7-tuple(v_937),4-proj-7-tuple(v_937),5-proj-7-tuple(v_937),6-proj-7-tuple(v_937),7-proj-7-tuple(v_937))) in
        {439}let v_958: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_956))) in
        {440}let v_959: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_958),zero)) in
        {441}let v_960: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_958),zero)) in
        {442}let v_961: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_958),zero)) in
        {443}let v_962: bitstring = catch-fail((if success?(2-proj-3-tuple(v_958)) then (if not-caught-fail(v_959) then (if not-caught-fail(v_960) then (if not-caught-fail(v_961) then (v_959,v_960,v_961) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {444}let v_963: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_962)) then cipherstatepack(1-proj-3-tuple(v_962),minnonce) else fail-any)) in
        {445}let v_964: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_962)) then cipherstatepack(2-proj-3-tuple(v_962),minnonce) else fail-any)) in
        {446}let v_965: bitstring = catch-fail((if success?(1-proj-3-tuple(v_956)) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-3-tuple(v_962))))) then (if not-caught-fail(v_963) then (if not-caught-fail(v_964) then (1-proj-3-tuple(v_956),v_963,v_964) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {447}let (hs_966: handshakestate,plaintext_c: bitstring,valid_967: bool,cs1_968: cipherstate,cs2_969: cipherstate) = (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-7-tuple(v_937))))) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-3-tuple(v_938))))) then (if not-caught-fail(v_939) then (if not-caught-fail(v_946) then (if (not-caught-fail(v_956) && success?(is-true(success?(1-proj-3-tuple(v_956))))) then (if (v_939 && 3-proj-3-tuple(v_956)) then (if not-caught-fail(v_957) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-3-tuple(v_965))))) then (v_957,2-proj-3-tuple(v_956),true,2-proj-3-tuple(v_965),3-proj-3-tuple(v_965)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {448}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {449}insert statestore(bob,alice,sid,statepack_d(hs_966,cs1_968,cs2_969))
    ) | (
        {451}!
        {470}get statestore(=bob,=alice,=sid,statepack_d(hs_970: handshakestate,cs1_971: cipherstate,cs2_972: cipherstate)) in
        {452}let hs_973: handshakestate = handshakestatesetcs(hs_970,cs2_972) in
        {453}let v_974: bitstring = catch-fail(handshakestateunpack(hs_973)) in
        {454}let v_975: bitstring = catch-fail((empty,empty,empty)) in
        {455}let v_976: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_974))) in
        {456}let v_977: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_976))) in
        {457}let v_978: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_977),2-proj-2-tuple(v_977),3-proj-3-tuple(v_976),msg_d(bob,alice,sid))) in
        {458}let v_979: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_976))) in
        {459}let v_980: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_977))) && success?(1-proj-3-tuple(v_976))) then (if (not-caught-fail(v_979) && success?(is-true(success?(1-proj-2-tuple(v_979))))) then cipherstatepack(1-proj-2-tuple(v_979),increment_nonce(2-proj-2-tuple(v_977))) else fail-any) else fail-any)) in
        {460}let v_981: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_976)) && success?(1-proj-3-tuple(v_976))) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then (if not-caught-fail(v_978) then (if not-caught-fail(v_980) then (v_980,v_978) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {461}let v_982: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_981),2-proj-3-tuple(v_976),3-proj-3-tuple(v_976)))) in
        {462}let v_983: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_981)) && success?(symmetricstatepack(1-proj-2-tuple(v_981),2-proj-3-tuple(v_976),3-proj-3-tuple(v_976)))) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then symmetricstatepack(1-proj-3-tuple(v_982),2-proj-3-tuple(v_982),hash(3-proj-3-tuple(v_982),2-proj-2-tuple(v_981))) else fail-any) else fail-any)) in
        {463}let v_984: bitstring = catch-fail((if success?(1-proj-7-tuple(v_974)) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then (if (not-caught-fail(v_981) && success?(is-true(success?(1-proj-2-tuple(v_981))))) then (if not-caught-fail(v_983) then (v_983,2-proj-2-tuple(v_981)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {464}let v_985: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_984),2-proj-7-tuple(v_974),3-proj-7-tuple(v_974),4-proj-7-tuple(v_974),5-proj-7-tuple(v_974),6-proj-7-tuple(v_974),7-proj-7-tuple(v_974))) in
        {465}let v_986: bitstring = catch-fail(concat3(1-proj-3-tuple(v_975),2-proj-3-tuple(v_975),2-proj-2-tuple(v_984))) in
        {466}let (hs_987: handshakestate,message_d_988: bitstring) = (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-7-tuple(v_974))))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-3-tuple(v_975))))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then (if not-caught-fail(v_985) then (if not-caught-fail(v_986) then (v_985,v_986) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {467}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {468}insert statestore(bob,alice,sid,statepack_e(hs_987,cs1_971,handshakestategetcs(hs_987)));
        {469}out(pub, message_d_988)
    ) | (
        {471}!
        {491}get statestore(=bob,=alice,=sid,statepack_e(hs_989: handshakestate,cs1_990: cipherstate,cs2_991: cipherstate)) in
        {472}let hs_992: handshakestate = handshakestatesetcs(hs_989,cs1_990) in
        {473}in(pub, message_e_993: bitstring);
        {474}let v_994: bitstring = catch-fail(handshakestateunpack(hs_992)) in
        {475}let v_995: bitstring = catch-fail(deconcat3(message_e_993)) in
        {476}let v_996: bool = catch-fail(true) in
        {477}let v_997: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_994))) in
        {478}let v_998: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_997))) in
        {479}let v_999: aead = catch-fail(decrypt(1-proj-2-tuple(v_998),2-proj-2-tuple(v_998),3-proj-3-tuple(v_997),3-proj-3-tuple(v_995))) in
        {480}let v_1000: bitstring = catch-fail(aeadunpack(v_999)) in
        {481}let v_1001: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_997))) in
        {482}let v_1002: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_998))) && success?(1-proj-3-tuple(v_997))) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-2-tuple(v_1001))))) then cipherstatepack(1-proj-2-tuple(v_1001),increment_nonce(2-proj-2-tuple(v_998))) else fail-any) else fail-any)) in
        {483}let v_1003: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_995)) && (success?(3-proj-3-tuple(v_997)) && success?(1-proj-3-tuple(v_997)))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then (if not-caught-fail(v_999) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if not-caught-fail(v_1002) then (v_1002,3-proj-3-tuple(v_1000),1-proj-3-tuple(v_1000)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {484}let v_1004: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1003),2-proj-3-tuple(v_997),3-proj-3-tuple(v_997)))) in
        {485}let v_1005: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_995)) && success?(symmetricstatepack(1-proj-3-tuple(v_1003),2-proj-3-tuple(v_997),3-proj-3-tuple(v_997)))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-3-tuple(v_1004))))) then symmetricstatepack(1-proj-3-tuple(v_1004),2-proj-3-tuple(v_1004),hash(3-proj-3-tuple(v_1004),3-proj-3-tuple(v_995))) else fail-any) else fail-any)) in
        {486}let v_1006: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_995)) && success?(1-proj-7-tuple(v_994))) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-3-tuple(v_997))))) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if not-caught-fail(v_1005) then (v_1005,2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {487}let v_1007: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1006),2-proj-7-tuple(v_994),3-proj-7-tuple(v_994),4-proj-7-tuple(v_994),5-proj-7-tuple(v_994),6-proj-7-tuple(v_994),7-proj-7-tuple(v_994))) in
        {488}let (hs_1008: handshakestate,plaintext_e: bitstring,valid_1009: bool) = (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-7-tuple(v_994))))) then (if (not-caught-fail(v_995) && success?(is-true(success?(1-proj-3-tuple(v_995))))) then (if not-caught-fail(v_996) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-3-tuple(v_1006))))) then (if (v_996 && 3-proj-3-tuple(v_1006)) then (if not-caught-fail(v_1007) then (v_1007,2-proj-3-tuple(v_1006),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {489}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {490}event RecvEnd(valid_1009)
    ) | (
        {492}event LeakS(phase0,bob);
        {493}out(pub, key_s(bob))
    ) | (
        {494}phase 1;
        {495}event LeakS(phase1,bob);
        {496}out(pub, key_s(bob))
    )
) | (
    {497}let s_1010: keypair = keypairpack(empty,empty) in
    {498}out(pub, getpublickey(s_1010));
    (
        {499}let e_1011: keypair = keypairpack(empty,empty) in
        {500}let v_1012: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {501}let rs_1013: key = getpublickey((if not-caught-fail(v_1012) then keypairpack(validkey(v_1012),key_s(charlie)) else fail-any)) in
        {502}let re_1014: key = empty in
        {503}let v_1015: bitstring = catch-fail(hash(somename,empty)) in
        {504}let v_1016: key = catch-fail(v_1015) in
        {505}let v_1017: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {506}let v_1018: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1015) then (if not-caught-fail(v_1016) then (if not-caught-fail(v_1017) then symmetricstatepack(v_1017,v_1016,v_1015) else fail-any) else fail-any) else fail-any))) in
        {507}let v_1019: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1015) then (if not-caught-fail(v_1016) then (if not-caught-fail(v_1017) then symmetricstatepack(v_1017,v_1016,v_1015) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then symmetricstatepack(1-proj-3-tuple(v_1018),2-proj-3-tuple(v_1018),hash(3-proj-3-tuple(v_1018),empty)) else fail-any) else fail-any)) in
        {508}let v_1020: bitstring = catch-fail(symmetricstateunpack(v_1019)) in
        {509}let v_1021: symmetricstate = catch-fail((if (not-caught-fail(v_1020) && success?(is-true(success?(1-proj-3-tuple(v_1020))))) then symmetricstatepack(1-proj-3-tuple(v_1020),2-proj-3-tuple(v_1020),hash(3-proj-3-tuple(v_1020),rs_1013)) else fail-any)) in
        {510}let hs_1022: handshakestate = (if not-caught-fail(v_1019) then (if not-caught-fail(v_1021) then handshakestatepack(v_1021,s_1010,e_1011,rs_1013,re_1014,empty,false) else fail-any) else fail-any) in
        {511}insert statestore(bob,charlie,sid,statepack_a(hs_1022))
    ) | (
        {533}get statestore(=bob,=charlie,=sid,statepack_a(hs_1023: handshakestate)) in
        {512}in(pub, message_a_1024: bitstring);
        {513}let v_1025: bitstring = catch-fail(handshakestateunpack(hs_1023)) in
        {514}let v_1026: bitstring = catch-fail(deconcat3(message_a_1024)) in
        {515}let v_1027: bool = catch-fail(true) in
        {516}let v_1028: key = catch-fail(1-proj-3-tuple(v_1026)) in
        {517}let v_1029: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1025))) in
        {518}let v_1030: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1025)) then (if (not-caught-fail(v_1029) && success?(is-true(success?(1-proj-3-tuple(v_1029))))) then symmetricstatepack(1-proj-3-tuple(v_1029),2-proj-3-tuple(v_1029),hash(3-proj-3-tuple(v_1029),v_1028)) else fail-any) else fail-any)) in
        {519}let v_1031: bitstring = catch-fail(symmetricstateunpack(v_1030)) in
        {520}let v_1032: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1031))) in
        {521}let v_1033: aead = catch-fail(decrypt(1-proj-2-tuple(v_1032),2-proj-2-tuple(v_1032),3-proj-3-tuple(v_1031),3-proj-3-tuple(v_1026))) in
        {522}let v_1034: bitstring = catch-fail(aeadunpack(v_1033)) in
        {523}let v_1035: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1031))) in
        {524}let v_1036: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1032))) && success?(1-proj-3-tuple(v_1031))) then (if (not-caught-fail(v_1035) && success?(is-true(success?(1-proj-2-tuple(v_1035))))) then cipherstatepack(1-proj-2-tuple(v_1035),increment_nonce(2-proj-2-tuple(v_1032))) else fail-any) else fail-any)) in
        {525}let v_1037: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1026)) && (success?(3-proj-3-tuple(v_1031)) && success?(1-proj-3-tuple(v_1031)))) then (if (not-caught-fail(v_1032) && success?(is-true(success?(1-proj-2-tuple(v_1032))))) then (if not-caught-fail(v_1033) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-3-tuple(v_1034))))) then (if not-caught-fail(v_1036) then (v_1036,3-proj-3-tuple(v_1034),1-proj-3-tuple(v_1034)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {526}let v_1038: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1037),2-proj-3-tuple(v_1031),3-proj-3-tuple(v_1031)))) in
        {527}let v_1039: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1026)) && success?(symmetricstatepack(1-proj-3-tuple(v_1037),2-proj-3-tuple(v_1031),3-proj-3-tuple(v_1031)))) then (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-3-tuple(v_1038))))) then symmetricstatepack(1-proj-3-tuple(v_1038),2-proj-3-tuple(v_1038),hash(3-proj-3-tuple(v_1038),3-proj-3-tuple(v_1026))) else fail-any) else fail-any)) in
        {528}let v_1040: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1026)) then (if (not-caught-fail(v_1031) && success?(is-true(success?(1-proj-3-tuple(v_1031))))) then (if (not-caught-fail(v_1037) && success?(is-true(success?(1-proj-3-tuple(v_1037))))) then (if not-caught-fail(v_1039) then (v_1039,2-proj-3-tuple(v_1037),3-proj-3-tuple(v_1037)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {529}let v_1041: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1040),2-proj-7-tuple(v_1025),3-proj-7-tuple(v_1025),4-proj-7-tuple(v_1025),v_1028,6-proj-7-tuple(v_1025),7-proj-7-tuple(v_1025))) in
        {530}let (hs_1042: handshakestate,plaintext_a_1043: bitstring,valid_1044: bool) = (if (not-caught-fail(v_1025) && success?(is-true(success?(1-proj-7-tuple(v_1025))))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-3-tuple(v_1026))))) then (if not-caught-fail(v_1027) then (if not-caught-fail(v_1028) then (if not-caught-fail(v_1030) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-3-tuple(v_1040))))) then (if (v_1027 && 3-proj-3-tuple(v_1040)) then (if not-caught-fail(v_1041) then (v_1041,2-proj-3-tuple(v_1040),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {531}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1043);
        {532}insert statestore(bob,charlie,sid,statepack_b(hs_1042))
    ) | (
        {581}get statestore(=bob,=charlie,=sid,statepack_b(hs_1045: handshakestate)) in
        {534}let v_1046: bitstring = catch-fail(handshakestateunpack(hs_1045)) in
        {535}let v_1047: bitstring = catch-fail((empty,empty,empty)) in
        {536}let v_1048: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {537}let v_1049: keypair = catch-fail((if not-caught-fail(v_1048) then keypairpack(validkey(v_1048),key_e(bob,charlie,sid)) else fail-any)) in
        {538}let v_1050: bitstring = catch-fail(getpublickey(v_1049)) in
        {539}let v_1051: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1046))) in
        {540}let v_1052: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1051) && success?(is-true(success?(1-proj-3-tuple(v_1051))))) then symmetricstatepack(1-proj-3-tuple(v_1051),2-proj-3-tuple(v_1051),hash(3-proj-3-tuple(v_1051),v_1050)) else fail-any) else fail-any)) in
        {541}let v_1053: bitstring = catch-fail(keypairunpack(v_1049)) in
        {542}let v_1054: bitstring = catch-fail(symmetricstateunpack(v_1052)) in
        {543}let v_1055: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1054),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-2-tuple(v_1053))))) then dhexp(2-proj-2-tuple(v_1053),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {544}let v_1056: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1054),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-2-tuple(v_1053))))) then dhexp(2-proj-2-tuple(v_1053),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {545}let v_1057: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1054),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-2-tuple(v_1053))))) then dhexp(2-proj-2-tuple(v_1053),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {546}let v_1058: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-2-tuple(v_1053))))) then dhexp(2-proj-2-tuple(v_1053),5-proj-7-tuple(v_1046)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1054))) then (if not-caught-fail(v_1055) then (if not-caught-fail(v_1056) then (if not-caught-fail(v_1057) then (v_1055,v_1056,v_1057) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {547}let v_1059: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-2-tuple(v_1053))))) then dhexp(2-proj-2-tuple(v_1053),5-proj-7-tuple(v_1046)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1054) && success?(is-true(success?(1-proj-3-tuple(v_1054))))) then (if (not-caught-fail(v_1058) && success?(is-true(success?(1-proj-3-tuple(v_1058))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1058)) then cipherstatepack(2-proj-3-tuple(v_1058),minnonce) else fail-any),1-proj-3-tuple(v_1058),3-proj-3-tuple(v_1054)) else fail-any) else fail-any) else fail-any)) in
        {548}let v_1060: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {549}let v_1061: keypair = catch-fail((if not-caught-fail(v_1060) then keypairpack(validkey(v_1060),key_s(bob)) else fail-any)) in
        {550}let v_1062: bitstring = catch-fail(symmetricstateunpack(v_1059)) in
        {551}let v_1063: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1062))) in
        {552}let v_1064: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1063),2-proj-2-tuple(v_1063),3-proj-3-tuple(v_1062),getpublickey(v_1061))) in
        {553}let v_1065: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1062))) in
        {554}let v_1066: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1063))) && success?(1-proj-3-tuple(v_1062))) then (if (not-caught-fail(v_1065) && success?(is-true(success?(1-proj-2-tuple(v_1065))))) then cipherstatepack(1-proj-2-tuple(v_1065),increment_nonce(2-proj-2-tuple(v_1063))) else fail-any) else fail-any)) in
        {555}let v_1067: bitstring = catch-fail((if (success?(getpublickey(v_1061)) && (success?(3-proj-3-tuple(v_1062)) && success?(1-proj-3-tuple(v_1062)))) then (if (not-caught-fail(v_1063) && success?(is-true(success?(1-proj-2-tuple(v_1063))))) then (if not-caught-fail(v_1064) then (if not-caught-fail(v_1066) then (v_1066,v_1064) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {556}let v_1068: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1067),2-proj-3-tuple(v_1062),3-proj-3-tuple(v_1062)))) in
        {557}let v_1069: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1067)) && success?(symmetricstatepack(1-proj-2-tuple(v_1067),2-proj-3-tuple(v_1062),3-proj-3-tuple(v_1062)))) then (if (not-caught-fail(v_1068) && success?(is-true(success?(1-proj-3-tuple(v_1068))))) then symmetricstatepack(1-proj-3-tuple(v_1068),2-proj-3-tuple(v_1068),hash(3-proj-3-tuple(v_1068),2-proj-2-tuple(v_1067))) else fail-any) else fail-any)) in
        {558}let v_1070: bitstring = catch-fail((if success?(getpublickey(v_1061)) then (if (not-caught-fail(v_1062) && success?(is-true(success?(1-proj-3-tuple(v_1062))))) then (if (not-caught-fail(v_1067) && success?(is-true(success?(1-proj-2-tuple(v_1067))))) then (if not-caught-fail(v_1069) then (v_1069,2-proj-2-tuple(v_1067)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {559}let v_1071: bitstring = catch-fail(keypairunpack(v_1061)) in
        {560}let v_1072: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1070))) in
        {561}let v_1073: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1072),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-2-tuple(v_1071))))) then dhexp(2-proj-2-tuple(v_1071),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {562}let v_1074: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1072),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-2-tuple(v_1071))))) then dhexp(2-proj-2-tuple(v_1071),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {563}let v_1075: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1072),(if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-2-tuple(v_1071))))) then dhexp(2-proj-2-tuple(v_1071),5-proj-7-tuple(v_1046)) else fail-any) else fail-any))) in
        {564}let v_1076: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-2-tuple(v_1071))))) then dhexp(2-proj-2-tuple(v_1071),5-proj-7-tuple(v_1046)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1072))) then (if not-caught-fail(v_1073) then (if not-caught-fail(v_1074) then (if not-caught-fail(v_1075) then (v_1073,v_1074,v_1075) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {565}let v_1077: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1046)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-2-tuple(v_1071))))) then dhexp(2-proj-2-tuple(v_1071),5-proj-7-tuple(v_1046)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_1070))) then (if (not-caught-fail(v_1072) && success?(is-true(success?(1-proj-3-tuple(v_1072))))) then (if (not-caught-fail(v_1076) && success?(is-true(success?(1-proj-3-tuple(v_1076))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1076)) then cipherstatepack(2-proj-3-tuple(v_1076),minnonce) else fail-any),1-proj-3-tuple(v_1076),3-proj-3-tuple(v_1072)) else fail-any) else fail-any) else fail-any)) in
        {566}let v_1078: bitstring = catch-fail(symmetricstateunpack(v_1077)) in
        {567}let v_1079: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1078))) in
        {568}let v_1080: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1079),2-proj-2-tuple(v_1079),3-proj-3-tuple(v_1078),msg_b(bob,charlie,sid))) in
        {569}let v_1081: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1078))) in
        {570}let v_1082: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1079))) && success?(1-proj-3-tuple(v_1078))) then (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-2-tuple(v_1081))))) then cipherstatepack(1-proj-2-tuple(v_1081),increment_nonce(2-proj-2-tuple(v_1079))) else fail-any) else fail-any)) in
        {571}let v_1083: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1078)) && success?(1-proj-3-tuple(v_1078))) then (if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-2-tuple(v_1079))))) then (if not-caught-fail(v_1080) then (if not-caught-fail(v_1082) then (v_1082,v_1080) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {572}let v_1084: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1083),2-proj-3-tuple(v_1078),3-proj-3-tuple(v_1078)))) in
        {573}let v_1085: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1083)) && success?(symmetricstatepack(1-proj-2-tuple(v_1083),2-proj-3-tuple(v_1078),3-proj-3-tuple(v_1078)))) then (if (not-caught-fail(v_1084) && success?(is-true(success?(1-proj-3-tuple(v_1084))))) then symmetricstatepack(1-proj-3-tuple(v_1084),2-proj-3-tuple(v_1084),hash(3-proj-3-tuple(v_1084),2-proj-2-tuple(v_1083))) else fail-any) else fail-any)) in
        {574}let v_1086: bitstring = catch-fail((if (not-caught-fail(v_1078) && success?(is-true(success?(1-proj-3-tuple(v_1078))))) then (if (not-caught-fail(v_1083) && success?(is-true(success?(1-proj-2-tuple(v_1083))))) then (if not-caught-fail(v_1085) then (v_1085,2-proj-2-tuple(v_1083)) else fail-any) else fail-any) else fail-any)) in
        {575}let v_1087: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1086),v_1061,v_1049,4-proj-7-tuple(v_1046),5-proj-7-tuple(v_1046),6-proj-7-tuple(v_1046),7-proj-7-tuple(v_1046))) in
        {576}let v_1088: bitstring = catch-fail(concat3(v_1050,2-proj-2-tuple(v_1070),2-proj-2-tuple(v_1086))) in
        {577}let (hs_1089: handshakestate,message_b_1090: bitstring) = (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-7-tuple(v_1046))))) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-3-tuple(v_1047))))) then (if not-caught-fail(v_1049) then (if not-caught-fail(v_1050) then (if not-caught-fail(v_1052) then (if not-caught-fail(v_1059) then (if not-caught-fail(v_1061) then (if (not-caught-fail(v_1070) && success?(is-true(success?(1-proj-2-tuple(v_1070))))) then (if not-caught-fail(v_1077) then (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-2-tuple(v_1086))))) then (if not-caught-fail(v_1087) then (if not-caught-fail(v_1088) then (v_1087,v_1088) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {578}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {579}insert statestore(bob,charlie,sid,statepack_c(hs_1089));
        {580}out(pub, message_b_1090)
    ) | (
        {615}get statestore(=bob,=charlie,=sid,statepack_c(hs_1091: handshakestate)) in
        {582}in(pub, message_c_1092: bitstring);
        {583}let v_1093: bitstring = catch-fail(handshakestateunpack(hs_1091)) in
        {584}let v_1094: bitstring = catch-fail(deconcat3(message_c_1092)) in
        {585}let v_1095: bool = catch-fail(true) in
        {586}let v_1096: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1093))) in
        {587}let v_1097: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1093))) in
        {588}let v_1098: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1097),(if (success?(4-proj-7-tuple(v_1093)) && success?(3-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then dhexp(2-proj-2-tuple(v_1096),4-proj-7-tuple(v_1093)) else fail-any) else fail-any))) in
        {589}let v_1099: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1097),(if (success?(4-proj-7-tuple(v_1093)) && success?(3-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then dhexp(2-proj-2-tuple(v_1096),4-proj-7-tuple(v_1093)) else fail-any) else fail-any))) in
        {590}let v_1100: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1097),(if (success?(4-proj-7-tuple(v_1093)) && success?(3-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then dhexp(2-proj-2-tuple(v_1096),4-proj-7-tuple(v_1093)) else fail-any) else fail-any))) in
        {591}let v_1101: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1093)) && success?(3-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then dhexp(2-proj-2-tuple(v_1096),4-proj-7-tuple(v_1093)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1097))) then (if not-caught-fail(v_1098) then (if not-caught-fail(v_1099) then (if not-caught-fail(v_1100) then (v_1098,v_1099,v_1100) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {592}let v_1102: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1093)) && success?(3-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then dhexp(2-proj-2-tuple(v_1096),4-proj-7-tuple(v_1093)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_1093))) then (if (not-caught-fail(v_1097) && success?(is-true(success?(1-proj-3-tuple(v_1097))))) then (if (not-caught-fail(v_1101) && success?(is-true(success?(1-proj-3-tuple(v_1101))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1101)) then cipherstatepack(2-proj-3-tuple(v_1101),minnonce) else fail-any),1-proj-3-tuple(v_1101),3-proj-3-tuple(v_1097)) else fail-any) else fail-any) else fail-any)) in
        {593}let v_1103: bitstring = catch-fail(symmetricstateunpack(v_1102)) in
        {594}let v_1104: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1103))) in
        {595}let v_1105: aead = catch-fail(decrypt(1-proj-2-tuple(v_1104),2-proj-2-tuple(v_1104),3-proj-3-tuple(v_1103),3-proj-3-tuple(v_1094))) in
        {596}let v_1106: bitstring = catch-fail(aeadunpack(v_1105)) in
        {597}let v_1107: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1103))) in
        {598}let v_1108: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1104))) && success?(1-proj-3-tuple(v_1103))) then (if (not-caught-fail(v_1107) && success?(is-true(success?(1-proj-2-tuple(v_1107))))) then cipherstatepack(1-proj-2-tuple(v_1107),increment_nonce(2-proj-2-tuple(v_1104))) else fail-any) else fail-any)) in
        {599}let v_1109: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1094)) && (success?(3-proj-3-tuple(v_1103)) && success?(1-proj-3-tuple(v_1103)))) then (if (not-caught-fail(v_1104) && success?(is-true(success?(1-proj-2-tuple(v_1104))))) then (if not-caught-fail(v_1105) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-3-tuple(v_1106))))) then (if not-caught-fail(v_1108) then (v_1108,3-proj-3-tuple(v_1106),1-proj-3-tuple(v_1106)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {600}let v_1110: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1109),2-proj-3-tuple(v_1103),3-proj-3-tuple(v_1103)))) in
        {601}let v_1111: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1094)) && success?(symmetricstatepack(1-proj-3-tuple(v_1109),2-proj-3-tuple(v_1103),3-proj-3-tuple(v_1103)))) then (if (not-caught-fail(v_1110) && success?(is-true(success?(1-proj-3-tuple(v_1110))))) then symmetricstatepack(1-proj-3-tuple(v_1110),2-proj-3-tuple(v_1110),hash(3-proj-3-tuple(v_1110),3-proj-3-tuple(v_1094))) else fail-any) else fail-any)) in
        {602}let v_1112: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1094)) then (if (not-caught-fail(v_1103) && success?(is-true(success?(1-proj-3-tuple(v_1103))))) then (if (not-caught-fail(v_1109) && success?(is-true(success?(1-proj-3-tuple(v_1109))))) then (if not-caught-fail(v_1111) then (v_1111,2-proj-3-tuple(v_1109),3-proj-3-tuple(v_1109)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {603}let v_1113: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1112),2-proj-7-tuple(v_1093),3-proj-7-tuple(v_1093),4-proj-7-tuple(v_1093),5-proj-7-tuple(v_1093),6-proj-7-tuple(v_1093),7-proj-7-tuple(v_1093))) in
        {604}let v_1114: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1112))) in
        {605}let v_1115: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1114),zero)) in
        {606}let v_1116: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1114),zero)) in
        {607}let v_1117: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1114),zero)) in
        {608}let v_1118: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1114)) then (if not-caught-fail(v_1115) then (if not-caught-fail(v_1116) then (if not-caught-fail(v_1117) then (v_1115,v_1116,v_1117) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {609}let v_1119: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1118)) then cipherstatepack(1-proj-3-tuple(v_1118),minnonce) else fail-any)) in
        {610}let v_1120: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1118)) then cipherstatepack(2-proj-3-tuple(v_1118),minnonce) else fail-any)) in
        {611}let v_1121: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1112)) then (if (not-caught-fail(v_1114) && success?(is-true(success?(1-proj-3-tuple(v_1114))))) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then (if not-caught-fail(v_1119) then (if not-caught-fail(v_1120) then (1-proj-3-tuple(v_1112),v_1119,v_1120) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {612}let (hs_1122: handshakestate,plaintext_c_1123: bitstring,valid_1124: bool,cs1_1125: cipherstate,cs2_1126: cipherstate) = (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-7-tuple(v_1093))))) then (if (not-caught-fail(v_1094) && success?(is-true(success?(1-proj-3-tuple(v_1094))))) then (if not-caught-fail(v_1095) then (if not-caught-fail(v_1102) then (if (not-caught-fail(v_1112) && success?(is-true(success?(1-proj-3-tuple(v_1112))))) then (if (v_1095 && 3-proj-3-tuple(v_1112)) then (if not-caught-fail(v_1113) then (if (not-caught-fail(v_1121) && success?(is-true(success?(1-proj-3-tuple(v_1121))))) then (v_1113,2-proj-3-tuple(v_1112),true,2-proj-3-tuple(v_1121),3-proj-3-tuple(v_1121)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {613}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1123);
        {614}insert statestore(bob,charlie,sid,statepack_d(hs_1122,cs1_1125,cs2_1126))
    ) | (
        {616}!
        {635}get statestore(=bob,=charlie,=sid,statepack_d(hs_1127: handshakestate,cs1_1128: cipherstate,cs2_1129: cipherstate)) in
        {617}let hs_1130: handshakestate = handshakestatesetcs(hs_1127,cs2_1129) in
        {618}let v_1131: bitstring = catch-fail(handshakestateunpack(hs_1130)) in
        {619}let v_1132: bitstring = catch-fail((empty,empty,empty)) in
        {620}let v_1133: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1131))) in
        {621}let v_1134: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1133))) in
        {622}let v_1135: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1134),2-proj-2-tuple(v_1134),3-proj-3-tuple(v_1133),msg_d(bob,charlie,sid))) in
        {623}let v_1136: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1133))) in
        {624}let v_1137: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1134))) && success?(1-proj-3-tuple(v_1133))) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-2-tuple(v_1136))))) then cipherstatepack(1-proj-2-tuple(v_1136),increment_nonce(2-proj-2-tuple(v_1134))) else fail-any) else fail-any)) in
        {625}let v_1138: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1133)) && success?(1-proj-3-tuple(v_1133))) then (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-2-tuple(v_1134))))) then (if not-caught-fail(v_1135) then (if not-caught-fail(v_1137) then (v_1137,v_1135) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {626}let v_1139: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1138),2-proj-3-tuple(v_1133),3-proj-3-tuple(v_1133)))) in
        {627}let v_1140: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1138)) && success?(symmetricstatepack(1-proj-2-tuple(v_1138),2-proj-3-tuple(v_1133),3-proj-3-tuple(v_1133)))) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-3-tuple(v_1139))))) then symmetricstatepack(1-proj-3-tuple(v_1139),2-proj-3-tuple(v_1139),hash(3-proj-3-tuple(v_1139),2-proj-2-tuple(v_1138))) else fail-any) else fail-any)) in
        {628}let v_1141: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1131)) then (if (not-caught-fail(v_1133) && success?(is-true(success?(1-proj-3-tuple(v_1133))))) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-2-tuple(v_1138))))) then (if not-caught-fail(v_1140) then (v_1140,2-proj-2-tuple(v_1138)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {629}let v_1142: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1141),2-proj-7-tuple(v_1131),3-proj-7-tuple(v_1131),4-proj-7-tuple(v_1131),5-proj-7-tuple(v_1131),6-proj-7-tuple(v_1131),7-proj-7-tuple(v_1131))) in
        {630}let v_1143: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1132),2-proj-3-tuple(v_1132),2-proj-2-tuple(v_1141))) in
        {631}let (hs_1144: handshakestate,message_d_1145: bitstring) = (if (not-caught-fail(v_1131) && success?(is-true(success?(1-proj-7-tuple(v_1131))))) then (if (not-caught-fail(v_1132) && success?(is-true(success?(1-proj-3-tuple(v_1132))))) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then (if not-caught-fail(v_1142) then (if not-caught-fail(v_1143) then (v_1142,v_1143) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {632}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {633}insert statestore(bob,charlie,sid,statepack_e(hs_1144,cs1_1128,handshakestategetcs(hs_1144)));
        {634}out(pub, message_d_1145)
    ) | (
        {636}!
        {656}get statestore(=bob,=charlie,=sid,statepack_e(hs_1146: handshakestate,cs1_1147: cipherstate,cs2_1148: cipherstate)) in
        {637}let hs_1149: handshakestate = handshakestatesetcs(hs_1146,cs1_1147) in
        {638}in(pub, message_e_1150: bitstring);
        {639}let v_1151: bitstring = catch-fail(handshakestateunpack(hs_1149)) in
        {640}let v_1152: bitstring = catch-fail(deconcat3(message_e_1150)) in
        {641}let v_1153: bool = catch-fail(true) in
        {642}let v_1154: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1151))) in
        {643}let v_1155: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1154))) in
        {644}let v_1156: aead = catch-fail(decrypt(1-proj-2-tuple(v_1155),2-proj-2-tuple(v_1155),3-proj-3-tuple(v_1154),3-proj-3-tuple(v_1152))) in
        {645}let v_1157: bitstring = catch-fail(aeadunpack(v_1156)) in
        {646}let v_1158: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1154))) in
        {647}let v_1159: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1155))) && success?(1-proj-3-tuple(v_1154))) then (if (not-caught-fail(v_1158) && success?(is-true(success?(1-proj-2-tuple(v_1158))))) then cipherstatepack(1-proj-2-tuple(v_1158),increment_nonce(2-proj-2-tuple(v_1155))) else fail-any) else fail-any)) in
        {648}let v_1160: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1152)) && (success?(3-proj-3-tuple(v_1154)) && success?(1-proj-3-tuple(v_1154)))) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-2-tuple(v_1155))))) then (if not-caught-fail(v_1156) then (if (not-caught-fail(v_1157) && success?(is-true(success?(1-proj-3-tuple(v_1157))))) then (if not-caught-fail(v_1159) then (v_1159,3-proj-3-tuple(v_1157),1-proj-3-tuple(v_1157)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {649}let v_1161: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1160),2-proj-3-tuple(v_1154),3-proj-3-tuple(v_1154)))) in
        {650}let v_1162: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1152)) && success?(symmetricstatepack(1-proj-3-tuple(v_1160),2-proj-3-tuple(v_1154),3-proj-3-tuple(v_1154)))) then (if (not-caught-fail(v_1161) && success?(is-true(success?(1-proj-3-tuple(v_1161))))) then symmetricstatepack(1-proj-3-tuple(v_1161),2-proj-3-tuple(v_1161),hash(3-proj-3-tuple(v_1161),3-proj-3-tuple(v_1152))) else fail-any) else fail-any)) in
        {651}let v_1163: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1152)) && success?(1-proj-7-tuple(v_1151))) then (if (not-caught-fail(v_1154) && success?(is-true(success?(1-proj-3-tuple(v_1154))))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-3-tuple(v_1160))))) then (if not-caught-fail(v_1162) then (v_1162,2-proj-3-tuple(v_1160),3-proj-3-tuple(v_1160)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {652}let v_1164: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1163),2-proj-7-tuple(v_1151),3-proj-7-tuple(v_1151),4-proj-7-tuple(v_1151),5-proj-7-tuple(v_1151),6-proj-7-tuple(v_1151),7-proj-7-tuple(v_1151))) in
        {653}let (hs_1165: handshakestate,plaintext_e_1166: bitstring,valid_1167: bool) = (if (not-caught-fail(v_1151) && success?(is-true(success?(1-proj-7-tuple(v_1151))))) then (if (not-caught-fail(v_1152) && success?(is-true(success?(1-proj-3-tuple(v_1152))))) then (if not-caught-fail(v_1153) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-3-tuple(v_1163))))) then (if (v_1153 && 3-proj-3-tuple(v_1163)) then (if not-caught-fail(v_1164) then (v_1164,2-proj-3-tuple(v_1163),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {654}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1166);
        {655}event RecvEnd(valid_1167)
    ) | (
        {657}event LeakS(phase0,bob);
        {658}out(pub, key_s(bob))
    ) | (
        {659}phase 1;
        {660}event LeakS(phase1,bob);
        {661}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 195 rules in the queue.
400 rules inserted. The rule base contains 398 rules. 20 rules in the queue.
600 rules inserted. The rule base contains 579 rules. 201 rules in the queue.
800 rules inserted. The rule base contains 765 rules. 56 rules in the queue.
1000 rules inserted. The rule base contains 963 rules. 359 rules in the queue.
1200 rules inserted. The rule base contains 1134 rules. 332 rules in the queue.
1400 rules inserted. The rule base contains 1297 rules. 310 rules in the queue.
1600 rules inserted. The rule base contains 1479 rules. 425 rules in the queue.
1800 rules inserted. The rule base contains 1633 rules. 397 rules in the queue.
2000 rules inserted. The rule base contains 1797 rules. 347 rules in the queue.
2200 rules inserted. The rule base contains 1955 rules. 343 rules in the queue.
2400 rules inserted. The rule base contains 2137 rules. 364 rules in the queue.
2600 rules inserted. The rule base contains 2238 rules. 373 rules in the queue.
2800 rules inserted. The rule base contains 2373 rules. 412 rules in the queue.
3000 rules inserted. The rule base contains 2541 rules. 482 rules in the queue.
3200 rules inserted. The rule base contains 2661 rules. 456 rules in the queue.
3400 rules inserted. The rule base contains 2783 rules. 441 rules in the queue.
3600 rules inserted. The rule base contains 2915 rules. 456 rules in the queue.
3800 rules inserted. The rule base contains 3050 rules. 478 rules in the queue.
4000 rules inserted. The rule base contains 3123 rules. 456 rules in the queue.
4200 rules inserted. The rule base contains 3208 rules. 431 rules in the queue.
4400 rules inserted. The rule base contains 3335 rules. 390 rules in the queue.
4600 rules inserted. The rule base contains 3483 rules. 396 rules in the queue.
4800 rules inserted. The rule base contains 3628 rules. 417 rules in the queue.
5000 rules inserted. The rule base contains 3729 rules. 406 rules in the queue.
5200 rules inserted. The rule base contains 3828 rules. 359 rules in the queue.
5400 rules inserted. The rule base contains 3942 rules. 328 rules in the queue.
5600 rules inserted. The rule base contains 4058 rules. 325 rules in the queue.
5800 rules inserted. The rule base contains 4156 rules. 315 rules in the queue.
6000 rules inserted. The rule base contains 4250 rules. 258 rules in the queue.
6200 rules inserted. The rule base contains 4405 rules. 243 rules in the queue.
6400 rules inserted. The rule base contains 4568 rules. 276 rules in the queue.
6600 rules inserted. The rule base contains 4727 rules. 299 rules in the queue.
6800 rules inserted. The rule base contains 4875 rules. 338 rules in the queue.
7000 rules inserted. The rule base contains 4973 rules. 363 rules in the queue.
7200 rules inserted. The rule base contains 5132 rules. 353 rules in the queue.
7400 rules inserted. The rule base contains 5281 rules. 366 rules in the queue.
7600 rules inserted. The rule base contains 5458 rules. 340 rules in the queue.
7800 rules inserted. The rule base contains 5589 rules. 322 rules in the queue.
8000 rules inserted. The rule base contains 5714 rules. 304 rules in the queue.
8200 rules inserted. The rule base contains 5891 rules. 335 rules in the queue.
8400 rules inserted. The rule base contains 6018 rules. 293 rules in the queue.
8600 rules inserted. The rule base contains 6132 rules. 335 rules in the queue.
8800 rules inserted. The rule base contains 6269 rules. 357 rules in the queue.
9000 rules inserted. The rule base contains 6410 rules. 343 rules in the queue.
9200 rules inserted. The rule base contains 6549 rules. 327 rules in the queue.
9400 rules inserted. The rule base contains 6673 rules. 288 rules in the queue.
9600 rules inserted. The rule base contains 6775 rules. 248 rules in the queue.
9800 rules inserted. The rule base contains 6895 rules. 202 rules in the queue.
10000 rules inserted. The rule base contains 7024 rules. 234 rules in the queue.
10200 rules inserted. The rule base contains 7154 rules. 197 rules in the queue.
10400 rules inserted. The rule base contains 7303 rules. 119 rules in the queue.
10600 rules inserted. The rule base contains 7350 rules. 59 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_432497432]),msg_a(alice,charlie,sid[!1 = @sid_432497432]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497433]),msg_a(alice,charlie,sid[!1 = @sid_432497432])))
Abbreviations:
sid_432497468 = sid[!1 = @sid_432497458]
sid_432497469 = sid[!1 = @sid_432497440]

1. The entry statestore(bob,alice,sid_432497468,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_432497468,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_432497469,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {182}.
table(statestore(alice,charlie,sid_432497469,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_432497469,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {205}.
The event SendMsg(alice,charlie,stagepack_a(sid_432497469),msg_a(alice,charlie,sid_432497469)) may be executed at {202}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g))),msg_a(alice,charlie,sid_432497469))) may be sent on channel pub at output {204}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g))),msg_a(alice,charlie,sid_432497469)))).

4. The entry statestore(bob,alice,sid_432497468,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) that may be in a table by 1 may be read at get {368}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g))),msg_a(alice,charlie,sid_432497469))) that may be sent on channel pub by 3 may be received at input {347}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_432497469),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_432497468),msg_a(alice,charlie,sid_432497469)) may be executed at {366}.
end(RecvMsg(bob,alice,stagepack_a(sid_432497468),msg_a(alice,charlie,sid_432497469))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497472]),msg_a(alice,bob,sid[!1 = @sid_432497472]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497473]),msg_a(alice,bob,sid[!1 = @sid_432497472])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_432497476]),msg_a(alice,charlie,sid[!1 = @sid_432497476]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497477]),msg_a(alice,charlie,sid[!1 = @sid_432497476])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497486]),msg_a(alice,bob,sid[!1 = @sid_432497486]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497487]),msg_a(alice,bob,sid[!1 = @sid_432497486])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_432497490]),msg_a(alice,charlie,sid[!1 = @sid_432497490]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497491]),msg_a(alice,charlie,sid[!1 = @sid_432497490])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_432497504]),msg_a(alice,charlie,sid[!1 = @sid_432497504]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497505]),msg_a(alice,charlie,sid[!1 = @sid_432497504])))
Abbreviations:
sid_432497540 = sid[!1 = @sid_432497530]
sid_432497541 = sid[!1 = @sid_432497512]

1. The entry statestore(bob,alice,sid_432497540,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_432497540,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_432497541,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {182}.
table(statestore(alice,charlie,sid_432497541,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_432497541,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {205}.
The event SendMsg(alice,charlie,stagepack_a(sid_432497541),msg_a(alice,charlie,sid_432497541)) may be executed at {202}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g))),msg_a(alice,charlie,sid_432497541))) may be sent on channel pub at output {204}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g))),msg_a(alice,charlie,sid_432497541)))).

4. The entry statestore(bob,alice,sid_432497540,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) that may be in a table by 1 may be read at get {368}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g))),msg_a(alice,charlie,sid_432497541))) that may be sent on channel pub by 3 may be received at input {347}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_432497541),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_432497540),msg_a(alice,charlie,sid_432497541)) may be executed at {366}.
end(RecvMsg(bob,alice,stagepack_a(sid_432497540),msg_a(alice,charlie,sid_432497541))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_432497548]),msg_a(alice,charlie,sid[!1 = @sid_432497548]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_432497549]),msg_a(alice,charlie,sid[!1 = @sid_432497548])))
Abbreviations:
sid_432497584 = sid[!1 = @sid_432497574]
sid_432497585 = sid[!1 = @sid_432497556]

1. The entry statestore(bob,alice,sid_432497584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_432497584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_432497585,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {182}.
table(statestore(alice,charlie,sid_432497585,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_432497585,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {205}.
The event SendMsg(alice,charlie,stagepack_a(sid_432497585),msg_a(alice,charlie,sid_432497585)) may be executed at {202}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g))),msg_a(alice,charlie,sid_432497585))) may be sent on channel pub at output {204}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g))),msg_a(alice,charlie,sid_432497585)))).

4. The entry statestore(bob,alice,sid_432497584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) that may be in a table by 1 may be read at get {368}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g))),msg_a(alice,charlie,sid_432497585))) that may be sent on channel pub by 3 may be received at input {347}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_432497585),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_432497584),msg_a(alice,charlie,sid_432497585)) may be executed at {366}.
end(RecvMsg(bob,alice,stagepack_a(sid_432497584),msg_a(alice,charlie,sid_432497585))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497588]),msg_a(alice,bob,sid[!1 = @sid_432497588]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_432497588]))
Abbreviations:
sid_432497645 = sid[!1 = @sid_432497620]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_432497645,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_432497645,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_432497645,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432497645),msg_a(alice,bob,sid_432497645)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))).

7. The message validkey(dhexp_real(key_s(alice),g)) may be sent on channel pub at output {6}.
mess(pub,validkey(dhexp_real(key_s(alice),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(alice),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(alice),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497645),g))),msg_a(alice,bob,sid_432497645)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_432497645).
attacker(msg_a(alice,bob,sid_432497645)).

18. By 17, the attacker may know msg_a(alice,bob,sid_432497645).
So the attacker may know msg_a(alice,bob,sid_432497645) in phase 1.
attacker_p1(msg_a(alice,bob,sid_432497645)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497648]),msg_a(alice,bob,sid[!1 = @sid_432497648]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_432497648]))
Abbreviations:
sid_432497706 = sid[!1 = @sid_432497681]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_432497706,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_432497706,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_432497706,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432497706),msg_a(alice,bob,sid_432497706)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))).

7. The message validkey(dhexp_real(key_s(alice),g)) may be sent on channel pub at output {6}.
mess(pub,validkey(dhexp_real(key_s(alice),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(alice),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(alice),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497706),g))),msg_a(alice,bob,sid_432497706)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_432497706).
attacker(msg_a(alice,bob,sid_432497706)).

18. By 17, the attacker may know msg_a(alice,bob,sid_432497706).
So the attacker may know msg_a(alice,bob,sid_432497706) in phase 1.
attacker_p1(msg_a(alice,bob,sid_432497706)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497709]),msg_a(alice,bob,sid[!1 = @sid_432497709]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_432497709]))
Abbreviations:
sid_432497768 = sid[!1 = @sid_432497743]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_432497768,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_432497768,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_432497768,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432497768),msg_a(alice,bob,sid_432497768)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))).

7. The message validkey(dhexp_real(key_s(alice),g)) may be sent on channel pub at output {6}.
mess(pub,validkey(dhexp_real(key_s(alice),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(alice),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(alice),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497768),g))),msg_a(alice,bob,sid_432497768)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_432497768).
attacker(msg_a(alice,bob,sid_432497768)).

18. By 17, the attacker may know msg_a(alice,bob,sid_432497768).
So the attacker may know msg_a(alice,bob,sid_432497768) in phase 1.
attacker_p1(msg_a(alice,bob,sid_432497768)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497771]),msg_a(alice,bob,sid[!1 = @sid_432497771]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_432497771]))
Abbreviations:
sid_432497828 = sid[!1 = @sid_432497803]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_432497828,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_432497828,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_432497828,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432497828),msg_a(alice,bob,sid_432497828)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))).

7. The message validkey(dhexp_real(key_s(alice),g)) may be sent on channel pub at output {6}.
mess(pub,validkey(dhexp_real(key_s(alice),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(alice),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(alice),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(alice),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(alice),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432497828),g))),msg_a(alice,bob,sid_432497828)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_432497828).
attacker(msg_a(alice,bob,sid_432497828)).

18. By 17, the attacker may know msg_a(alice,bob,sid_432497828).
So the attacker may know msg_a(alice,bob,sid_432497828) in phase 1.
attacker_p1(msg_a(alice,bob,sid_432497828)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497831]),msg_b(bob,alice,sid[!1 = @sid_432497831]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497832]),msg_a(alice,bob,sid[!1 = @sid_432497832]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_432497832]),msg_b(bob,alice,sid[!1 = @sid_432497831])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497840]),msg_b(bob,alice,sid[!1 = @sid_432497840]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497841]),msg_a(alice,bob,sid[!1 = @sid_432497841]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_432497841]),msg_b(bob,alice,sid[!1 = @sid_432497840])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497850]),msg_b(bob,alice,sid[!1 = @sid_432497850]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497851]),msg_a(alice,bob,sid[!1 = @sid_432497851]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_432497851]),msg_b(bob,alice,sid[!1 = @sid_432497850])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497860]),msg_b(bob,alice,sid[!1 = @sid_432497860]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497861]),msg_a(alice,bob,sid[!1 = @sid_432497861]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_432497861]),msg_b(bob,alice,sid[!1 = @sid_432497860])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497869]),msg_b(bob,alice,sid[!1 = @sid_432497869]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497870]),msg_a(alice,bob,sid[!1 = @sid_432497870]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_432497870]),msg_b(bob,alice,sid[!1 = @sid_432497869])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497893]),msg_c(alice,bob,sid[!1 = @sid_432497893]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497894]),msg_b(bob,alice,sid[!1 = @sid_432497894]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497893]),msg_a(alice,bob,sid[!1 = @sid_432497893]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_432497894]),msg_c(alice,bob,sid[!1 = @sid_432497893])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497902]),msg_c(alice,bob,sid[!1 = @sid_432497902]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497903]),msg_b(bob,alice,sid[!1 = @sid_432497903]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497902]),msg_a(alice,bob,sid[!1 = @sid_432497902]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_432497903]),msg_c(alice,bob,sid[!1 = @sid_432497902])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497912]),msg_c(alice,bob,sid[!1 = @sid_432497912]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497913]),msg_b(bob,alice,sid[!1 = @sid_432497913]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497912]),msg_a(alice,bob,sid[!1 = @sid_432497912]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_432497913]),msg_c(alice,bob,sid[!1 = @sid_432497912])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497922]),msg_c(alice,bob,sid[!1 = @sid_432497922]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497923]),msg_b(bob,alice,sid[!1 = @sid_432497923]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497922]),msg_a(alice,bob,sid[!1 = @sid_432497922]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_432497923]),msg_c(alice,bob,sid[!1 = @sid_432497922])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497931]),msg_c(alice,bob,sid[!1 = @sid_432497931]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497932]),msg_b(bob,alice,sid[!1 = @sid_432497932]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497931]),msg_a(alice,bob,sid[!1 = @sid_432497931]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_432497932]),msg_c(alice,bob,sid[!1 = @sid_432497931])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432497955]),msg_d(bob,alice,sid[!1 = @sid_432497955]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497956]),msg_c(alice,bob,sid[!1 = @sid_432497956]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497955]),msg_b(bob,alice,sid[!1 = @sid_432497955]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497956]),msg_a(alice,bob,sid[!1 = @sid_432497956]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_432497956]),msg_d(bob,alice,sid[!1 = @sid_432497955])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432497964]),msg_d(bob,alice,sid[!1 = @sid_432497964]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497965]),msg_c(alice,bob,sid[!1 = @sid_432497965]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497964]),msg_b(bob,alice,sid[!1 = @sid_432497964]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497965]),msg_a(alice,bob,sid[!1 = @sid_432497965]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_432497965]),msg_d(bob,alice,sid[!1 = @sid_432497964])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432497974]),msg_d(bob,alice,sid[!1 = @sid_432497974]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497975]),msg_c(alice,bob,sid[!1 = @sid_432497975]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497974]),msg_b(bob,alice,sid[!1 = @sid_432497974]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497975]),msg_a(alice,bob,sid[!1 = @sid_432497975]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_432497975]),msg_d(bob,alice,sid[!1 = @sid_432497974])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1277,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432497984]),msg_d(bob,alice,sid[!1 = @sid_432497984]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497985]),msg_c(alice,bob,sid[!1 = @sid_432497985]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497984]),msg_b(bob,alice,sid[!1 = @sid_432497984]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497985]),msg_a(alice,bob,sid[!1 = @sid_432497985]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_432497985]),msg_d(bob,alice,sid[!1 = @sid_432497984])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432497993]),msg_d(bob,alice,sid[!1 = @sid_432497993]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432497994]),msg_c(alice,bob,sid[!1 = @sid_432497994]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432497993]),msg_b(bob,alice,sid[!1 = @sid_432497993]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432497994]),msg_a(alice,bob,sid[!1 = @sid_432497994]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_432497994]),msg_d(bob,alice,sid[!1 = @sid_432497993])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498017]),msg_e(alice,bob,sid[!1 = @sid_432498017]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498018]),msg_d(bob,alice,sid[!1 = @sid_432498018]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498017]),msg_c(alice,bob,sid[!1 = @sid_432498017]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498018]),msg_b(bob,alice,sid[!1 = @sid_432498018]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498017]),msg_a(alice,bob,sid[!1 = @sid_432498017]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_432498018]),msg_e(alice,bob,sid[!1 = @sid_432498017])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498026]),msg_e(alice,bob,sid[!1 = @sid_432498026]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498027]),msg_d(bob,alice,sid[!1 = @sid_432498027]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498026]),msg_c(alice,bob,sid[!1 = @sid_432498026]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498027]),msg_b(bob,alice,sid[!1 = @sid_432498027]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498026]),msg_a(alice,bob,sid[!1 = @sid_432498026]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_432498027]),msg_e(alice,bob,sid[!1 = @sid_432498026])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498036]),msg_e(alice,bob,sid[!1 = @sid_432498036]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498037]),msg_d(bob,alice,sid[!1 = @sid_432498037]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498036]),msg_c(alice,bob,sid[!1 = @sid_432498036]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498037]),msg_b(bob,alice,sid[!1 = @sid_432498037]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498036]),msg_a(alice,bob,sid[!1 = @sid_432498036]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_432498037]),msg_e(alice,bob,sid[!1 = @sid_432498036])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1277,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498046]),msg_e(alice,bob,sid[!1 = @sid_432498046]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498047]),msg_d(bob,alice,sid[!1 = @sid_432498047]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498046]),msg_c(alice,bob,sid[!1 = @sid_432498046]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498047]),msg_b(bob,alice,sid[!1 = @sid_432498047]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498046]),msg_a(alice,bob,sid[!1 = @sid_432498046]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_432498047]),msg_e(alice,bob,sid[!1 = @sid_432498046])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498055]),msg_e(alice,bob,sid[!1 = @sid_432498055]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498056]),msg_d(bob,alice,sid[!1 = @sid_432498056]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498055]),msg_c(alice,bob,sid[!1 = @sid_432498055]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498056]),msg_b(bob,alice,sid[!1 = @sid_432498056]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498055]),msg_a(alice,bob,sid[!1 = @sid_432498055]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_432498056]),msg_e(alice,bob,sid[!1 = @sid_432498055])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_432498077]),msg_e(alice,bob,sid[!1 = @sid_432498077]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_432498078]),msg_d(bob,alice,sid[!1 = @sid_432498078]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_432498077]),msg_c(alice,bob,sid[!1 = @sid_432498077]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_432498078]),msg_b(bob,alice,sid[!1 = @sid_432498078]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_432498077]),msg_a(alice,bob,sid[!1 = @sid_432498077]))) -> end(RecvEnd(true))
Abbreviations:
sid_432498478 = sid[!1 = @sid_432498467]
sid_432498479 = sid[!1 = @sid_432498397]

1. The entry statestore(bob,alice,sid_432498478,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_432498478,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false)))).

2. The entry statestore(alice,bob,sid_432498479,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_432498479,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_432498479,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432498479),msg_a(alice,bob,sid_432498479)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))).

4. The entry statestore(bob,alice,sid_432498478,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),empty,empty,false))) that may be in a table by 1 may be read at get {368}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))) that may be sent on channel pub by 3 may be received at input {347}.
We have validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_432498478,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false))) may be inserted in a table at insert {367}.
table(statestore(bob,alice,sid_432498478,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false)))).

5. The entry statestore(bob,alice,sid_432498478,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false))) that may be in a table by 4 may be read at get {416}.
The event SendMsg(bob,alice,stagepack_b(sid_432498478),msg_b(bob,alice,sid_432498478)) may be executed at {413}.
So the entry statestore(bob,alice,sid_432498478,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false))) may be inserted in a table at insert {414}.
table(statestore(bob,alice,sid_432498478,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false)))).

6. The entry statestore(alice,bob,sid_432498479,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_432498479),msg_a(alice,bob,sid_432498479)) may be executed at {38}.
So the entry statestore(alice,bob,sid_432498479,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),empty,empty,empty,true))) may be inserted in a table at insert {39}.
table(statestore(alice,bob,sid_432498479,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),empty,empty,empty,true)))).

7. The entry statestore(bob,alice,sid_432498478,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false))) that may be in a table by 4 may be read at get {416}.
The event SendMsg(bob,alice,stagepack_b(sid_432498478),msg_b(bob,alice,sid_432498478)) may be executed at {413}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))) may be sent on channel pub at output {415}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))).

8. The entry statestore(alice,bob,sid_432498479,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))) that may be sent on channel pub by 7 may be received at input {42}.
So the entry statestore(alice,bob,sid_432498479,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,sid_432498479,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true)))).

9. The entry statestore(alice,bob,sid_432498479,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true))) that may be in a table by 8 may be read at get {122}.
The event SendMsg(alice,bob,stagepack_c(sid_432498479),msg_c(alice,bob,sid_432498479)) may be executed at {119}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))) may be sent on channel pub at output {121}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))).

10. The entry statestore(bob,alice,sid_432498478,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false))) that may be in a table by 5 may be read at get {450}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))) that may be sent on channel pub by 9 may be received at input {417}.
So the entry statestore(bob,alice,sid_432498478,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce))) may be inserted in a table at insert {449}.
table(statestore(bob,alice,sid_432498478,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_432498478,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce))) that may be in a table by 10 may be read at get {470}.
The event SendMsg(bob,alice,stagepack_d(sid_432498478),msg_d(bob,alice,sid_432498478)) may be executed at {467}.
So the entry statestore(bob,alice,sid_432498478,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {468}.
table(statestore(bob,alice,sid_432498478,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_432498479,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true))) that may be in a table by 8 may be read at get {122}.
The event SendMsg(alice,bob,stagepack_c(sid_432498479),msg_c(alice,bob,sid_432498479)) may be executed at {119}.
So the entry statestore(alice,bob,sid_432498479,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce))) may be inserted in a table at insert {120}.
table(statestore(alice,bob,sid_432498479,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_432498478,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce))) that may be in a table by 10 may be read at get {470}.
The event SendMsg(bob,alice,stagepack_d(sid_432498478),msg_d(bob,alice,sid_432498478)) may be executed at {467}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478))) may be sent on channel pub at output {469}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))).

14. The entry statestore(alice,bob,sid_432498479,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce))) that may be in a table by 12 may be read at get {143}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478))) that may be sent on channel pub by 13 may be received at input {125}.
So the entry statestore(alice,bob,sid_432498479,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {142}.
table(statestore(alice,bob,sid_432498479,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_432498479,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),key_e(alice,bob,sid_432498479)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {162}.
The event SendMsg(alice,bob,stagepack_e(sid_432498479),msg_e(alice,bob,sid_432498479)) may be executed at {160}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478))),msg_e(alice,bob,sid_432498479))) may be sent on channel pub at output {161}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478))),msg_e(alice,bob,sid_432498479)))).

16. The entry statestore(bob,alice,sid_432498478,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_432498478),g)),key_e(bob,alice,sid_432498478)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {491}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_e(alice,bob,sid_432498479),dhexp_real(key_s(bob),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_432498478),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_432498478),dhexp_real(key_e(alice,bob,sid_432498479),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(alice),g))),validkey(dhexp_real(key_e(alice,bob,sid_432498479),g))),msg_a(alice,bob,sid_432498479))),validkey(dhexp_real(key_e(bob,alice,sid_432498478),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_432498478))),msg_c(alice,bob,sid_432498479))),msg_d(bob,alice,sid_432498478))),msg_e(alice,bob,sid_432498479))) that may be sent on channel pub by 15 may be received at input {473}.
So event RecvEnd(true) may be executed at {490}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
