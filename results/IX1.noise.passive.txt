File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "IX1.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "IX1.noise.passive.pv", line 270, character 6:
Warning: identifier e rebound.
File "IX1.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 274, character 6:
Warning: identifier s rebound.
File "IX1.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 275, characters 26-27:
Warning: identifier ns rebound.
File "IX1.noise.passive.pv", line 276, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 276, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 284, character 6:
Warning: identifier e rebound.
File "IX1.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 290, character 6:
Warning: identifier s rebound.
File "IX1.noise.passive.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 291, characters 26-27:
Warning: identifier ns rebound.
File "IX1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 310, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 318, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 318, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 319, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "IX1.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 330, characters 26-27:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 330, characters 40-45:
Warning: identifier valid1 rebound.
File "IX1.noise.passive.pv", line 331, characters 6-7:
Warning: identifier rs rebound.
File "IX1.noise.passive.pv", line 332, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 334, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 342, characters 6-7:
Warning: identifier re rebound.
File "IX1.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 346, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 347, characters 26-27:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 347, characters 40-45:
Warning: identifier valid1 rebound.
File "IX1.noise.passive.pv", line 348, characters 6-7:
Warning: identifier rs rebound.
File "IX1.noise.passive.pv", line 349, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 351, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 362, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 567, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 568, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 318, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 318, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 319, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 559, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 561, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 553, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 301, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 301, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 302, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 547, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 342, characters 6-7:
Warning: identifier re rebound.
File "IX1.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 346, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 347, characters 26-27:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 347, characters 40-45:
Warning: identifier valid1 rebound.
File "IX1.noise.passive.pv", line 348, characters 6-7:
Warning: identifier rs rebound.
File "IX1.noise.passive.pv", line 349, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 351, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 540, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 270, character 6:
Warning: identifier e rebound.
File "IX1.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 274, character 6:
Warning: identifier s rebound.
File "IX1.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 275, characters 26-27:
Warning: identifier ns rebound.
File "IX1.noise.passive.pv", line 276, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 276, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 619, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 621, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 612, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 613, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 310, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 606, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 362, characters 7-8:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 599, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 284, character 6:
Warning: identifier e rebound.
File "IX1.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 290, character 6:
Warning: identifier s rebound.
File "IX1.noise.passive.pv", line 291, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 291, characters 26-27:
Warning: identifier ns rebound.
File "IX1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 292, characters 26-35:
Warning: identifier ciphertext rebound.
File "IX1.noise.passive.pv", line 293, characters 6-7:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "IX1.noise.passive.pv", line 593, characters 8-9:
Warning: identifier hs rebound.
File "IX1.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "IX1.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 330, characters 26-27:
Warning: identifier ne rebound.
File "IX1.noise.passive.pv", line 330, characters 40-45:
Warning: identifier valid1 rebound.
File "IX1.noise.passive.pv", line 331, characters 6-7:
Warning: identifier rs rebound.
File "IX1.noise.passive.pv", line 332, characters 7-8:
Warning: identifier ss rebound.
File "IX1.noise.passive.pv", line 334, characters 7-8:
Warning: identifier hs rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_573: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_573));
    (
        {6}let e_574: keypair = keypairpack(empty,empty) in
        {7}let rs_575: key = empty in
        {8}let re_576: key = empty in
        {9}let v_577: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_578: key = catch-fail(v_577) in
        {11}let v_579: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_580: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_577) then (if not-caught-fail(v_578) then (if not-caught-fail(v_579) then symmetricstatepack(v_579,v_578,v_577) else fail-any) else fail-any) else fail-any))) in
        {13}let v_581: symmetricstate = catch-fail((if success?((if not-caught-fail(v_577) then (if not-caught-fail(v_578) then (if not-caught-fail(v_579) then symmetricstatepack(v_579,v_578,v_577) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_580) && success?(is-true(success?(1-proj-3-tuple(v_580))))) then symmetricstatepack(1-proj-3-tuple(v_580),2-proj-3-tuple(v_580),hash(3-proj-3-tuple(v_580),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_581) then handshakestatepack(v_581,s_573,e_574,rs_575,re_576,empty,true) else fail-any) in
        {15}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {49}get statestore(=alice,=bob,=sid,statepack_a(hs_582: handshakestate)) in
        {16}let v_583: bitstring = catch-fail(handshakestateunpack(hs_582)) in
        {17}let v_584: bitstring = catch-fail((empty,empty,empty)) in
        {18}let v_585: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {19}let v_586: keypair = catch-fail((if not-caught-fail(v_585) then keypairpack(validkey(v_585),key_e(alice,bob,sid)) else fail-any)) in
        {20}let v_587: bitstring = catch-fail(getpublickey(v_586)) in
        {21}let v_588: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_583))) in
        {22}let v_589: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_583)) then (if (not-caught-fail(v_588) && success?(is-true(success?(1-proj-3-tuple(v_588))))) then symmetricstatepack(1-proj-3-tuple(v_588),2-proj-3-tuple(v_588),hash(3-proj-3-tuple(v_588),v_587)) else fail-any) else fail-any)) in
        {23}let v_590: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {24}let v_591: keypair = catch-fail((if not-caught-fail(v_590) then keypairpack(validkey(v_590),key_s(alice)) else fail-any)) in
        {25}let v_592: bitstring = catch-fail(symmetricstateunpack(v_589)) in
        {26}let v_593: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_592))) in
        {27}let v_594: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_593),2-proj-2-tuple(v_593),3-proj-3-tuple(v_592),getpublickey(v_591))) in
        {28}let v_595: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_592))) in
        {29}let v_596: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_593))) && success?(1-proj-3-tuple(v_592))) then (if (not-caught-fail(v_595) && success?(is-true(success?(1-proj-2-tuple(v_595))))) then cipherstatepack(1-proj-2-tuple(v_595),increment_nonce(2-proj-2-tuple(v_593))) else fail-any) else fail-any)) in
        {30}let v_597: bitstring = catch-fail((if (success?(getpublickey(v_591)) && (success?(3-proj-3-tuple(v_592)) && success?(1-proj-3-tuple(v_592)))) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-2-tuple(v_593))))) then (if not-caught-fail(v_594) then (if not-caught-fail(v_596) then (v_596,v_594) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_598: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_597),2-proj-3-tuple(v_592),3-proj-3-tuple(v_592)))) in
        {32}let v_599: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_597)) && success?(symmetricstatepack(1-proj-2-tuple(v_597),2-proj-3-tuple(v_592),3-proj-3-tuple(v_592)))) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then symmetricstatepack(1-proj-3-tuple(v_598),2-proj-3-tuple(v_598),hash(3-proj-3-tuple(v_598),2-proj-2-tuple(v_597))) else fail-any) else fail-any)) in
        {33}let v_600: bitstring = catch-fail((if success?(getpublickey(v_591)) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-3-tuple(v_592))))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-2-tuple(v_597))))) then (if not-caught-fail(v_599) then (v_599,2-proj-2-tuple(v_597)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {34}let v_601: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_600))) in
        {35}let v_602: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_601))) in
        {36}let v_603: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_602),2-proj-2-tuple(v_602),3-proj-3-tuple(v_601),msg_a(alice,bob,sid))) in
        {37}let v_604: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_601))) in
        {38}let v_605: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_602))) && success?(1-proj-3-tuple(v_601))) then (if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-2-tuple(v_604))))) then cipherstatepack(1-proj-2-tuple(v_604),increment_nonce(2-proj-2-tuple(v_602))) else fail-any) else fail-any)) in
        {39}let v_606: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_601)) && success?(1-proj-3-tuple(v_601))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then (if not-caught-fail(v_603) then (if not-caught-fail(v_605) then (v_605,v_603) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {40}let v_607: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_606),2-proj-3-tuple(v_601),3-proj-3-tuple(v_601)))) in
        {41}let v_608: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_606)) && success?(symmetricstatepack(1-proj-2-tuple(v_606),2-proj-3-tuple(v_601),3-proj-3-tuple(v_601)))) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then symmetricstatepack(1-proj-3-tuple(v_607),2-proj-3-tuple(v_607),hash(3-proj-3-tuple(v_607),2-proj-2-tuple(v_606))) else fail-any) else fail-any)) in
        {42}let v_609: bitstring = catch-fail((if success?(1-proj-2-tuple(v_600)) then (if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-3-tuple(v_601))))) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-2-tuple(v_606))))) then (if not-caught-fail(v_608) then (v_608,2-proj-2-tuple(v_606)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {43}let v_610: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_609),v_591,v_586,4-proj-7-tuple(v_583),5-proj-7-tuple(v_583),6-proj-7-tuple(v_583),7-proj-7-tuple(v_583))) in
        {44}let v_611: bitstring = catch-fail(concat3(v_587,2-proj-2-tuple(v_600),2-proj-2-tuple(v_609))) in
        {45}let (hs_612: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_583) && success?(is-true(success?(1-proj-7-tuple(v_583))))) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-3-tuple(v_584))))) then (if not-caught-fail(v_586) then (if not-caught-fail(v_587) then (if not-caught-fail(v_589) then (if not-caught-fail(v_591) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-2-tuple(v_600))))) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-2-tuple(v_609))))) then (if not-caught-fail(v_610) then (if not-caught-fail(v_611) then (v_610,v_611) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {46}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {47}insert statestore(alice,bob,sid,statepack_b(hs_612));
        {48}out(pub, message_a)
    ) | (
        {97}get statestore(=alice,=bob,=sid,statepack_b(hs_613: handshakestate)) in
        {50}in(pub, message_b: bitstring);
        {51}let v_614: bitstring = catch-fail(handshakestateunpack(hs_613)) in
        {52}let v_615: bitstring = catch-fail(deconcat3(message_b)) in
        {53}let v_616: bool = catch-fail(true) in
        {54}let v_617: key = catch-fail(1-proj-3-tuple(v_615)) in
        {55}let v_618: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_614))) in
        {56}let v_619: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_614)) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then symmetricstatepack(1-proj-3-tuple(v_618),2-proj-3-tuple(v_618),hash(3-proj-3-tuple(v_618),v_617)) else fail-any) else fail-any)) in
        {57}let v_620: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_614))) in
        {58}let v_621: bitstring = catch-fail(symmetricstateunpack(v_619)) in
        {59}let v_622: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_621),(if success?(3-proj-7-tuple(v_614)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),v_617) else fail-any) else fail-any))) in
        {60}let v_623: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_621),(if success?(3-proj-7-tuple(v_614)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),v_617) else fail-any) else fail-any))) in
        {61}let v_624: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_621),(if success?(3-proj-7-tuple(v_614)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),v_617) else fail-any) else fail-any))) in
        {62}let v_625: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_614)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),v_617) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_621))) then (if not-caught-fail(v_622) then (if not-caught-fail(v_623) then (if not-caught-fail(v_624) then (v_622,v_623,v_624) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {63}let v_626: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_614)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),v_617) else fail-any) else fail-any)) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_625)) then cipherstatepack(2-proj-3-tuple(v_625),minnonce) else fail-any),1-proj-3-tuple(v_625),3-proj-3-tuple(v_621)) else fail-any) else fail-any) else fail-any)) in
        {64}let v_627: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_614))) in
        {65}let v_628: bitstring = catch-fail(symmetricstateunpack(v_626)) in
        {66}let v_629: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_628),(if success?(2-proj-7-tuple(v_614)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then dhexp(2-proj-2-tuple(v_627),v_617) else fail-any) else fail-any))) in
        {67}let v_630: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_628),(if success?(2-proj-7-tuple(v_614)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then dhexp(2-proj-2-tuple(v_627),v_617) else fail-any) else fail-any))) in
        {68}let v_631: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_628),(if success?(2-proj-7-tuple(v_614)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then dhexp(2-proj-2-tuple(v_627),v_617) else fail-any) else fail-any))) in
        {69}let v_632: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_614)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then dhexp(2-proj-2-tuple(v_627),v_617) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_628))) then (if not-caught-fail(v_629) then (if not-caught-fail(v_630) then (if not-caught-fail(v_631) then (v_629,v_630,v_631) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {70}let v_633: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_614)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then dhexp(2-proj-2-tuple(v_627),v_617) else fail-any) else fail-any)) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-3-tuple(v_628))))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-3-tuple(v_632))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_632)) then cipherstatepack(2-proj-3-tuple(v_632),minnonce) else fail-any),1-proj-3-tuple(v_632),3-proj-3-tuple(v_628)) else fail-any) else fail-any) else fail-any)) in
        {71}let v_634: bitstring = catch-fail(symmetricstateunpack(v_633)) in
        {72}let v_635: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_634))) in
        {73}let v_636: aead = catch-fail(decrypt(1-proj-2-tuple(v_635),2-proj-2-tuple(v_635),3-proj-3-tuple(v_634),2-proj-3-tuple(v_615))) in
        {74}let v_637: bitstring = catch-fail(aeadunpack(v_636)) in
        {75}let v_638: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_634))) in
        {76}let v_639: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_635))) && success?(1-proj-3-tuple(v_634))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then cipherstatepack(1-proj-2-tuple(v_638),increment_nonce(2-proj-2-tuple(v_635))) else fail-any) else fail-any)) in
        {77}let v_640: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_615)) && (success?(3-proj-3-tuple(v_634)) && success?(1-proj-3-tuple(v_634)))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then (if not-caught-fail(v_636) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-3-tuple(v_637))))) then (if not-caught-fail(v_639) then (v_639,3-proj-3-tuple(v_637),1-proj-3-tuple(v_637)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {78}let v_641: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_640),2-proj-3-tuple(v_634),3-proj-3-tuple(v_634)))) in
        {79}let v_642: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_615)) && success?(symmetricstatepack(1-proj-3-tuple(v_640),2-proj-3-tuple(v_634),3-proj-3-tuple(v_634)))) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-3-tuple(v_641))))) then symmetricstatepack(1-proj-3-tuple(v_641),2-proj-3-tuple(v_641),hash(3-proj-3-tuple(v_641),2-proj-3-tuple(v_615))) else fail-any) else fail-any)) in
        {80}let v_643: bitstring = catch-fail((if success?(2-proj-3-tuple(v_615)) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-3-tuple(v_640))))) then (if not-caught-fail(v_642) then (v_642,2-proj-3-tuple(v_640),3-proj-3-tuple(v_640)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {81}let v_644: key = catch-fail(2-proj-3-tuple(v_643)) in
        {82}let v_645: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_643))) in
        {83}let v_646: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_645))) in
        {84}let v_647: aead = catch-fail(decrypt(1-proj-2-tuple(v_646),2-proj-2-tuple(v_646),3-proj-3-tuple(v_645),3-proj-3-tuple(v_615))) in
        {85}let v_648: bitstring = catch-fail(aeadunpack(v_647)) in
        {86}let v_649: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_645))) in
        {87}let v_650: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_646))) && success?(1-proj-3-tuple(v_645))) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-2-tuple(v_649))))) then cipherstatepack(1-proj-2-tuple(v_649),increment_nonce(2-proj-2-tuple(v_646))) else fail-any) else fail-any)) in
        {88}let v_651: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_615)) && (success?(3-proj-3-tuple(v_645)) && success?(1-proj-3-tuple(v_645)))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then (if not-caught-fail(v_647) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if not-caught-fail(v_650) then (v_650,3-proj-3-tuple(v_648),1-proj-3-tuple(v_648)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {89}let v_652: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_651),2-proj-3-tuple(v_645),3-proj-3-tuple(v_645)))) in
        {90}let v_653: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_615)) && success?(symmetricstatepack(1-proj-3-tuple(v_651),2-proj-3-tuple(v_645),3-proj-3-tuple(v_645)))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then symmetricstatepack(1-proj-3-tuple(v_652),2-proj-3-tuple(v_652),hash(3-proj-3-tuple(v_652),3-proj-3-tuple(v_615))) else fail-any) else fail-any)) in
        {91}let v_654: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_615)) && success?(1-proj-3-tuple(v_643))) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then (if not-caught-fail(v_653) then (v_653,2-proj-3-tuple(v_651),3-proj-3-tuple(v_651)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {92}let v_655: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {93}let v_656: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_654),2-proj-7-tuple(v_614),3-proj-7-tuple(v_614),v_644,v_617,6-proj-7-tuple(v_614),7-proj-7-tuple(v_614))) in
        {94}let (hs_657: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-7-tuple(v_614))))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-3-tuple(v_615))))) then (if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (if not-caught-fail(v_619) then (if not-caught-fail(v_626) then (if not-caught-fail(v_633) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-3-tuple(v_643))))) then (if not-caught-fail(v_644) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then (if ((3-proj-3-tuple(v_643) && 3-proj-3-tuple(v_654)) && (v_644 = getpublickey((if not-caught-fail(v_655) then keypairpack(validkey(v_655),key_s(bob)) else fail-any)))) then (if not-caught-fail(v_656) then (v_656,2-proj-3-tuple(v_654),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {95}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {96}insert statestore(alice,bob,sid,statepack_c(hs_657))
    ) | (
        {130}get statestore(=alice,=bob,=sid,statepack_c(hs_658: handshakestate)) in
        {98}let v_659: bitstring = catch-fail(handshakestateunpack(hs_658)) in
        {99}let v_660: bitstring = catch-fail((empty,empty,empty)) in
        {100}let v_661: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_659))) in
        {101}let v_662: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_659))) in
        {102}let v_663: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_662),(if (success?(4-proj-7-tuple(v_659)) && success?(3-proj-7-tuple(v_659))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then dhexp(2-proj-2-tuple(v_661),4-proj-7-tuple(v_659)) else fail-any) else fail-any))) in
        {103}let v_664: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_662),(if (success?(4-proj-7-tuple(v_659)) && success?(3-proj-7-tuple(v_659))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then dhexp(2-proj-2-tuple(v_661),4-proj-7-tuple(v_659)) else fail-any) else fail-any))) in
        {104}let v_665: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_662),(if (success?(4-proj-7-tuple(v_659)) && success?(3-proj-7-tuple(v_659))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then dhexp(2-proj-2-tuple(v_661),4-proj-7-tuple(v_659)) else fail-any) else fail-any))) in
        {105}let v_666: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_659)) && success?(3-proj-7-tuple(v_659))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then dhexp(2-proj-2-tuple(v_661),4-proj-7-tuple(v_659)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_662))) then (if not-caught-fail(v_663) then (if not-caught-fail(v_664) then (if not-caught-fail(v_665) then (v_663,v_664,v_665) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {106}let v_667: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_659)) && success?(3-proj-7-tuple(v_659))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then dhexp(2-proj-2-tuple(v_661),4-proj-7-tuple(v_659)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_659))) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-3-tuple(v_666))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_666)) then cipherstatepack(2-proj-3-tuple(v_666),minnonce) else fail-any),1-proj-3-tuple(v_666),3-proj-3-tuple(v_662)) else fail-any) else fail-any) else fail-any)) in
        {107}let v_668: bitstring = catch-fail(symmetricstateunpack(v_667)) in
        {108}let v_669: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_668))) in
        {109}let v_670: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_669),2-proj-2-tuple(v_669),3-proj-3-tuple(v_668),msg_c(alice,bob,sid))) in
        {110}let v_671: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_668))) in
        {111}let v_672: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_669))) && success?(1-proj-3-tuple(v_668))) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-2-tuple(v_671))))) then cipherstatepack(1-proj-2-tuple(v_671),increment_nonce(2-proj-2-tuple(v_669))) else fail-any) else fail-any)) in
        {112}let v_673: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_668)) && success?(1-proj-3-tuple(v_668))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then (if not-caught-fail(v_670) then (if not-caught-fail(v_672) then (v_672,v_670) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {113}let v_674: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_673),2-proj-3-tuple(v_668),3-proj-3-tuple(v_668)))) in
        {114}let v_675: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_673)) && success?(symmetricstatepack(1-proj-2-tuple(v_673),2-proj-3-tuple(v_668),3-proj-3-tuple(v_668)))) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then symmetricstatepack(1-proj-3-tuple(v_674),2-proj-3-tuple(v_674),hash(3-proj-3-tuple(v_674),2-proj-2-tuple(v_673))) else fail-any) else fail-any)) in
        {115}let v_676: bitstring = catch-fail((if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-2-tuple(v_673))))) then (if not-caught-fail(v_675) then (v_675,2-proj-2-tuple(v_673)) else fail-any) else fail-any) else fail-any)) in
        {116}let v_677: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_676),2-proj-7-tuple(v_659),3-proj-7-tuple(v_659),4-proj-7-tuple(v_659),5-proj-7-tuple(v_659),6-proj-7-tuple(v_659),7-proj-7-tuple(v_659))) in
        {117}let v_678: bitstring = catch-fail(concat3(1-proj-3-tuple(v_660),2-proj-3-tuple(v_660),2-proj-2-tuple(v_676))) in
        {118}let v_679: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_676))) in
        {119}let v_680: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_679),zero)) in
        {120}let v_681: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_679),zero)) in
        {121}let v_682: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_679),zero)) in
        {122}let v_683: bitstring = catch-fail((if success?(2-proj-3-tuple(v_679)) then (if not-caught-fail(v_680) then (if not-caught-fail(v_681) then (if not-caught-fail(v_682) then (v_680,v_681,v_682) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {123}let v_684: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_683)) then cipherstatepack(1-proj-3-tuple(v_683),minnonce) else fail-any)) in
        {124}let v_685: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_683)) then cipherstatepack(2-proj-3-tuple(v_683),minnonce) else fail-any)) in
        {125}let v_686: bitstring = catch-fail((if success?(1-proj-2-tuple(v_676)) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (1-proj-2-tuple(v_676),v_684,v_685) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {126}let (hs_687: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-7-tuple(v_659))))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-3-tuple(v_660))))) then (if not-caught-fail(v_667) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then (if not-caught-fail(v_677) then (if not-caught-fail(v_678) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-3-tuple(v_686))))) then (v_677,v_678,2-proj-3-tuple(v_686),3-proj-3-tuple(v_686)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {127}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {128}insert statestore(alice,bob,sid,statepack_d(hs_687,cs1,cs2));
        {129}out(pub, message_c)
    ) | (
        {131}!
        {151}get statestore(=alice,=bob,=sid,statepack_d(hs_688: handshakestate,cs1_689: cipherstate,cs2_690: cipherstate)) in
        {132}let hs_691: handshakestate = handshakestatesetcs(hs_688,cs2_690) in
        {133}in(pub, message_d: bitstring);
        {134}let v_692: bitstring = catch-fail(handshakestateunpack(hs_691)) in
        {135}let v_693: bitstring = catch-fail(deconcat3(message_d)) in
        {136}let v_694: bool = catch-fail(true) in
        {137}let v_695: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_692))) in
        {138}let v_696: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_695))) in
        {139}let v_697: aead = catch-fail(decrypt(1-proj-2-tuple(v_696),2-proj-2-tuple(v_696),3-proj-3-tuple(v_695),3-proj-3-tuple(v_693))) in
        {140}let v_698: bitstring = catch-fail(aeadunpack(v_697)) in
        {141}let v_699: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_695))) in
        {142}let v_700: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_696))) && success?(1-proj-3-tuple(v_695))) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-2-tuple(v_699))))) then cipherstatepack(1-proj-2-tuple(v_699),increment_nonce(2-proj-2-tuple(v_696))) else fail-any) else fail-any)) in
        {143}let v_701: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_693)) && (success?(3-proj-3-tuple(v_695)) && success?(1-proj-3-tuple(v_695)))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-2-tuple(v_696))))) then (if not-caught-fail(v_697) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then (if not-caught-fail(v_700) then (v_700,3-proj-3-tuple(v_698),1-proj-3-tuple(v_698)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {144}let v_702: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_701),2-proj-3-tuple(v_695),3-proj-3-tuple(v_695)))) in
        {145}let v_703: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_693)) && success?(symmetricstatepack(1-proj-3-tuple(v_701),2-proj-3-tuple(v_695),3-proj-3-tuple(v_695)))) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then symmetricstatepack(1-proj-3-tuple(v_702),2-proj-3-tuple(v_702),hash(3-proj-3-tuple(v_702),3-proj-3-tuple(v_693))) else fail-any) else fail-any)) in
        {146}let v_704: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_693)) && success?(1-proj-7-tuple(v_692))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if not-caught-fail(v_703) then (v_703,2-proj-3-tuple(v_701),3-proj-3-tuple(v_701)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {147}let v_705: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_704),2-proj-7-tuple(v_692),3-proj-7-tuple(v_692),4-proj-7-tuple(v_692),5-proj-7-tuple(v_692),6-proj-7-tuple(v_692),7-proj-7-tuple(v_692))) in
        {148}let (hs_706: handshakestate,plaintext_d: bitstring,valid_707: bool) = (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-7-tuple(v_692))))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-3-tuple(v_693))))) then (if not-caught-fail(v_694) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-3-tuple(v_704))))) then (if (v_694 && 3-proj-3-tuple(v_704)) then (if not-caught-fail(v_705) then (v_705,2-proj-3-tuple(v_704),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {149}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {150}insert statestore(alice,bob,sid,statepack_e(hs_706,cs1_689,handshakestategetcs(hs_706)))
    ) | (
        {152}!
        {170}get statestore(=alice,=bob,=sid,statepack_e(hs_708: handshakestate,cs1_709: cipherstate,cs2_710: cipherstate)) in
        {153}let hs_711: handshakestate = handshakestatesetcs(hs_708,cs1_709) in
        {154}let v_712: bitstring = catch-fail(handshakestateunpack(hs_711)) in
        {155}let v_713: bitstring = catch-fail((empty,empty,empty)) in
        {156}let v_714: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_712))) in
        {157}let v_715: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {158}let v_716: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_715),2-proj-2-tuple(v_715),3-proj-3-tuple(v_714),msg_e(alice,bob,sid))) in
        {159}let v_717: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {160}let v_718: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_715))) && success?(1-proj-3-tuple(v_714))) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-2-tuple(v_717))))) then cipherstatepack(1-proj-2-tuple(v_717),increment_nonce(2-proj-2-tuple(v_715))) else fail-any) else fail-any)) in
        {161}let v_719: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_714)) && success?(1-proj-3-tuple(v_714))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then (if not-caught-fail(v_716) then (if not-caught-fail(v_718) then (v_718,v_716) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {162}let v_720: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_719),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) in
        {163}let v_721: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_719)) && success?(symmetricstatepack(1-proj-2-tuple(v_719),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_720),hash(3-proj-3-tuple(v_720),2-proj-2-tuple(v_719))) else fail-any) else fail-any)) in
        {164}let v_722: bitstring = catch-fail((if success?(1-proj-7-tuple(v_712)) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-2-tuple(v_719))))) then (if not-caught-fail(v_721) then (v_721,2-proj-2-tuple(v_719)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {165}let v_723: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_722),2-proj-7-tuple(v_712),3-proj-7-tuple(v_712),4-proj-7-tuple(v_712),5-proj-7-tuple(v_712),6-proj-7-tuple(v_712),7-proj-7-tuple(v_712))) in
        {166}let v_724: bitstring = catch-fail(concat3(1-proj-3-tuple(v_713),2-proj-3-tuple(v_713),2-proj-2-tuple(v_722))) in
        {167}let (hs_725: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-7-tuple(v_712))))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-2-tuple(v_722))))) then (if not-caught-fail(v_723) then (if not-caught-fail(v_724) then (v_723,v_724) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {168}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {169}out(pub, message_e)
    ) | (
        {171}event LeakS(phase0,alice);
        {172}out(pub, key_s(alice))
    ) | (
        {173}phase 1;
        {174}event LeakS(phase1,alice);
        {175}out(pub, key_s(alice))
    )
) | (
    {176}let s_726: keypair = keypairpack(empty,empty) in
    {177}out(pub, getpublickey(s_726));
    (
        {178}let e_727: keypair = keypairpack(empty,empty) in
        {179}let rs_728: key = empty in
        {180}let re_729: key = empty in
        {181}let v_730: bitstring = catch-fail(hash(somename,empty)) in
        {182}let v_731: key = catch-fail(v_730) in
        {183}let v_732: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {184}let v_733: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then symmetricstatepack(v_732,v_731,v_730) else fail-any) else fail-any) else fail-any))) in
        {185}let v_734: symmetricstate = catch-fail((if success?((if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then symmetricstatepack(v_732,v_731,v_730) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then symmetricstatepack(1-proj-3-tuple(v_733),2-proj-3-tuple(v_733),hash(3-proj-3-tuple(v_733),empty)) else fail-any) else fail-any)) in
        {186}let hs_735: handshakestate = (if not-caught-fail(v_734) then handshakestatepack(v_734,s_726,e_727,rs_728,re_729,empty,true) else fail-any) in
        {187}insert statestore(alice,charlie,sid,statepack_a(hs_735))
    ) | (
        {221}get statestore(=alice,=charlie,=sid,statepack_a(hs_736: handshakestate)) in
        {188}let v_737: bitstring = catch-fail(handshakestateunpack(hs_736)) in
        {189}let v_738: bitstring = catch-fail((empty,empty,empty)) in
        {190}let v_739: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {191}let v_740: keypair = catch-fail((if not-caught-fail(v_739) then keypairpack(validkey(v_739),key_e(alice,charlie,sid)) else fail-any)) in
        {192}let v_741: bitstring = catch-fail(getpublickey(v_740)) in
        {193}let v_742: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_737))) in
        {194}let v_743: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_737)) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then symmetricstatepack(1-proj-3-tuple(v_742),2-proj-3-tuple(v_742),hash(3-proj-3-tuple(v_742),v_741)) else fail-any) else fail-any)) in
        {195}let v_744: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {196}let v_745: keypair = catch-fail((if not-caught-fail(v_744) then keypairpack(validkey(v_744),key_s(alice)) else fail-any)) in
        {197}let v_746: bitstring = catch-fail(symmetricstateunpack(v_743)) in
        {198}let v_747: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_746))) in
        {199}let v_748: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_747),2-proj-2-tuple(v_747),3-proj-3-tuple(v_746),getpublickey(v_745))) in
        {200}let v_749: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_746))) in
        {201}let v_750: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_747))) && success?(1-proj-3-tuple(v_746))) then (if (not-caught-fail(v_749) && success?(is-true(success?(1-proj-2-tuple(v_749))))) then cipherstatepack(1-proj-2-tuple(v_749),increment_nonce(2-proj-2-tuple(v_747))) else fail-any) else fail-any)) in
        {202}let v_751: bitstring = catch-fail((if (success?(getpublickey(v_745)) && (success?(3-proj-3-tuple(v_746)) && success?(1-proj-3-tuple(v_746)))) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-2-tuple(v_747))))) then (if not-caught-fail(v_748) then (if not-caught-fail(v_750) then (v_750,v_748) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {203}let v_752: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_751),2-proj-3-tuple(v_746),3-proj-3-tuple(v_746)))) in
        {204}let v_753: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_751)) && success?(symmetricstatepack(1-proj-2-tuple(v_751),2-proj-3-tuple(v_746),3-proj-3-tuple(v_746)))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-3-tuple(v_752))))) then symmetricstatepack(1-proj-3-tuple(v_752),2-proj-3-tuple(v_752),hash(3-proj-3-tuple(v_752),2-proj-2-tuple(v_751))) else fail-any) else fail-any)) in
        {205}let v_754: bitstring = catch-fail((if success?(getpublickey(v_745)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-3-tuple(v_746))))) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-2-tuple(v_751))))) then (if not-caught-fail(v_753) then (v_753,2-proj-2-tuple(v_751)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {206}let v_755: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_754))) in
        {207}let v_756: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_755))) in
        {208}let v_757: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_756),2-proj-2-tuple(v_756),3-proj-3-tuple(v_755),msg_a(alice,charlie,sid))) in
        {209}let v_758: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_755))) in
        {210}let v_759: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_756))) && success?(1-proj-3-tuple(v_755))) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-2-tuple(v_758))))) then cipherstatepack(1-proj-2-tuple(v_758),increment_nonce(2-proj-2-tuple(v_756))) else fail-any) else fail-any)) in
        {211}let v_760: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_755)) && success?(1-proj-3-tuple(v_755))) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-2-tuple(v_756))))) then (if not-caught-fail(v_757) then (if not-caught-fail(v_759) then (v_759,v_757) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {212}let v_761: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_760),2-proj-3-tuple(v_755),3-proj-3-tuple(v_755)))) in
        {213}let v_762: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_760)) && success?(symmetricstatepack(1-proj-2-tuple(v_760),2-proj-3-tuple(v_755),3-proj-3-tuple(v_755)))) then (if (not-caught-fail(v_761) && success?(is-true(success?(1-proj-3-tuple(v_761))))) then symmetricstatepack(1-proj-3-tuple(v_761),2-proj-3-tuple(v_761),hash(3-proj-3-tuple(v_761),2-proj-2-tuple(v_760))) else fail-any) else fail-any)) in
        {214}let v_763: bitstring = catch-fail((if success?(1-proj-2-tuple(v_754)) then (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-3-tuple(v_755))))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then (if not-caught-fail(v_762) then (v_762,2-proj-2-tuple(v_760)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {215}let v_764: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_763),v_745,v_740,4-proj-7-tuple(v_737),5-proj-7-tuple(v_737),6-proj-7-tuple(v_737),7-proj-7-tuple(v_737))) in
        {216}let v_765: bitstring = catch-fail(concat3(v_741,2-proj-2-tuple(v_754),2-proj-2-tuple(v_763))) in
        {217}let (hs_766: handshakestate,message_a_767: bitstring) = (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-7-tuple(v_737))))) then (if (not-caught-fail(v_738) && success?(is-true(success?(1-proj-3-tuple(v_738))))) then (if not-caught-fail(v_740) then (if not-caught-fail(v_741) then (if not-caught-fail(v_743) then (if not-caught-fail(v_745) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-2-tuple(v_754))))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-2-tuple(v_763))))) then (if not-caught-fail(v_764) then (if not-caught-fail(v_765) then (v_764,v_765) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {218}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {219}insert statestore(alice,charlie,sid,statepack_b(hs_766));
        {220}out(pub, message_a_767)
    ) | (
        {269}get statestore(=alice,=charlie,=sid,statepack_b(hs_768: handshakestate)) in
        {222}in(pub, message_b_769: bitstring);
        {223}let v_770: bitstring = catch-fail(handshakestateunpack(hs_768)) in
        {224}let v_771: bitstring = catch-fail(deconcat3(message_b_769)) in
        {225}let v_772: bool = catch-fail(true) in
        {226}let v_773: key = catch-fail(1-proj-3-tuple(v_771)) in
        {227}let v_774: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_770))) in
        {228}let v_775: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_770)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-3-tuple(v_774))))) then symmetricstatepack(1-proj-3-tuple(v_774),2-proj-3-tuple(v_774),hash(3-proj-3-tuple(v_774),v_773)) else fail-any) else fail-any)) in
        {229}let v_776: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_770))) in
        {230}let v_777: bitstring = catch-fail(symmetricstateunpack(v_775)) in
        {231}let v_778: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_777),(if success?(3-proj-7-tuple(v_770)) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then dhexp(2-proj-2-tuple(v_776),v_773) else fail-any) else fail-any))) in
        {232}let v_779: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_777),(if success?(3-proj-7-tuple(v_770)) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then dhexp(2-proj-2-tuple(v_776),v_773) else fail-any) else fail-any))) in
        {233}let v_780: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_777),(if success?(3-proj-7-tuple(v_770)) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then dhexp(2-proj-2-tuple(v_776),v_773) else fail-any) else fail-any))) in
        {234}let v_781: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_770)) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then dhexp(2-proj-2-tuple(v_776),v_773) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_777))) then (if not-caught-fail(v_778) then (if not-caught-fail(v_779) then (if not-caught-fail(v_780) then (v_778,v_779,v_780) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_782: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_770)) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then dhexp(2-proj-2-tuple(v_776),v_773) else fail-any) else fail-any)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-3-tuple(v_777))))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-3-tuple(v_781))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_781)) then cipherstatepack(2-proj-3-tuple(v_781),minnonce) else fail-any),1-proj-3-tuple(v_781),3-proj-3-tuple(v_777)) else fail-any) else fail-any) else fail-any)) in
        {236}let v_783: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_770))) in
        {237}let v_784: bitstring = catch-fail(symmetricstateunpack(v_782)) in
        {238}let v_785: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_784),(if success?(2-proj-7-tuple(v_770)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then dhexp(2-proj-2-tuple(v_783),v_773) else fail-any) else fail-any))) in
        {239}let v_786: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_784),(if success?(2-proj-7-tuple(v_770)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then dhexp(2-proj-2-tuple(v_783),v_773) else fail-any) else fail-any))) in
        {240}let v_787: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_784),(if success?(2-proj-7-tuple(v_770)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then dhexp(2-proj-2-tuple(v_783),v_773) else fail-any) else fail-any))) in
        {241}let v_788: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_770)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then dhexp(2-proj-2-tuple(v_783),v_773) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_784))) then (if not-caught-fail(v_785) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (v_785,v_786,v_787) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {242}let v_789: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_770)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-2-tuple(v_783))))) then dhexp(2-proj-2-tuple(v_783),v_773) else fail-any) else fail-any)) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-3-tuple(v_784))))) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_788)) then cipherstatepack(2-proj-3-tuple(v_788),minnonce) else fail-any),1-proj-3-tuple(v_788),3-proj-3-tuple(v_784)) else fail-any) else fail-any) else fail-any)) in
        {243}let v_790: bitstring = catch-fail(symmetricstateunpack(v_789)) in
        {244}let v_791: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_790))) in
        {245}let v_792: aead = catch-fail(decrypt(1-proj-2-tuple(v_791),2-proj-2-tuple(v_791),3-proj-3-tuple(v_790),2-proj-3-tuple(v_771))) in
        {246}let v_793: bitstring = catch-fail(aeadunpack(v_792)) in
        {247}let v_794: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_790))) in
        {248}let v_795: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_791))) && success?(1-proj-3-tuple(v_790))) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then cipherstatepack(1-proj-2-tuple(v_794),increment_nonce(2-proj-2-tuple(v_791))) else fail-any) else fail-any)) in
        {249}let v_796: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_771)) && (success?(3-proj-3-tuple(v_790)) && success?(1-proj-3-tuple(v_790)))) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then (if not-caught-fail(v_792) then (if (not-caught-fail(v_793) && success?(is-true(success?(1-proj-3-tuple(v_793))))) then (if not-caught-fail(v_795) then (v_795,3-proj-3-tuple(v_793),1-proj-3-tuple(v_793)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {250}let v_797: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_796),2-proj-3-tuple(v_790),3-proj-3-tuple(v_790)))) in
        {251}let v_798: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_771)) && success?(symmetricstatepack(1-proj-3-tuple(v_796),2-proj-3-tuple(v_790),3-proj-3-tuple(v_790)))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then symmetricstatepack(1-proj-3-tuple(v_797),2-proj-3-tuple(v_797),hash(3-proj-3-tuple(v_797),2-proj-3-tuple(v_771))) else fail-any) else fail-any)) in
        {252}let v_799: bitstring = catch-fail((if success?(2-proj-3-tuple(v_771)) then (if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-3-tuple(v_790))))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-3-tuple(v_796))))) then (if not-caught-fail(v_798) then (v_798,2-proj-3-tuple(v_796),3-proj-3-tuple(v_796)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_800: key = catch-fail(2-proj-3-tuple(v_799)) in
        {254}let v_801: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_799))) in
        {255}let v_802: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_801))) in
        {256}let v_803: aead = catch-fail(decrypt(1-proj-2-tuple(v_802),2-proj-2-tuple(v_802),3-proj-3-tuple(v_801),3-proj-3-tuple(v_771))) in
        {257}let v_804: bitstring = catch-fail(aeadunpack(v_803)) in
        {258}let v_805: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_801))) in
        {259}let v_806: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_802))) && success?(1-proj-3-tuple(v_801))) then (if (not-caught-fail(v_805) && success?(is-true(success?(1-proj-2-tuple(v_805))))) then cipherstatepack(1-proj-2-tuple(v_805),increment_nonce(2-proj-2-tuple(v_802))) else fail-any) else fail-any)) in
        {260}let v_807: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_771)) && (success?(3-proj-3-tuple(v_801)) && success?(1-proj-3-tuple(v_801)))) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then (if not-caught-fail(v_803) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then (if not-caught-fail(v_806) then (v_806,3-proj-3-tuple(v_804),1-proj-3-tuple(v_804)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {261}let v_808: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_807),2-proj-3-tuple(v_801),3-proj-3-tuple(v_801)))) in
        {262}let v_809: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_771)) && success?(symmetricstatepack(1-proj-3-tuple(v_807),2-proj-3-tuple(v_801),3-proj-3-tuple(v_801)))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then symmetricstatepack(1-proj-3-tuple(v_808),2-proj-3-tuple(v_808),hash(3-proj-3-tuple(v_808),3-proj-3-tuple(v_771))) else fail-any) else fail-any)) in
        {263}let v_810: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_771)) && success?(1-proj-3-tuple(v_799))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-3-tuple(v_801))))) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then (if not-caught-fail(v_809) then (v_809,2-proj-3-tuple(v_807),3-proj-3-tuple(v_807)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {264}let v_811: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {265}let v_812: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_810),2-proj-7-tuple(v_770),3-proj-7-tuple(v_770),v_800,v_773,6-proj-7-tuple(v_770),7-proj-7-tuple(v_770))) in
        {266}let (hs_813: handshakestate,plaintext_b_814: bitstring,valid_815: bool) = (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-7-tuple(v_770))))) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then (if not-caught-fail(v_772) then (if not-caught-fail(v_773) then (if not-caught-fail(v_775) then (if not-caught-fail(v_782) then (if not-caught-fail(v_789) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-3-tuple(v_799))))) then (if not-caught-fail(v_800) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-3-tuple(v_810))))) then (if ((3-proj-3-tuple(v_799) && 3-proj-3-tuple(v_810)) && (v_800 = getpublickey((if not-caught-fail(v_811) then keypairpack(validkey(v_811),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_812) then (v_812,2-proj-3-tuple(v_810),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {267}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_814);
        {268}insert statestore(alice,charlie,sid,statepack_c(hs_813))
    ) | (
        {302}get statestore(=alice,=charlie,=sid,statepack_c(hs_816: handshakestate)) in
        {270}let v_817: bitstring = catch-fail(handshakestateunpack(hs_816)) in
        {271}let v_818: bitstring = catch-fail((empty,empty,empty)) in
        {272}let v_819: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_817))) in
        {273}let v_820: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_817))) in
        {274}let v_821: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_820),(if (success?(4-proj-7-tuple(v_817)) && success?(3-proj-7-tuple(v_817))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then dhexp(2-proj-2-tuple(v_819),4-proj-7-tuple(v_817)) else fail-any) else fail-any))) in
        {275}let v_822: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_820),(if (success?(4-proj-7-tuple(v_817)) && success?(3-proj-7-tuple(v_817))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then dhexp(2-proj-2-tuple(v_819),4-proj-7-tuple(v_817)) else fail-any) else fail-any))) in
        {276}let v_823: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_820),(if (success?(4-proj-7-tuple(v_817)) && success?(3-proj-7-tuple(v_817))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then dhexp(2-proj-2-tuple(v_819),4-proj-7-tuple(v_817)) else fail-any) else fail-any))) in
        {277}let v_824: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_817)) && success?(3-proj-7-tuple(v_817))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then dhexp(2-proj-2-tuple(v_819),4-proj-7-tuple(v_817)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_820))) then (if not-caught-fail(v_821) then (if not-caught-fail(v_822) then (if not-caught-fail(v_823) then (v_821,v_822,v_823) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {278}let v_825: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_817)) && success?(3-proj-7-tuple(v_817))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then dhexp(2-proj-2-tuple(v_819),4-proj-7-tuple(v_817)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_817))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-3-tuple(v_824))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_824)) then cipherstatepack(2-proj-3-tuple(v_824),minnonce) else fail-any),1-proj-3-tuple(v_824),3-proj-3-tuple(v_820)) else fail-any) else fail-any) else fail-any)) in
        {279}let v_826: bitstring = catch-fail(symmetricstateunpack(v_825)) in
        {280}let v_827: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_826))) in
        {281}let v_828: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_827),2-proj-2-tuple(v_827),3-proj-3-tuple(v_826),msg_c(alice,charlie,sid))) in
        {282}let v_829: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_826))) in
        {283}let v_830: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_827))) && success?(1-proj-3-tuple(v_826))) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then cipherstatepack(1-proj-2-tuple(v_829),increment_nonce(2-proj-2-tuple(v_827))) else fail-any) else fail-any)) in
        {284}let v_831: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_826)) && success?(1-proj-3-tuple(v_826))) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then (if not-caught-fail(v_828) then (if not-caught-fail(v_830) then (v_830,v_828) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {285}let v_832: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_831),2-proj-3-tuple(v_826),3-proj-3-tuple(v_826)))) in
        {286}let v_833: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_831)) && success?(symmetricstatepack(1-proj-2-tuple(v_831),2-proj-3-tuple(v_826),3-proj-3-tuple(v_826)))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then symmetricstatepack(1-proj-3-tuple(v_832),2-proj-3-tuple(v_832),hash(3-proj-3-tuple(v_832),2-proj-2-tuple(v_831))) else fail-any) else fail-any)) in
        {287}let v_834: bitstring = catch-fail((if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-2-tuple(v_831))))) then (if not-caught-fail(v_833) then (v_833,2-proj-2-tuple(v_831)) else fail-any) else fail-any) else fail-any)) in
        {288}let v_835: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_834),2-proj-7-tuple(v_817),3-proj-7-tuple(v_817),4-proj-7-tuple(v_817),5-proj-7-tuple(v_817),6-proj-7-tuple(v_817),7-proj-7-tuple(v_817))) in
        {289}let v_836: bitstring = catch-fail(concat3(1-proj-3-tuple(v_818),2-proj-3-tuple(v_818),2-proj-2-tuple(v_834))) in
        {290}let v_837: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_834))) in
        {291}let v_838: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_837),zero)) in
        {292}let v_839: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_837),zero)) in
        {293}let v_840: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_837),zero)) in
        {294}let v_841: bitstring = catch-fail((if success?(2-proj-3-tuple(v_837)) then (if not-caught-fail(v_838) then (if not-caught-fail(v_839) then (if not-caught-fail(v_840) then (v_838,v_839,v_840) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {295}let v_842: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_841)) then cipherstatepack(1-proj-3-tuple(v_841),minnonce) else fail-any)) in
        {296}let v_843: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_841)) then cipherstatepack(2-proj-3-tuple(v_841),minnonce) else fail-any)) in
        {297}let v_844: bitstring = catch-fail((if success?(1-proj-2-tuple(v_834)) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then (if (not-caught-fail(v_841) && success?(is-true(success?(1-proj-3-tuple(v_841))))) then (if not-caught-fail(v_842) then (if not-caught-fail(v_843) then (1-proj-2-tuple(v_834),v_842,v_843) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {298}let (hs_845: handshakestate,message_c_846: bitstring,cs1_847: cipherstate,cs2_848: cipherstate) = (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-7-tuple(v_817))))) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-3-tuple(v_818))))) then (if not-caught-fail(v_825) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-2-tuple(v_834))))) then (if not-caught-fail(v_835) then (if not-caught-fail(v_836) then (if (not-caught-fail(v_844) && success?(is-true(success?(1-proj-3-tuple(v_844))))) then (v_835,v_836,2-proj-3-tuple(v_844),3-proj-3-tuple(v_844)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {299}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {300}insert statestore(alice,charlie,sid,statepack_d(hs_845,cs1_847,cs2_848));
        {301}out(pub, message_c_846)
    ) | (
        {303}!
        {323}get statestore(=alice,=charlie,=sid,statepack_d(hs_849: handshakestate,cs1_850: cipherstate,cs2_851: cipherstate)) in
        {304}let hs_852: handshakestate = handshakestatesetcs(hs_849,cs2_851) in
        {305}in(pub, message_d_853: bitstring);
        {306}let v_854: bitstring = catch-fail(handshakestateunpack(hs_852)) in
        {307}let v_855: bitstring = catch-fail(deconcat3(message_d_853)) in
        {308}let v_856: bool = catch-fail(true) in
        {309}let v_857: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_854))) in
        {310}let v_858: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_857))) in
        {311}let v_859: aead = catch-fail(decrypt(1-proj-2-tuple(v_858),2-proj-2-tuple(v_858),3-proj-3-tuple(v_857),3-proj-3-tuple(v_855))) in
        {312}let v_860: bitstring = catch-fail(aeadunpack(v_859)) in
        {313}let v_861: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_857))) in
        {314}let v_862: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_858))) && success?(1-proj-3-tuple(v_857))) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-2-tuple(v_861))))) then cipherstatepack(1-proj-2-tuple(v_861),increment_nonce(2-proj-2-tuple(v_858))) else fail-any) else fail-any)) in
        {315}let v_863: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_855)) && (success?(3-proj-3-tuple(v_857)) && success?(1-proj-3-tuple(v_857)))) then (if (not-caught-fail(v_858) && success?(is-true(success?(1-proj-2-tuple(v_858))))) then (if not-caught-fail(v_859) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-3-tuple(v_860))))) then (if not-caught-fail(v_862) then (v_862,3-proj-3-tuple(v_860),1-proj-3-tuple(v_860)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {316}let v_864: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_863),2-proj-3-tuple(v_857),3-proj-3-tuple(v_857)))) in
        {317}let v_865: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_855)) && success?(symmetricstatepack(1-proj-3-tuple(v_863),2-proj-3-tuple(v_857),3-proj-3-tuple(v_857)))) then (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-3-tuple(v_864))))) then symmetricstatepack(1-proj-3-tuple(v_864),2-proj-3-tuple(v_864),hash(3-proj-3-tuple(v_864),3-proj-3-tuple(v_855))) else fail-any) else fail-any)) in
        {318}let v_866: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_855)) && success?(1-proj-7-tuple(v_854))) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-3-tuple(v_857))))) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then (if not-caught-fail(v_865) then (v_865,2-proj-3-tuple(v_863),3-proj-3-tuple(v_863)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {319}let v_867: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_866),2-proj-7-tuple(v_854),3-proj-7-tuple(v_854),4-proj-7-tuple(v_854),5-proj-7-tuple(v_854),6-proj-7-tuple(v_854),7-proj-7-tuple(v_854))) in
        {320}let (hs_868: handshakestate,plaintext_d_869: bitstring,valid_870: bool) = (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-7-tuple(v_854))))) then (if (not-caught-fail(v_855) && success?(is-true(success?(1-proj-3-tuple(v_855))))) then (if not-caught-fail(v_856) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-3-tuple(v_866))))) then (if (v_856 && 3-proj-3-tuple(v_866)) then (if not-caught-fail(v_867) then (v_867,2-proj-3-tuple(v_866),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {321}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_869);
        {322}insert statestore(alice,charlie,sid,statepack_e(hs_868,cs1_850,handshakestategetcs(hs_868)))
    ) | (
        {324}!
        {342}get statestore(=alice,=charlie,=sid,statepack_e(hs_871: handshakestate,cs1_872: cipherstate,cs2_873: cipherstate)) in
        {325}let hs_874: handshakestate = handshakestatesetcs(hs_871,cs1_872) in
        {326}let v_875: bitstring = catch-fail(handshakestateunpack(hs_874)) in
        {327}let v_876: bitstring = catch-fail((empty,empty,empty)) in
        {328}let v_877: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_875))) in
        {329}let v_878: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {330}let v_879: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_878),2-proj-2-tuple(v_878),3-proj-3-tuple(v_877),msg_e(alice,charlie,sid))) in
        {331}let v_880: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {332}let v_881: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_878))) && success?(1-proj-3-tuple(v_877))) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-2-tuple(v_880))))) then cipherstatepack(1-proj-2-tuple(v_880),increment_nonce(2-proj-2-tuple(v_878))) else fail-any) else fail-any)) in
        {333}let v_882: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_877)) && success?(1-proj-3-tuple(v_877))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then (if not-caught-fail(v_879) then (if not-caught-fail(v_881) then (v_881,v_879) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {334}let v_883: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_882),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) in
        {335}let v_884: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_882)) && success?(symmetricstatepack(1-proj-2-tuple(v_882),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_883),hash(3-proj-3-tuple(v_883),2-proj-2-tuple(v_882))) else fail-any) else fail-any)) in
        {336}let v_885: bitstring = catch-fail((if success?(1-proj-7-tuple(v_875)) then (if (not-caught-fail(v_877) && success?(is-true(success?(1-proj-3-tuple(v_877))))) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-2-tuple(v_882))))) then (if not-caught-fail(v_884) then (v_884,2-proj-2-tuple(v_882)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {337}let v_886: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_885),2-proj-7-tuple(v_875),3-proj-7-tuple(v_875),4-proj-7-tuple(v_875),5-proj-7-tuple(v_875),6-proj-7-tuple(v_875),7-proj-7-tuple(v_875))) in
        {338}let v_887: bitstring = catch-fail(concat3(1-proj-3-tuple(v_876),2-proj-3-tuple(v_876),2-proj-2-tuple(v_885))) in
        {339}let (hs_888: handshakestate,message_e_889: bitstring) = (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-7-tuple(v_875))))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then (if (not-caught-fail(v_885) && success?(is-true(success?(1-proj-2-tuple(v_885))))) then (if not-caught-fail(v_886) then (if not-caught-fail(v_887) then (v_886,v_887) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {340}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {341}out(pub, message_e_889)
    ) | (
        {343}event LeakS(phase0,alice);
        {344}out(pub, key_s(alice))
    ) | (
        {345}phase 1;
        {346}event LeakS(phase1,alice);
        {347}out(pub, key_s(alice))
    )
) | (
    {348}let s_890: keypair = keypairpack(empty,empty) in
    {349}out(pub, getpublickey(s_890));
    (
        {350}let e_891: keypair = keypairpack(empty,empty) in
        {351}let rs_892: key = empty in
        {352}let re_893: key = empty in
        {353}let v_894: bitstring = catch-fail(hash(somename,empty)) in
        {354}let v_895: key = catch-fail(v_894) in
        {355}let v_896: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {356}let v_897: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_894) then (if not-caught-fail(v_895) then (if not-caught-fail(v_896) then symmetricstatepack(v_896,v_895,v_894) else fail-any) else fail-any) else fail-any))) in
        {357}let v_898: symmetricstate = catch-fail((if success?((if not-caught-fail(v_894) then (if not-caught-fail(v_895) then (if not-caught-fail(v_896) then symmetricstatepack(v_896,v_895,v_894) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-3-tuple(v_897))))) then symmetricstatepack(1-proj-3-tuple(v_897),2-proj-3-tuple(v_897),hash(3-proj-3-tuple(v_897),empty)) else fail-any) else fail-any)) in
        {358}let hs_899: handshakestate = (if not-caught-fail(v_898) then handshakestatepack(v_898,s_890,e_891,rs_892,re_893,empty,false) else fail-any) in
        {359}insert statestore(bob,alice,sid,statepack_a(hs_899))
    ) | (
        {393}get statestore(=bob,=alice,=sid,statepack_a(hs_900: handshakestate)) in
        {360}in(pub, message_a_901: bitstring);
        {361}let v_902: bitstring = catch-fail(handshakestateunpack(hs_900)) in
        {362}let v_903: bitstring = catch-fail(deconcat3(message_a_901)) in
        {363}let v_904: bool = catch-fail(true) in
        {364}let v_905: key = catch-fail(1-proj-3-tuple(v_903)) in
        {365}let v_906: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_902))) in
        {366}let v_907: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_902)) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then symmetricstatepack(1-proj-3-tuple(v_906),2-proj-3-tuple(v_906),hash(3-proj-3-tuple(v_906),v_905)) else fail-any) else fail-any)) in
        {367}let v_908: bitstring = catch-fail(symmetricstateunpack(v_907)) in
        {368}let v_909: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_908))) in
        {369}let v_910: aead = catch-fail(decrypt(1-proj-2-tuple(v_909),2-proj-2-tuple(v_909),3-proj-3-tuple(v_908),2-proj-3-tuple(v_903))) in
        {370}let v_911: bitstring = catch-fail(aeadunpack(v_910)) in
        {371}let v_912: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_908))) in
        {372}let v_913: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_909))) && success?(1-proj-3-tuple(v_908))) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-2-tuple(v_912))))) then cipherstatepack(1-proj-2-tuple(v_912),increment_nonce(2-proj-2-tuple(v_909))) else fail-any) else fail-any)) in
        {373}let v_914: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_903)) && (success?(3-proj-3-tuple(v_908)) && success?(1-proj-3-tuple(v_908)))) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-2-tuple(v_909))))) then (if not-caught-fail(v_910) then (if (not-caught-fail(v_911) && success?(is-true(success?(1-proj-3-tuple(v_911))))) then (if not-caught-fail(v_913) then (v_913,3-proj-3-tuple(v_911),1-proj-3-tuple(v_911)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {374}let v_915: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_914),2-proj-3-tuple(v_908),3-proj-3-tuple(v_908)))) in
        {375}let v_916: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_903)) && success?(symmetricstatepack(1-proj-3-tuple(v_914),2-proj-3-tuple(v_908),3-proj-3-tuple(v_908)))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then symmetricstatepack(1-proj-3-tuple(v_915),2-proj-3-tuple(v_915),hash(3-proj-3-tuple(v_915),2-proj-3-tuple(v_903))) else fail-any) else fail-any)) in
        {376}let v_917: bitstring = catch-fail((if success?(2-proj-3-tuple(v_903)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-3-tuple(v_908))))) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-3-tuple(v_914))))) then (if not-caught-fail(v_916) then (v_916,2-proj-3-tuple(v_914),3-proj-3-tuple(v_914)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {377}let v_918: key = catch-fail(2-proj-3-tuple(v_917)) in
        {378}let v_919: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_917))) in
        {379}let v_920: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_919))) in
        {380}let v_921: aead = catch-fail(decrypt(1-proj-2-tuple(v_920),2-proj-2-tuple(v_920),3-proj-3-tuple(v_919),3-proj-3-tuple(v_903))) in
        {381}let v_922: bitstring = catch-fail(aeadunpack(v_921)) in
        {382}let v_923: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_919))) in
        {383}let v_924: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_920))) && success?(1-proj-3-tuple(v_919))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-2-tuple(v_923))))) then cipherstatepack(1-proj-2-tuple(v_923),increment_nonce(2-proj-2-tuple(v_920))) else fail-any) else fail-any)) in
        {384}let v_925: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_903)) && (success?(3-proj-3-tuple(v_919)) && success?(1-proj-3-tuple(v_919)))) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-2-tuple(v_920))))) then (if not-caught-fail(v_921) then (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if not-caught-fail(v_924) then (v_924,3-proj-3-tuple(v_922),1-proj-3-tuple(v_922)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {385}let v_926: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_925),2-proj-3-tuple(v_919),3-proj-3-tuple(v_919)))) in
        {386}let v_927: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_903)) && success?(symmetricstatepack(1-proj-3-tuple(v_925),2-proj-3-tuple(v_919),3-proj-3-tuple(v_919)))) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then symmetricstatepack(1-proj-3-tuple(v_926),2-proj-3-tuple(v_926),hash(3-proj-3-tuple(v_926),3-proj-3-tuple(v_903))) else fail-any) else fail-any)) in
        {387}let v_928: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_903)) && success?(1-proj-3-tuple(v_917))) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-3-tuple(v_925))))) then (if not-caught-fail(v_927) then (v_927,2-proj-3-tuple(v_925),3-proj-3-tuple(v_925)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {388}let v_929: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {389}let v_930: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_928),2-proj-7-tuple(v_902),3-proj-7-tuple(v_902),v_918,v_905,6-proj-7-tuple(v_902),7-proj-7-tuple(v_902))) in
        {390}let (hs_931: handshakestate,plaintext_a: bitstring,valid_932: bool) = (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-7-tuple(v_902))))) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-3-tuple(v_903))))) then (if not-caught-fail(v_904) then (if not-caught-fail(v_905) then (if not-caught-fail(v_907) then (if (not-caught-fail(v_917) && success?(is-true(success?(1-proj-3-tuple(v_917))))) then (if not-caught-fail(v_918) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then (if ((3-proj-3-tuple(v_917) && 3-proj-3-tuple(v_928)) && (v_918 = getpublickey((if not-caught-fail(v_929) then keypairpack(validkey(v_929),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_930) then (v_930,2-proj-3-tuple(v_928),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {391}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {392}insert statestore(bob,alice,sid,statepack_b(hs_931))
    ) | (
        {441}get statestore(=bob,=alice,=sid,statepack_b(hs_933: handshakestate)) in
        {394}let v_934: bitstring = catch-fail(handshakestateunpack(hs_933)) in
        {395}let v_935: bitstring = catch-fail((empty,empty,empty)) in
        {396}let v_936: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {397}let v_937: keypair = catch-fail((if not-caught-fail(v_936) then keypairpack(validkey(v_936),key_e(bob,alice,sid)) else fail-any)) in
        {398}let v_938: bitstring = catch-fail(getpublickey(v_937)) in
        {399}let v_939: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_934))) in
        {400}let v_940: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_934)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then symmetricstatepack(1-proj-3-tuple(v_939),2-proj-3-tuple(v_939),hash(3-proj-3-tuple(v_939),v_938)) else fail-any) else fail-any)) in
        {401}let v_941: bitstring = catch-fail(keypairunpack(v_937)) in
        {402}let v_942: bitstring = catch-fail(symmetricstateunpack(v_940)) in
        {403}let v_943: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_942),(if success?(5-proj-7-tuple(v_934)) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-2-tuple(v_941))))) then dhexp(2-proj-2-tuple(v_941),5-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {404}let v_944: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_942),(if success?(5-proj-7-tuple(v_934)) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-2-tuple(v_941))))) then dhexp(2-proj-2-tuple(v_941),5-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {405}let v_945: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_942),(if success?(5-proj-7-tuple(v_934)) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-2-tuple(v_941))))) then dhexp(2-proj-2-tuple(v_941),5-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {406}let v_946: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_934)) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-2-tuple(v_941))))) then dhexp(2-proj-2-tuple(v_941),5-proj-7-tuple(v_934)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_942))) then (if not-caught-fail(v_943) then (if not-caught-fail(v_944) then (if not-caught-fail(v_945) then (v_943,v_944,v_945) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_947: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_934)) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-2-tuple(v_941))))) then dhexp(2-proj-2-tuple(v_941),5-proj-7-tuple(v_934)) else fail-any) else fail-any)) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-3-tuple(v_942))))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-3-tuple(v_946))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_946)) then cipherstatepack(2-proj-3-tuple(v_946),minnonce) else fail-any),1-proj-3-tuple(v_946),3-proj-3-tuple(v_942)) else fail-any) else fail-any) else fail-any)) in
        {408}let v_948: bitstring = catch-fail(keypairunpack(v_937)) in
        {409}let v_949: bitstring = catch-fail(symmetricstateunpack(v_947)) in
        {410}let v_950: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_949),(if success?(4-proj-7-tuple(v_934)) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then dhexp(2-proj-2-tuple(v_948),4-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {411}let v_951: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_949),(if success?(4-proj-7-tuple(v_934)) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then dhexp(2-proj-2-tuple(v_948),4-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {412}let v_952: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_949),(if success?(4-proj-7-tuple(v_934)) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then dhexp(2-proj-2-tuple(v_948),4-proj-7-tuple(v_934)) else fail-any) else fail-any))) in
        {413}let v_953: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_934)) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then dhexp(2-proj-2-tuple(v_948),4-proj-7-tuple(v_934)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_949))) then (if not-caught-fail(v_950) then (if not-caught-fail(v_951) then (if not-caught-fail(v_952) then (v_950,v_951,v_952) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {414}let v_954: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_934)) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then dhexp(2-proj-2-tuple(v_948),4-proj-7-tuple(v_934)) else fail-any) else fail-any)) then (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-3-tuple(v_949))))) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_953)) then cipherstatepack(2-proj-3-tuple(v_953),minnonce) else fail-any),1-proj-3-tuple(v_953),3-proj-3-tuple(v_949)) else fail-any) else fail-any) else fail-any)) in
        {415}let v_955: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {416}let v_956: keypair = catch-fail((if not-caught-fail(v_955) then keypairpack(validkey(v_955),key_s(bob)) else fail-any)) in
        {417}let v_957: bitstring = catch-fail(symmetricstateunpack(v_954)) in
        {418}let v_958: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_957))) in
        {419}let v_959: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_958),2-proj-2-tuple(v_958),3-proj-3-tuple(v_957),getpublickey(v_956))) in
        {420}let v_960: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_957))) in
        {421}let v_961: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_958))) && success?(1-proj-3-tuple(v_957))) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-2-tuple(v_960))))) then cipherstatepack(1-proj-2-tuple(v_960),increment_nonce(2-proj-2-tuple(v_958))) else fail-any) else fail-any)) in
        {422}let v_962: bitstring = catch-fail((if (success?(getpublickey(v_956)) && (success?(3-proj-3-tuple(v_957)) && success?(1-proj-3-tuple(v_957)))) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-2-tuple(v_958))))) then (if not-caught-fail(v_959) then (if not-caught-fail(v_961) then (v_961,v_959) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {423}let v_963: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_962),2-proj-3-tuple(v_957),3-proj-3-tuple(v_957)))) in
        {424}let v_964: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_962)) && success?(symmetricstatepack(1-proj-2-tuple(v_962),2-proj-3-tuple(v_957),3-proj-3-tuple(v_957)))) then (if (not-caught-fail(v_963) && success?(is-true(success?(1-proj-3-tuple(v_963))))) then symmetricstatepack(1-proj-3-tuple(v_963),2-proj-3-tuple(v_963),hash(3-proj-3-tuple(v_963),2-proj-2-tuple(v_962))) else fail-any) else fail-any)) in
        {425}let v_965: bitstring = catch-fail((if success?(getpublickey(v_956)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-3-tuple(v_957))))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-2-tuple(v_962))))) then (if not-caught-fail(v_964) then (v_964,2-proj-2-tuple(v_962)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {426}let v_966: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_965))) in
        {427}let v_967: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_966))) in
        {428}let v_968: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_967),2-proj-2-tuple(v_967),3-proj-3-tuple(v_966),msg_b(bob,alice,sid))) in
        {429}let v_969: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_966))) in
        {430}let v_970: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_967))) && success?(1-proj-3-tuple(v_966))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-2-tuple(v_969))))) then cipherstatepack(1-proj-2-tuple(v_969),increment_nonce(2-proj-2-tuple(v_967))) else fail-any) else fail-any)) in
        {431}let v_971: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_966)) && success?(1-proj-3-tuple(v_966))) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-2-tuple(v_967))))) then (if not-caught-fail(v_968) then (if not-caught-fail(v_970) then (v_970,v_968) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {432}let v_972: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_971),2-proj-3-tuple(v_966),3-proj-3-tuple(v_966)))) in
        {433}let v_973: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_971)) && success?(symmetricstatepack(1-proj-2-tuple(v_971),2-proj-3-tuple(v_966),3-proj-3-tuple(v_966)))) then (if (not-caught-fail(v_972) && success?(is-true(success?(1-proj-3-tuple(v_972))))) then symmetricstatepack(1-proj-3-tuple(v_972),2-proj-3-tuple(v_972),hash(3-proj-3-tuple(v_972),2-proj-2-tuple(v_971))) else fail-any) else fail-any)) in
        {434}let v_974: bitstring = catch-fail((if success?(1-proj-2-tuple(v_965)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-3-tuple(v_966))))) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then (if not-caught-fail(v_973) then (v_973,2-proj-2-tuple(v_971)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {435}let v_975: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_974),v_956,v_937,4-proj-7-tuple(v_934),5-proj-7-tuple(v_934),6-proj-7-tuple(v_934),7-proj-7-tuple(v_934))) in
        {436}let v_976: bitstring = catch-fail(concat3(v_938,2-proj-2-tuple(v_965),2-proj-2-tuple(v_974))) in
        {437}let (hs_977: handshakestate,message_b_978: bitstring) = (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-7-tuple(v_934))))) then (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-3-tuple(v_935))))) then (if not-caught-fail(v_937) then (if not-caught-fail(v_938) then (if not-caught-fail(v_940) then (if not-caught-fail(v_947) then (if not-caught-fail(v_954) then (if not-caught-fail(v_956) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-2-tuple(v_965))))) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-2-tuple(v_974))))) then (if not-caught-fail(v_975) then (if not-caught-fail(v_976) then (v_975,v_976) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {438}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {439}insert statestore(bob,alice,sid,statepack_c(hs_977));
        {440}out(pub, message_b_978)
    ) | (
        {475}get statestore(=bob,=alice,=sid,statepack_c(hs_979: handshakestate)) in
        {442}in(pub, message_c_980: bitstring);
        {443}let v_981: bitstring = catch-fail(handshakestateunpack(hs_979)) in
        {444}let v_982: bitstring = catch-fail(deconcat3(message_c_980)) in
        {445}let v_983: bool = catch-fail(true) in
        {446}let v_984: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_981))) in
        {447}let v_985: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_981))) in
        {448}let v_986: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_985),(if (success?(5-proj-7-tuple(v_981)) && success?(2-proj-7-tuple(v_981))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then dhexp(2-proj-2-tuple(v_984),5-proj-7-tuple(v_981)) else fail-any) else fail-any))) in
        {449}let v_987: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_985),(if (success?(5-proj-7-tuple(v_981)) && success?(2-proj-7-tuple(v_981))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then dhexp(2-proj-2-tuple(v_984),5-proj-7-tuple(v_981)) else fail-any) else fail-any))) in
        {450}let v_988: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_985),(if (success?(5-proj-7-tuple(v_981)) && success?(2-proj-7-tuple(v_981))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then dhexp(2-proj-2-tuple(v_984),5-proj-7-tuple(v_981)) else fail-any) else fail-any))) in
        {451}let v_989: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_981)) && success?(2-proj-7-tuple(v_981))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then dhexp(2-proj-2-tuple(v_984),5-proj-7-tuple(v_981)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_985))) then (if not-caught-fail(v_986) then (if not-caught-fail(v_987) then (if not-caught-fail(v_988) then (v_986,v_987,v_988) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {452}let v_990: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_981)) && success?(2-proj-7-tuple(v_981))) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-2-tuple(v_984))))) then dhexp(2-proj-2-tuple(v_984),5-proj-7-tuple(v_981)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_981))) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-3-tuple(v_985))))) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-3-tuple(v_989))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_989)) then cipherstatepack(2-proj-3-tuple(v_989),minnonce) else fail-any),1-proj-3-tuple(v_989),3-proj-3-tuple(v_985)) else fail-any) else fail-any) else fail-any)) in
        {453}let v_991: bitstring = catch-fail(symmetricstateunpack(v_990)) in
        {454}let v_992: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_991))) in
        {455}let v_993: aead = catch-fail(decrypt(1-proj-2-tuple(v_992),2-proj-2-tuple(v_992),3-proj-3-tuple(v_991),3-proj-3-tuple(v_982))) in
        {456}let v_994: bitstring = catch-fail(aeadunpack(v_993)) in
        {457}let v_995: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_991))) in
        {458}let v_996: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_992))) && success?(1-proj-3-tuple(v_991))) then (if (not-caught-fail(v_995) && success?(is-true(success?(1-proj-2-tuple(v_995))))) then cipherstatepack(1-proj-2-tuple(v_995),increment_nonce(2-proj-2-tuple(v_992))) else fail-any) else fail-any)) in
        {459}let v_997: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_982)) && (success?(3-proj-3-tuple(v_991)) && success?(1-proj-3-tuple(v_991)))) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-2-tuple(v_992))))) then (if not-caught-fail(v_993) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then (if not-caught-fail(v_996) then (v_996,3-proj-3-tuple(v_994),1-proj-3-tuple(v_994)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {460}let v_998: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_997),2-proj-3-tuple(v_991),3-proj-3-tuple(v_991)))) in
        {461}let v_999: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_982)) && success?(symmetricstatepack(1-proj-3-tuple(v_997),2-proj-3-tuple(v_991),3-proj-3-tuple(v_991)))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-3-tuple(v_998))))) then symmetricstatepack(1-proj-3-tuple(v_998),2-proj-3-tuple(v_998),hash(3-proj-3-tuple(v_998),3-proj-3-tuple(v_982))) else fail-any) else fail-any)) in
        {462}let v_1000: bitstring = catch-fail((if success?(3-proj-3-tuple(v_982)) then (if (not-caught-fail(v_991) && success?(is-true(success?(1-proj-3-tuple(v_991))))) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-3-tuple(v_997))))) then (if not-caught-fail(v_999) then (v_999,2-proj-3-tuple(v_997),3-proj-3-tuple(v_997)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {463}let v_1001: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1000),2-proj-7-tuple(v_981),3-proj-7-tuple(v_981),4-proj-7-tuple(v_981),5-proj-7-tuple(v_981),6-proj-7-tuple(v_981),7-proj-7-tuple(v_981))) in
        {464}let v_1002: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1000))) in
        {465}let v_1003: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1002),zero)) in
        {466}let v_1004: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1002),zero)) in
        {467}let v_1005: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1002),zero)) in
        {468}let v_1006: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1002)) then (if not-caught-fail(v_1003) then (if not-caught-fail(v_1004) then (if not-caught-fail(v_1005) then (v_1003,v_1004,v_1005) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {469}let v_1007: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1006)) then cipherstatepack(1-proj-3-tuple(v_1006),minnonce) else fail-any)) in
        {470}let v_1008: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1006)) then cipherstatepack(2-proj-3-tuple(v_1006),minnonce) else fail-any)) in
        {471}let v_1009: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1000)) then (if (not-caught-fail(v_1002) && success?(is-true(success?(1-proj-3-tuple(v_1002))))) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-3-tuple(v_1006))))) then (if not-caught-fail(v_1007) then (if not-caught-fail(v_1008) then (1-proj-3-tuple(v_1000),v_1007,v_1008) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let (hs_1010: handshakestate,plaintext_c: bitstring,valid_1011: bool,cs1_1012: cipherstate,cs2_1013: cipherstate) = (if (not-caught-fail(v_981) && success?(is-true(success?(1-proj-7-tuple(v_981))))) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then (if not-caught-fail(v_983) then (if not-caught-fail(v_990) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if (v_983 && 3-proj-3-tuple(v_1000)) then (if not-caught-fail(v_1001) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then (v_1001,2-proj-3-tuple(v_1000),true,2-proj-3-tuple(v_1009),3-proj-3-tuple(v_1009)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {473}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {474}insert statestore(bob,alice,sid,statepack_d(hs_1010,cs1_1012,cs2_1013))
    ) | (
        {476}!
        {495}get statestore(=bob,=alice,=sid,statepack_d(hs_1014: handshakestate,cs1_1015: cipherstate,cs2_1016: cipherstate)) in
        {477}let hs_1017: handshakestate = handshakestatesetcs(hs_1014,cs2_1016) in
        {478}let v_1018: bitstring = catch-fail(handshakestateunpack(hs_1017)) in
        {479}let v_1019: bitstring = catch-fail((empty,empty,empty)) in
        {480}let v_1020: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1018))) in
        {481}let v_1021: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1020))) in
        {482}let v_1022: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1021),2-proj-2-tuple(v_1021),3-proj-3-tuple(v_1020),msg_d(bob,alice,sid))) in
        {483}let v_1023: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1020))) in
        {484}let v_1024: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1021))) && success?(1-proj-3-tuple(v_1020))) then (if (not-caught-fail(v_1023) && success?(is-true(success?(1-proj-2-tuple(v_1023))))) then cipherstatepack(1-proj-2-tuple(v_1023),increment_nonce(2-proj-2-tuple(v_1021))) else fail-any) else fail-any)) in
        {485}let v_1025: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1020)) && success?(1-proj-3-tuple(v_1020))) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-2-tuple(v_1021))))) then (if not-caught-fail(v_1022) then (if not-caught-fail(v_1024) then (v_1024,v_1022) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {486}let v_1026: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1025),2-proj-3-tuple(v_1020),3-proj-3-tuple(v_1020)))) in
        {487}let v_1027: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1025)) && success?(symmetricstatepack(1-proj-2-tuple(v_1025),2-proj-3-tuple(v_1020),3-proj-3-tuple(v_1020)))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-3-tuple(v_1026))))) then symmetricstatepack(1-proj-3-tuple(v_1026),2-proj-3-tuple(v_1026),hash(3-proj-3-tuple(v_1026),2-proj-2-tuple(v_1025))) else fail-any) else fail-any)) in
        {488}let v_1028: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1018)) then (if (not-caught-fail(v_1020) && success?(is-true(success?(1-proj-3-tuple(v_1020))))) then (if (not-caught-fail(v_1025) && success?(is-true(success?(1-proj-2-tuple(v_1025))))) then (if not-caught-fail(v_1027) then (v_1027,2-proj-2-tuple(v_1025)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {489}let v_1029: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1028),2-proj-7-tuple(v_1018),3-proj-7-tuple(v_1018),4-proj-7-tuple(v_1018),5-proj-7-tuple(v_1018),6-proj-7-tuple(v_1018),7-proj-7-tuple(v_1018))) in
        {490}let v_1030: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1019),2-proj-3-tuple(v_1019),2-proj-2-tuple(v_1028))) in
        {491}let (hs_1031: handshakestate,message_d_1032: bitstring) = (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-7-tuple(v_1018))))) then (if (not-caught-fail(v_1019) && success?(is-true(success?(1-proj-3-tuple(v_1019))))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then (if not-caught-fail(v_1029) then (if not-caught-fail(v_1030) then (v_1029,v_1030) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {492}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {493}insert statestore(bob,alice,sid,statepack_e(hs_1031,cs1_1015,handshakestategetcs(hs_1031)));
        {494}out(pub, message_d_1032)
    ) | (
        {496}!
        {516}get statestore(=bob,=alice,=sid,statepack_e(hs_1033: handshakestate,cs1_1034: cipherstate,cs2_1035: cipherstate)) in
        {497}let hs_1036: handshakestate = handshakestatesetcs(hs_1033,cs1_1034) in
        {498}in(pub, message_e_1037: bitstring);
        {499}let v_1038: bitstring = catch-fail(handshakestateunpack(hs_1036)) in
        {500}let v_1039: bitstring = catch-fail(deconcat3(message_e_1037)) in
        {501}let v_1040: bool = catch-fail(true) in
        {502}let v_1041: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1038))) in
        {503}let v_1042: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1041))) in
        {504}let v_1043: aead = catch-fail(decrypt(1-proj-2-tuple(v_1042),2-proj-2-tuple(v_1042),3-proj-3-tuple(v_1041),3-proj-3-tuple(v_1039))) in
        {505}let v_1044: bitstring = catch-fail(aeadunpack(v_1043)) in
        {506}let v_1045: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1041))) in
        {507}let v_1046: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1042))) && success?(1-proj-3-tuple(v_1041))) then (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-2-tuple(v_1045))))) then cipherstatepack(1-proj-2-tuple(v_1045),increment_nonce(2-proj-2-tuple(v_1042))) else fail-any) else fail-any)) in
        {508}let v_1047: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1039)) && (success?(3-proj-3-tuple(v_1041)) && success?(1-proj-3-tuple(v_1041)))) then (if (not-caught-fail(v_1042) && success?(is-true(success?(1-proj-2-tuple(v_1042))))) then (if not-caught-fail(v_1043) then (if (not-caught-fail(v_1044) && success?(is-true(success?(1-proj-3-tuple(v_1044))))) then (if not-caught-fail(v_1046) then (v_1046,3-proj-3-tuple(v_1044),1-proj-3-tuple(v_1044)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {509}let v_1048: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1047),2-proj-3-tuple(v_1041),3-proj-3-tuple(v_1041)))) in
        {510}let v_1049: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1039)) && success?(symmetricstatepack(1-proj-3-tuple(v_1047),2-proj-3-tuple(v_1041),3-proj-3-tuple(v_1041)))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then symmetricstatepack(1-proj-3-tuple(v_1048),2-proj-3-tuple(v_1048),hash(3-proj-3-tuple(v_1048),3-proj-3-tuple(v_1039))) else fail-any) else fail-any)) in
        {511}let v_1050: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1039)) && success?(1-proj-7-tuple(v_1038))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-3-tuple(v_1041))))) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-3-tuple(v_1047))))) then (if not-caught-fail(v_1049) then (v_1049,2-proj-3-tuple(v_1047),3-proj-3-tuple(v_1047)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {512}let v_1051: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1050),2-proj-7-tuple(v_1038),3-proj-7-tuple(v_1038),4-proj-7-tuple(v_1038),5-proj-7-tuple(v_1038),6-proj-7-tuple(v_1038),7-proj-7-tuple(v_1038))) in
        {513}let (hs_1052: handshakestate,plaintext_e: bitstring,valid_1053: bool) = (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-7-tuple(v_1038))))) then (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-3-tuple(v_1039))))) then (if not-caught-fail(v_1040) then (if (not-caught-fail(v_1050) && success?(is-true(success?(1-proj-3-tuple(v_1050))))) then (if (v_1040 && 3-proj-3-tuple(v_1050)) then (if not-caught-fail(v_1051) then (v_1051,2-proj-3-tuple(v_1050),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {514}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {515}event RecvEnd(valid_1053)
    ) | (
        {517}event LeakS(phase0,bob);
        {518}out(pub, key_s(bob))
    ) | (
        {519}phase 1;
        {520}event LeakS(phase1,bob);
        {521}out(pub, key_s(bob))
    )
) | (
    {522}let s_1054: keypair = keypairpack(empty,empty) in
    {523}out(pub, getpublickey(s_1054));
    (
        {524}let e_1055: keypair = keypairpack(empty,empty) in
        {525}let rs_1056: key = empty in
        {526}let re_1057: key = empty in
        {527}let v_1058: bitstring = catch-fail(hash(somename,empty)) in
        {528}let v_1059: key = catch-fail(v_1058) in
        {529}let v_1060: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {530}let v_1061: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1058) then (if not-caught-fail(v_1059) then (if not-caught-fail(v_1060) then symmetricstatepack(v_1060,v_1059,v_1058) else fail-any) else fail-any) else fail-any))) in
        {531}let v_1062: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1058) then (if not-caught-fail(v_1059) then (if not-caught-fail(v_1060) then symmetricstatepack(v_1060,v_1059,v_1058) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1061) && success?(is-true(success?(1-proj-3-tuple(v_1061))))) then symmetricstatepack(1-proj-3-tuple(v_1061),2-proj-3-tuple(v_1061),hash(3-proj-3-tuple(v_1061),empty)) else fail-any) else fail-any)) in
        {532}let hs_1063: handshakestate = (if not-caught-fail(v_1062) then handshakestatepack(v_1062,s_1054,e_1055,rs_1056,re_1057,empty,false) else fail-any) in
        {533}insert statestore(bob,charlie,sid,statepack_a(hs_1063))
    ) | (
        {567}get statestore(=bob,=charlie,=sid,statepack_a(hs_1064: handshakestate)) in
        {534}in(pub, message_a_1065: bitstring);
        {535}let v_1066: bitstring = catch-fail(handshakestateunpack(hs_1064)) in
        {536}let v_1067: bitstring = catch-fail(deconcat3(message_a_1065)) in
        {537}let v_1068: bool = catch-fail(true) in
        {538}let v_1069: key = catch-fail(1-proj-3-tuple(v_1067)) in
        {539}let v_1070: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1066))) in
        {540}let v_1071: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1066)) then (if (not-caught-fail(v_1070) && success?(is-true(success?(1-proj-3-tuple(v_1070))))) then symmetricstatepack(1-proj-3-tuple(v_1070),2-proj-3-tuple(v_1070),hash(3-proj-3-tuple(v_1070),v_1069)) else fail-any) else fail-any)) in
        {541}let v_1072: bitstring = catch-fail(symmetricstateunpack(v_1071)) in
        {542}let v_1073: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1072))) in
        {543}let v_1074: aead = catch-fail(decrypt(1-proj-2-tuple(v_1073),2-proj-2-tuple(v_1073),3-proj-3-tuple(v_1072),2-proj-3-tuple(v_1067))) in
        {544}let v_1075: bitstring = catch-fail(aeadunpack(v_1074)) in
        {545}let v_1076: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1072))) in
        {546}let v_1077: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1073))) && success?(1-proj-3-tuple(v_1072))) then (if (not-caught-fail(v_1076) && success?(is-true(success?(1-proj-2-tuple(v_1076))))) then cipherstatepack(1-proj-2-tuple(v_1076),increment_nonce(2-proj-2-tuple(v_1073))) else fail-any) else fail-any)) in
        {547}let v_1078: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1067)) && (success?(3-proj-3-tuple(v_1072)) && success?(1-proj-3-tuple(v_1072)))) then (if (not-caught-fail(v_1073) && success?(is-true(success?(1-proj-2-tuple(v_1073))))) then (if not-caught-fail(v_1074) then (if (not-caught-fail(v_1075) && success?(is-true(success?(1-proj-3-tuple(v_1075))))) then (if not-caught-fail(v_1077) then (v_1077,3-proj-3-tuple(v_1075),1-proj-3-tuple(v_1075)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {548}let v_1079: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1078),2-proj-3-tuple(v_1072),3-proj-3-tuple(v_1072)))) in
        {549}let v_1080: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1067)) && success?(symmetricstatepack(1-proj-3-tuple(v_1078),2-proj-3-tuple(v_1072),3-proj-3-tuple(v_1072)))) then (if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-3-tuple(v_1079))))) then symmetricstatepack(1-proj-3-tuple(v_1079),2-proj-3-tuple(v_1079),hash(3-proj-3-tuple(v_1079),2-proj-3-tuple(v_1067))) else fail-any) else fail-any)) in
        {550}let v_1081: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1067)) then (if (not-caught-fail(v_1072) && success?(is-true(success?(1-proj-3-tuple(v_1072))))) then (if (not-caught-fail(v_1078) && success?(is-true(success?(1-proj-3-tuple(v_1078))))) then (if not-caught-fail(v_1080) then (v_1080,2-proj-3-tuple(v_1078),3-proj-3-tuple(v_1078)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {551}let v_1082: key = catch-fail(2-proj-3-tuple(v_1081)) in
        {552}let v_1083: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1081))) in
        {553}let v_1084: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1083))) in
        {554}let v_1085: aead = catch-fail(decrypt(1-proj-2-tuple(v_1084),2-proj-2-tuple(v_1084),3-proj-3-tuple(v_1083),3-proj-3-tuple(v_1067))) in
        {555}let v_1086: bitstring = catch-fail(aeadunpack(v_1085)) in
        {556}let v_1087: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1083))) in
        {557}let v_1088: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1084))) && success?(1-proj-3-tuple(v_1083))) then (if (not-caught-fail(v_1087) && success?(is-true(success?(1-proj-2-tuple(v_1087))))) then cipherstatepack(1-proj-2-tuple(v_1087),increment_nonce(2-proj-2-tuple(v_1084))) else fail-any) else fail-any)) in
        {558}let v_1089: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1067)) && (success?(3-proj-3-tuple(v_1083)) && success?(1-proj-3-tuple(v_1083)))) then (if (not-caught-fail(v_1084) && success?(is-true(success?(1-proj-2-tuple(v_1084))))) then (if not-caught-fail(v_1085) then (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-3-tuple(v_1086))))) then (if not-caught-fail(v_1088) then (v_1088,3-proj-3-tuple(v_1086),1-proj-3-tuple(v_1086)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {559}let v_1090: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1089),2-proj-3-tuple(v_1083),3-proj-3-tuple(v_1083)))) in
        {560}let v_1091: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1067)) && success?(symmetricstatepack(1-proj-3-tuple(v_1089),2-proj-3-tuple(v_1083),3-proj-3-tuple(v_1083)))) then (if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-3-tuple(v_1090))))) then symmetricstatepack(1-proj-3-tuple(v_1090),2-proj-3-tuple(v_1090),hash(3-proj-3-tuple(v_1090),3-proj-3-tuple(v_1067))) else fail-any) else fail-any)) in
        {561}let v_1092: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1067)) && success?(1-proj-3-tuple(v_1081))) then (if (not-caught-fail(v_1083) && success?(is-true(success?(1-proj-3-tuple(v_1083))))) then (if (not-caught-fail(v_1089) && success?(is-true(success?(1-proj-3-tuple(v_1089))))) then (if not-caught-fail(v_1091) then (v_1091,2-proj-3-tuple(v_1089),3-proj-3-tuple(v_1089)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {562}let v_1093: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {563}let v_1094: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1092),2-proj-7-tuple(v_1066),3-proj-7-tuple(v_1066),v_1082,v_1069,6-proj-7-tuple(v_1066),7-proj-7-tuple(v_1066))) in
        {564}let (hs_1095: handshakestate,plaintext_a_1096: bitstring,valid_1097: bool) = (if (not-caught-fail(v_1066) && success?(is-true(success?(1-proj-7-tuple(v_1066))))) then (if (not-caught-fail(v_1067) && success?(is-true(success?(1-proj-3-tuple(v_1067))))) then (if not-caught-fail(v_1068) then (if not-caught-fail(v_1069) then (if not-caught-fail(v_1071) then (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-3-tuple(v_1081))))) then (if not-caught-fail(v_1082) then (if (not-caught-fail(v_1092) && success?(is-true(success?(1-proj-3-tuple(v_1092))))) then (if ((3-proj-3-tuple(v_1081) && 3-proj-3-tuple(v_1092)) && (v_1082 = getpublickey((if not-caught-fail(v_1093) then keypairpack(validkey(v_1093),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1094) then (v_1094,2-proj-3-tuple(v_1092),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {565}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1096);
        {566}insert statestore(bob,charlie,sid,statepack_b(hs_1095))
    ) | (
        {615}get statestore(=bob,=charlie,=sid,statepack_b(hs_1098: handshakestate)) in
        {568}let v_1099: bitstring = catch-fail(handshakestateunpack(hs_1098)) in
        {569}let v_1100: bitstring = catch-fail((empty,empty,empty)) in
        {570}let v_1101: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {571}let v_1102: keypair = catch-fail((if not-caught-fail(v_1101) then keypairpack(validkey(v_1101),key_e(bob,charlie,sid)) else fail-any)) in
        {572}let v_1103: bitstring = catch-fail(getpublickey(v_1102)) in
        {573}let v_1104: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1099))) in
        {574}let v_1105: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1104) && success?(is-true(success?(1-proj-3-tuple(v_1104))))) then symmetricstatepack(1-proj-3-tuple(v_1104),2-proj-3-tuple(v_1104),hash(3-proj-3-tuple(v_1104),v_1103)) else fail-any) else fail-any)) in
        {575}let v_1106: bitstring = catch-fail(keypairunpack(v_1102)) in
        {576}let v_1107: bitstring = catch-fail(symmetricstateunpack(v_1105)) in
        {577}let v_1108: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1107),(if success?(5-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then dhexp(2-proj-2-tuple(v_1106),5-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {578}let v_1109: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1107),(if success?(5-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then dhexp(2-proj-2-tuple(v_1106),5-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {579}let v_1110: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1107),(if success?(5-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then dhexp(2-proj-2-tuple(v_1106),5-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {580}let v_1111: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then dhexp(2-proj-2-tuple(v_1106),5-proj-7-tuple(v_1099)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1107))) then (if not-caught-fail(v_1108) then (if not-caught-fail(v_1109) then (if not-caught-fail(v_1110) then (v_1108,v_1109,v_1110) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {581}let v_1112: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then dhexp(2-proj-2-tuple(v_1106),5-proj-7-tuple(v_1099)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1107) && success?(is-true(success?(1-proj-3-tuple(v_1107))))) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-3-tuple(v_1111))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1111)) then cipherstatepack(2-proj-3-tuple(v_1111),minnonce) else fail-any),1-proj-3-tuple(v_1111),3-proj-3-tuple(v_1107)) else fail-any) else fail-any) else fail-any)) in
        {582}let v_1113: bitstring = catch-fail(keypairunpack(v_1102)) in
        {583}let v_1114: bitstring = catch-fail(symmetricstateunpack(v_1112)) in
        {584}let v_1115: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1114),(if success?(4-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),4-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {585}let v_1116: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1114),(if success?(4-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),4-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {586}let v_1117: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1114),(if success?(4-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),4-proj-7-tuple(v_1099)) else fail-any) else fail-any))) in
        {587}let v_1118: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),4-proj-7-tuple(v_1099)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1114))) then (if not-caught-fail(v_1115) then (if not-caught-fail(v_1116) then (if not-caught-fail(v_1117) then (v_1115,v_1116,v_1117) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {588}let v_1119: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_1099)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),4-proj-7-tuple(v_1099)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1114) && success?(is-true(success?(1-proj-3-tuple(v_1114))))) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1118)) then cipherstatepack(2-proj-3-tuple(v_1118),minnonce) else fail-any),1-proj-3-tuple(v_1118),3-proj-3-tuple(v_1114)) else fail-any) else fail-any) else fail-any)) in
        {589}let v_1120: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {590}let v_1121: keypair = catch-fail((if not-caught-fail(v_1120) then keypairpack(validkey(v_1120),key_s(bob)) else fail-any)) in
        {591}let v_1122: bitstring = catch-fail(symmetricstateunpack(v_1119)) in
        {592}let v_1123: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1122))) in
        {593}let v_1124: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1123),2-proj-2-tuple(v_1123),3-proj-3-tuple(v_1122),getpublickey(v_1121))) in
        {594}let v_1125: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1122))) in
        {595}let v_1126: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1123))) && success?(1-proj-3-tuple(v_1122))) then (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-2-tuple(v_1125))))) then cipherstatepack(1-proj-2-tuple(v_1125),increment_nonce(2-proj-2-tuple(v_1123))) else fail-any) else fail-any)) in
        {596}let v_1127: bitstring = catch-fail((if (success?(getpublickey(v_1121)) && (success?(3-proj-3-tuple(v_1122)) && success?(1-proj-3-tuple(v_1122)))) then (if (not-caught-fail(v_1123) && success?(is-true(success?(1-proj-2-tuple(v_1123))))) then (if not-caught-fail(v_1124) then (if not-caught-fail(v_1126) then (v_1126,v_1124) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {597}let v_1128: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1127),2-proj-3-tuple(v_1122),3-proj-3-tuple(v_1122)))) in
        {598}let v_1129: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1127)) && success?(symmetricstatepack(1-proj-2-tuple(v_1127),2-proj-3-tuple(v_1122),3-proj-3-tuple(v_1122)))) then (if (not-caught-fail(v_1128) && success?(is-true(success?(1-proj-3-tuple(v_1128))))) then symmetricstatepack(1-proj-3-tuple(v_1128),2-proj-3-tuple(v_1128),hash(3-proj-3-tuple(v_1128),2-proj-2-tuple(v_1127))) else fail-any) else fail-any)) in
        {599}let v_1130: bitstring = catch-fail((if success?(getpublickey(v_1121)) then (if (not-caught-fail(v_1122) && success?(is-true(success?(1-proj-3-tuple(v_1122))))) then (if (not-caught-fail(v_1127) && success?(is-true(success?(1-proj-2-tuple(v_1127))))) then (if not-caught-fail(v_1129) then (v_1129,2-proj-2-tuple(v_1127)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {600}let v_1131: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1130))) in
        {601}let v_1132: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1131))) in
        {602}let v_1133: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1132),2-proj-2-tuple(v_1132),3-proj-3-tuple(v_1131),msg_b(bob,charlie,sid))) in
        {603}let v_1134: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1131))) in
        {604}let v_1135: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1132))) && success?(1-proj-3-tuple(v_1131))) then (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-2-tuple(v_1134))))) then cipherstatepack(1-proj-2-tuple(v_1134),increment_nonce(2-proj-2-tuple(v_1132))) else fail-any) else fail-any)) in
        {605}let v_1136: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1131)) && success?(1-proj-3-tuple(v_1131))) then (if (not-caught-fail(v_1132) && success?(is-true(success?(1-proj-2-tuple(v_1132))))) then (if not-caught-fail(v_1133) then (if not-caught-fail(v_1135) then (v_1135,v_1133) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {606}let v_1137: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1136),2-proj-3-tuple(v_1131),3-proj-3-tuple(v_1131)))) in
        {607}let v_1138: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1136)) && success?(symmetricstatepack(1-proj-2-tuple(v_1136),2-proj-3-tuple(v_1131),3-proj-3-tuple(v_1131)))) then (if (not-caught-fail(v_1137) && success?(is-true(success?(1-proj-3-tuple(v_1137))))) then symmetricstatepack(1-proj-3-tuple(v_1137),2-proj-3-tuple(v_1137),hash(3-proj-3-tuple(v_1137),2-proj-2-tuple(v_1136))) else fail-any) else fail-any)) in
        {608}let v_1139: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1130)) then (if (not-caught-fail(v_1131) && success?(is-true(success?(1-proj-3-tuple(v_1131))))) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-2-tuple(v_1136))))) then (if not-caught-fail(v_1138) then (v_1138,2-proj-2-tuple(v_1136)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {609}let v_1140: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1139),v_1121,v_1102,4-proj-7-tuple(v_1099),5-proj-7-tuple(v_1099),6-proj-7-tuple(v_1099),7-proj-7-tuple(v_1099))) in
        {610}let v_1141: bitstring = catch-fail(concat3(v_1103,2-proj-2-tuple(v_1130),2-proj-2-tuple(v_1139))) in
        {611}let (hs_1142: handshakestate,message_b_1143: bitstring) = (if (not-caught-fail(v_1099) && success?(is-true(success?(1-proj-7-tuple(v_1099))))) then (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-3-tuple(v_1100))))) then (if not-caught-fail(v_1102) then (if not-caught-fail(v_1103) then (if not-caught-fail(v_1105) then (if not-caught-fail(v_1112) then (if not-caught-fail(v_1119) then (if not-caught-fail(v_1121) then (if (not-caught-fail(v_1130) && success?(is-true(success?(1-proj-2-tuple(v_1130))))) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-2-tuple(v_1139))))) then (if not-caught-fail(v_1140) then (if not-caught-fail(v_1141) then (v_1140,v_1141) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {612}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {613}insert statestore(bob,charlie,sid,statepack_c(hs_1142));
        {614}out(pub, message_b_1143)
    ) | (
        {649}get statestore(=bob,=charlie,=sid,statepack_c(hs_1144: handshakestate)) in
        {616}in(pub, message_c_1145: bitstring);
        {617}let v_1146: bitstring = catch-fail(handshakestateunpack(hs_1144)) in
        {618}let v_1147: bitstring = catch-fail(deconcat3(message_c_1145)) in
        {619}let v_1148: bool = catch-fail(true) in
        {620}let v_1149: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1146))) in
        {621}let v_1150: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1146))) in
        {622}let v_1151: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1150),(if (success?(5-proj-7-tuple(v_1146)) && success?(2-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),5-proj-7-tuple(v_1146)) else fail-any) else fail-any))) in
        {623}let v_1152: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1150),(if (success?(5-proj-7-tuple(v_1146)) && success?(2-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),5-proj-7-tuple(v_1146)) else fail-any) else fail-any))) in
        {624}let v_1153: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1150),(if (success?(5-proj-7-tuple(v_1146)) && success?(2-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),5-proj-7-tuple(v_1146)) else fail-any) else fail-any))) in
        {625}let v_1154: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_1146)) && success?(2-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),5-proj-7-tuple(v_1146)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1150))) then (if not-caught-fail(v_1151) then (if not-caught-fail(v_1152) then (if not-caught-fail(v_1153) then (v_1151,v_1152,v_1153) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {626}let v_1155: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_1146)) && success?(2-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),5-proj-7-tuple(v_1146)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1150) && success?(is-true(success?(1-proj-3-tuple(v_1150))))) then (if (not-caught-fail(v_1154) && success?(is-true(success?(1-proj-3-tuple(v_1154))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1154)) then cipherstatepack(2-proj-3-tuple(v_1154),minnonce) else fail-any),1-proj-3-tuple(v_1154),3-proj-3-tuple(v_1150)) else fail-any) else fail-any) else fail-any)) in
        {627}let v_1156: bitstring = catch-fail(symmetricstateunpack(v_1155)) in
        {628}let v_1157: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1156))) in
        {629}let v_1158: aead = catch-fail(decrypt(1-proj-2-tuple(v_1157),2-proj-2-tuple(v_1157),3-proj-3-tuple(v_1156),3-proj-3-tuple(v_1147))) in
        {630}let v_1159: bitstring = catch-fail(aeadunpack(v_1158)) in
        {631}let v_1160: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1156))) in
        {632}let v_1161: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1157))) && success?(1-proj-3-tuple(v_1156))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then cipherstatepack(1-proj-2-tuple(v_1160),increment_nonce(2-proj-2-tuple(v_1157))) else fail-any) else fail-any)) in
        {633}let v_1162: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1147)) && (success?(3-proj-3-tuple(v_1156)) && success?(1-proj-3-tuple(v_1156)))) then (if (not-caught-fail(v_1157) && success?(is-true(success?(1-proj-2-tuple(v_1157))))) then (if not-caught-fail(v_1158) then (if (not-caught-fail(v_1159) && success?(is-true(success?(1-proj-3-tuple(v_1159))))) then (if not-caught-fail(v_1161) then (v_1161,3-proj-3-tuple(v_1159),1-proj-3-tuple(v_1159)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {634}let v_1163: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1162),2-proj-3-tuple(v_1156),3-proj-3-tuple(v_1156)))) in
        {635}let v_1164: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1147)) && success?(symmetricstatepack(1-proj-3-tuple(v_1162),2-proj-3-tuple(v_1156),3-proj-3-tuple(v_1156)))) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-3-tuple(v_1163))))) then symmetricstatepack(1-proj-3-tuple(v_1163),2-proj-3-tuple(v_1163),hash(3-proj-3-tuple(v_1163),3-proj-3-tuple(v_1147))) else fail-any) else fail-any)) in
        {636}let v_1165: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1147)) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-3-tuple(v_1156))))) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-3-tuple(v_1162))))) then (if not-caught-fail(v_1164) then (v_1164,2-proj-3-tuple(v_1162),3-proj-3-tuple(v_1162)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {637}let v_1166: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1165),2-proj-7-tuple(v_1146),3-proj-7-tuple(v_1146),4-proj-7-tuple(v_1146),5-proj-7-tuple(v_1146),6-proj-7-tuple(v_1146),7-proj-7-tuple(v_1146))) in
        {638}let v_1167: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1165))) in
        {639}let v_1168: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1167),zero)) in
        {640}let v_1169: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1167),zero)) in
        {641}let v_1170: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1167),zero)) in
        {642}let v_1171: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1167)) then (if not-caught-fail(v_1168) then (if not-caught-fail(v_1169) then (if not-caught-fail(v_1170) then (v_1168,v_1169,v_1170) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {643}let v_1172: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1171)) then cipherstatepack(1-proj-3-tuple(v_1171),minnonce) else fail-any)) in
        {644}let v_1173: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1171)) then cipherstatepack(2-proj-3-tuple(v_1171),minnonce) else fail-any)) in
        {645}let v_1174: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1165)) then (if (not-caught-fail(v_1167) && success?(is-true(success?(1-proj-3-tuple(v_1167))))) then (if (not-caught-fail(v_1171) && success?(is-true(success?(1-proj-3-tuple(v_1171))))) then (if not-caught-fail(v_1172) then (if not-caught-fail(v_1173) then (1-proj-3-tuple(v_1165),v_1172,v_1173) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {646}let (hs_1175: handshakestate,plaintext_c_1176: bitstring,valid_1177: bool,cs1_1178: cipherstate,cs2_1179: cipherstate) = (if (not-caught-fail(v_1146) && success?(is-true(success?(1-proj-7-tuple(v_1146))))) then (if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then (if not-caught-fail(v_1148) then (if not-caught-fail(v_1155) then (if (not-caught-fail(v_1165) && success?(is-true(success?(1-proj-3-tuple(v_1165))))) then (if (v_1148 && 3-proj-3-tuple(v_1165)) then (if not-caught-fail(v_1166) then (if (not-caught-fail(v_1174) && success?(is-true(success?(1-proj-3-tuple(v_1174))))) then (v_1166,2-proj-3-tuple(v_1165),true,2-proj-3-tuple(v_1174),3-proj-3-tuple(v_1174)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {647}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1176);
        {648}insert statestore(bob,charlie,sid,statepack_d(hs_1175,cs1_1178,cs2_1179))
    ) | (
        {650}!
        {669}get statestore(=bob,=charlie,=sid,statepack_d(hs_1180: handshakestate,cs1_1181: cipherstate,cs2_1182: cipherstate)) in
        {651}let hs_1183: handshakestate = handshakestatesetcs(hs_1180,cs2_1182) in
        {652}let v_1184: bitstring = catch-fail(handshakestateunpack(hs_1183)) in
        {653}let v_1185: bitstring = catch-fail((empty,empty,empty)) in
        {654}let v_1186: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1184))) in
        {655}let v_1187: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1186))) in
        {656}let v_1188: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1187),2-proj-2-tuple(v_1187),3-proj-3-tuple(v_1186),msg_d(bob,charlie,sid))) in
        {657}let v_1189: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1186))) in
        {658}let v_1190: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1187))) && success?(1-proj-3-tuple(v_1186))) then (if (not-caught-fail(v_1189) && success?(is-true(success?(1-proj-2-tuple(v_1189))))) then cipherstatepack(1-proj-2-tuple(v_1189),increment_nonce(2-proj-2-tuple(v_1187))) else fail-any) else fail-any)) in
        {659}let v_1191: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1186)) && success?(1-proj-3-tuple(v_1186))) then (if (not-caught-fail(v_1187) && success?(is-true(success?(1-proj-2-tuple(v_1187))))) then (if not-caught-fail(v_1188) then (if not-caught-fail(v_1190) then (v_1190,v_1188) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {660}let v_1192: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1191),2-proj-3-tuple(v_1186),3-proj-3-tuple(v_1186)))) in
        {661}let v_1193: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1191)) && success?(symmetricstatepack(1-proj-2-tuple(v_1191),2-proj-3-tuple(v_1186),3-proj-3-tuple(v_1186)))) then (if (not-caught-fail(v_1192) && success?(is-true(success?(1-proj-3-tuple(v_1192))))) then symmetricstatepack(1-proj-3-tuple(v_1192),2-proj-3-tuple(v_1192),hash(3-proj-3-tuple(v_1192),2-proj-2-tuple(v_1191))) else fail-any) else fail-any)) in
        {662}let v_1194: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1184)) then (if (not-caught-fail(v_1186) && success?(is-true(success?(1-proj-3-tuple(v_1186))))) then (if (not-caught-fail(v_1191) && success?(is-true(success?(1-proj-2-tuple(v_1191))))) then (if not-caught-fail(v_1193) then (v_1193,2-proj-2-tuple(v_1191)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {663}let v_1195: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1194),2-proj-7-tuple(v_1184),3-proj-7-tuple(v_1184),4-proj-7-tuple(v_1184),5-proj-7-tuple(v_1184),6-proj-7-tuple(v_1184),7-proj-7-tuple(v_1184))) in
        {664}let v_1196: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1185),2-proj-3-tuple(v_1185),2-proj-2-tuple(v_1194))) in
        {665}let (hs_1197: handshakestate,message_d_1198: bitstring) = (if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-7-tuple(v_1184))))) then (if (not-caught-fail(v_1185) && success?(is-true(success?(1-proj-3-tuple(v_1185))))) then (if (not-caught-fail(v_1194) && success?(is-true(success?(1-proj-2-tuple(v_1194))))) then (if not-caught-fail(v_1195) then (if not-caught-fail(v_1196) then (v_1195,v_1196) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {666}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {667}insert statestore(bob,charlie,sid,statepack_e(hs_1197,cs1_1181,handshakestategetcs(hs_1197)));
        {668}out(pub, message_d_1198)
    ) | (
        {670}!
        {690}get statestore(=bob,=charlie,=sid,statepack_e(hs_1199: handshakestate,cs1_1200: cipherstate,cs2_1201: cipherstate)) in
        {671}let hs_1202: handshakestate = handshakestatesetcs(hs_1199,cs1_1200) in
        {672}in(pub, message_e_1203: bitstring);
        {673}let v_1204: bitstring = catch-fail(handshakestateunpack(hs_1202)) in
        {674}let v_1205: bitstring = catch-fail(deconcat3(message_e_1203)) in
        {675}let v_1206: bool = catch-fail(true) in
        {676}let v_1207: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1204))) in
        {677}let v_1208: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1207))) in
        {678}let v_1209: aead = catch-fail(decrypt(1-proj-2-tuple(v_1208),2-proj-2-tuple(v_1208),3-proj-3-tuple(v_1207),3-proj-3-tuple(v_1205))) in
        {679}let v_1210: bitstring = catch-fail(aeadunpack(v_1209)) in
        {680}let v_1211: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1207))) in
        {681}let v_1212: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1208))) && success?(1-proj-3-tuple(v_1207))) then (if (not-caught-fail(v_1211) && success?(is-true(success?(1-proj-2-tuple(v_1211))))) then cipherstatepack(1-proj-2-tuple(v_1211),increment_nonce(2-proj-2-tuple(v_1208))) else fail-any) else fail-any)) in
        {682}let v_1213: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1205)) && (success?(3-proj-3-tuple(v_1207)) && success?(1-proj-3-tuple(v_1207)))) then (if (not-caught-fail(v_1208) && success?(is-true(success?(1-proj-2-tuple(v_1208))))) then (if not-caught-fail(v_1209) then (if (not-caught-fail(v_1210) && success?(is-true(success?(1-proj-3-tuple(v_1210))))) then (if not-caught-fail(v_1212) then (v_1212,3-proj-3-tuple(v_1210),1-proj-3-tuple(v_1210)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {683}let v_1214: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1213),2-proj-3-tuple(v_1207),3-proj-3-tuple(v_1207)))) in
        {684}let v_1215: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1205)) && success?(symmetricstatepack(1-proj-3-tuple(v_1213),2-proj-3-tuple(v_1207),3-proj-3-tuple(v_1207)))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-3-tuple(v_1214))))) then symmetricstatepack(1-proj-3-tuple(v_1214),2-proj-3-tuple(v_1214),hash(3-proj-3-tuple(v_1214),3-proj-3-tuple(v_1205))) else fail-any) else fail-any)) in
        {685}let v_1216: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1205)) && success?(1-proj-7-tuple(v_1204))) then (if (not-caught-fail(v_1207) && success?(is-true(success?(1-proj-3-tuple(v_1207))))) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-3-tuple(v_1213))))) then (if not-caught-fail(v_1215) then (v_1215,2-proj-3-tuple(v_1213),3-proj-3-tuple(v_1213)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {686}let v_1217: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1216),2-proj-7-tuple(v_1204),3-proj-7-tuple(v_1204),4-proj-7-tuple(v_1204),5-proj-7-tuple(v_1204),6-proj-7-tuple(v_1204),7-proj-7-tuple(v_1204))) in
        {687}let (hs_1218: handshakestate,plaintext_e_1219: bitstring,valid_1220: bool) = (if (not-caught-fail(v_1204) && success?(is-true(success?(1-proj-7-tuple(v_1204))))) then (if (not-caught-fail(v_1205) && success?(is-true(success?(1-proj-3-tuple(v_1205))))) then (if not-caught-fail(v_1206) then (if (not-caught-fail(v_1216) && success?(is-true(success?(1-proj-3-tuple(v_1216))))) then (if (v_1206 && 3-proj-3-tuple(v_1216)) then (if not-caught-fail(v_1217) then (v_1217,2-proj-3-tuple(v_1216),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {688}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1219);
        {689}event RecvEnd(valid_1220)
    ) | (
        {691}event LeakS(phase0,bob);
        {692}out(pub, key_s(bob))
    ) | (
        {693}phase 1;
        {694}event LeakS(phase1,bob);
        {695}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 158 rules in the queue.
400 rules inserted. The rule base contains 384 rules. 25 rules in the queue.
600 rules inserted. The rule base contains 564 rules. 43 rules in the queue.
800 rules inserted. The rule base contains 737 rules. 202 rules in the queue.
1000 rules inserted. The rule base contains 902 rules. 220 rules in the queue.
1200 rules inserted. The rule base contains 1047 rules. 250 rules in the queue.
1400 rules inserted. The rule base contains 1182 rules. 205 rules in the queue.
1600 rules inserted. The rule base contains 1356 rules. 227 rules in the queue.
1800 rules inserted. The rule base contains 1461 rules. 268 rules in the queue.
2000 rules inserted. The rule base contains 1617 rules. 312 rules in the queue.
2200 rules inserted. The rule base contains 1719 rules. 298 rules in the queue.
2400 rules inserted. The rule base contains 1839 rules. 323 rules in the queue.
2600 rules inserted. The rule base contains 1962 rules. 334 rules in the queue.
2800 rules inserted. The rule base contains 2057 rules. 334 rules in the queue.
3000 rules inserted. The rule base contains 2196 rules. 348 rules in the queue.
3200 rules inserted. The rule base contains 2344 rules. 337 rules in the queue.
3400 rules inserted. The rule base contains 2498 rules. 360 rules in the queue.
3600 rules inserted. The rule base contains 2596 rules. 326 rules in the queue.
3800 rules inserted. The rule base contains 2698 rules. 301 rules in the queue.
4000 rules inserted. The rule base contains 2829 rules. 300 rules in the queue.
4200 rules inserted. The rule base contains 2944 rules. 269 rules in the queue.
4400 rules inserted. The rule base contains 3060 rules. 257 rules in the queue.
4600 rules inserted. The rule base contains 3201 rules. 246 rules in the queue.
4800 rules inserted. The rule base contains 3304 rules. 242 rules in the queue.
5000 rules inserted. The rule base contains 3398 rules. 232 rules in the queue.
5200 rules inserted. The rule base contains 3552 rules. 234 rules in the queue.
5400 rules inserted. The rule base contains 3694 rules. 274 rules in the queue.
5600 rules inserted. The rule base contains 3833 rules. 273 rules in the queue.
5800 rules inserted. The rule base contains 3978 rules. 260 rules in the queue.
6000 rules inserted. The rule base contains 4112 rules. 268 rules in the queue.
6200 rules inserted. The rule base contains 4249 rules. 271 rules in the queue.
6400 rules inserted. The rule base contains 4369 rules. 230 rules in the queue.
6600 rules inserted. The rule base contains 4521 rules. 242 rules in the queue.
6800 rules inserted. The rule base contains 4650 rules. 273 rules in the queue.
7000 rules inserted. The rule base contains 4751 rules. 273 rules in the queue.
7200 rules inserted. The rule base contains 4893 rules. 249 rules in the queue.
7400 rules inserted. The rule base contains 4989 rules. 220 rules in the queue.
7600 rules inserted. The rule base contains 5079 rules. 170 rules in the queue.
7800 rules inserted. The rule base contains 5214 rules. 178 rules in the queue.
8000 rules inserted. The rule base contains 5342 rules. 126 rules in the queue.
8200 rules inserted. The rule base contains 5414 rules. 68 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_1081193782]),msg_a(alice,charlie,sid[!1 = @sid_1081193782]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193783]),msg_a(alice,charlie,sid[!1 = @sid_1081193782])))
Abbreviations:
sid_1081193821 = sid[!1 = @sid_1081193811]
sid_1081193822 = sid[!1 = @sid_1081193795]

1. The entry statestore(bob,alice,sid_1081193821,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {359}.
table(statestore(bob,alice,sid_1081193821,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_1081193822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {187}.
table(statestore(alice,charlie,sid_1081193822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_1081193822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {221}.
The event SendMsg(alice,charlie,stagepack_a(sid_1081193822),msg_a(alice,charlie,sid_1081193822)) may be executed at {218}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193822))) may be sent on channel pub at output {220}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193822)))).

4. The entry statestore(bob,alice,sid_1081193821,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {393}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193822))) that may be sent on channel pub by 3 may be received at input {360}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_1081193822),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1081193821),msg_a(alice,charlie,sid_1081193822)) may be executed at {391}.
end(RecvMsg(bob,alice,stagepack_a(sid_1081193821),msg_a(alice,charlie,sid_1081193822))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_1081193825]),msg_a(alice,charlie,sid[!1 = @sid_1081193825]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193826]),msg_a(alice,charlie,sid[!1 = @sid_1081193825])))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081193829]),msg_a(alice,bob,sid[!1 = @sid_1081193829]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193830]),msg_a(alice,bob,sid[!1 = @sid_1081193829])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_1081193839]),msg_a(alice,charlie,sid[!1 = @sid_1081193839]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193840]),msg_a(alice,charlie,sid[!1 = @sid_1081193839])))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081193843]),msg_a(alice,bob,sid[!1 = @sid_1081193843]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193844]),msg_a(alice,bob,sid[!1 = @sid_1081193843])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_1081193853]),msg_a(alice,charlie,sid[!1 = @sid_1081193853]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193854]),msg_a(alice,charlie,sid[!1 = @sid_1081193853])))
Abbreviations:
sid_1081193892 = sid[!1 = @sid_1081193882]
sid_1081193893 = sid[!1 = @sid_1081193866]

1. The entry statestore(bob,alice,sid_1081193892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {359}.
table(statestore(bob,alice,sid_1081193892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_1081193893,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {187}.
table(statestore(alice,charlie,sid_1081193893,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_1081193893,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {221}.
The event SendMsg(alice,charlie,stagepack_a(sid_1081193893),msg_a(alice,charlie,sid_1081193893)) may be executed at {218}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193893))) may be sent on channel pub at output {220}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193893)))).

4. The entry statestore(bob,alice,sid_1081193892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {393}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193893))) that may be sent on channel pub by 3 may be received at input {360}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_1081193893),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1081193892),msg_a(alice,charlie,sid_1081193893)) may be executed at {391}.
end(RecvMsg(bob,alice,stagepack_a(sid_1081193892),msg_a(alice,charlie,sid_1081193893))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_1081193896]),msg_a(alice,charlie,sid[!1 = @sid_1081193896]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_1081193897]),msg_a(alice,charlie,sid[!1 = @sid_1081193896])))
Abbreviations:
sid_1081193935 = sid[!1 = @sid_1081193925]
sid_1081193936 = sid[!1 = @sid_1081193909]

1. The entry statestore(bob,alice,sid_1081193935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {359}.
table(statestore(bob,alice,sid_1081193935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_1081193936,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {187}.
table(statestore(alice,charlie,sid_1081193936,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_1081193936,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {221}.
The event SendMsg(alice,charlie,stagepack_a(sid_1081193936),msg_a(alice,charlie,sid_1081193936)) may be executed at {218}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193936))) may be sent on channel pub at output {220}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193936)))).

4. The entry statestore(bob,alice,sid_1081193935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {393}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,charlie,sid_1081193936))) that may be sent on channel pub by 3 may be received at input {360}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_1081193936),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_1081193935),msg_a(alice,charlie,sid_1081193936)) may be executed at {391}.
end(RecvMsg(bob,alice,stagepack_a(sid_1081193935),msg_a(alice,charlie,sid_1081193936))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081193939]),msg_a(alice,bob,sid[!1 = @sid_1081193939]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1081193939]))
Abbreviations:
sid_1081194011 = sid[!1 = @sid_1081193986]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1081194011,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1081194011,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_1081194011,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194011),msg_a(alice,bob,sid_1081194011)) may be executed at {46}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))) may be sent on channel pub at output {48}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)).
attacker(encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))).
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 8, the attacker may know empty.
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194011),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194011)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1081194011).
attacker(msg_a(alice,bob,sid_1081194011)).

18. By 17, the attacker may know msg_a(alice,bob,sid_1081194011).
So the attacker may know msg_a(alice,bob,sid_1081194011) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1081194011)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194014]),msg_a(alice,bob,sid[!1 = @sid_1081194014]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1081194014]))
Abbreviations:
sid_1081194087 = sid[!1 = @sid_1081194062]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1081194087,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1081194087,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_1081194087,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194087),msg_a(alice,bob,sid_1081194087)) may be executed at {46}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))) may be sent on channel pub at output {48}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)).
attacker(encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))).
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 8, the attacker may know empty.
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194087),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194087)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1081194087).
attacker(msg_a(alice,bob,sid_1081194087)).

18. By 17, the attacker may know msg_a(alice,bob,sid_1081194087).
So the attacker may know msg_a(alice,bob,sid_1081194087) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1081194087)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194090]),msg_a(alice,bob,sid[!1 = @sid_1081194090]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1081194090]))
Abbreviations:
sid_1081194164 = sid[!1 = @sid_1081194139]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1081194164,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1081194164,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_1081194164,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194164),msg_a(alice,bob,sid_1081194164)) may be executed at {46}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))) may be sent on channel pub at output {48}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)).
attacker(encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))).
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 8, the attacker may know empty.
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194164),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194164)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1081194164).
attacker(msg_a(alice,bob,sid_1081194164)).

18. By 17, the attacker may know msg_a(alice,bob,sid_1081194164).
So the attacker may know msg_a(alice,bob,sid_1081194164) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1081194164)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194167]),msg_a(alice,bob,sid[!1 = @sid_1081194167]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_1081194167]))
Abbreviations:
sid_1081194239 = sid[!1 = @sid_1081194214]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_1081194239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1081194239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_1081194239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194239),msg_a(alice,bob,sid_1081194239)) may be executed at {46}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))) may be sent on channel pub at output {48}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)).
attacker(encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))).
Using the function 2-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g)))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))).
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g))))).

14. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

15. By 14, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

16. By 8, the attacker may know empty.
By 15, the attacker may know increment_nonce(minnonce).
By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))).
By 5, the attacker may know encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194239),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194239)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_1081194239).
attacker(msg_a(alice,bob,sid_1081194239)).

18. By 17, the attacker may know msg_a(alice,bob,sid_1081194239).
So the attacker may know msg_a(alice,bob,sid_1081194239) in phase 1.
attacker_p1(msg_a(alice,bob,sid_1081194239)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194242]),msg_b(bob,alice,sid[!1 = @sid_1081194242]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194243]),msg_a(alice,bob,sid[!1 = @sid_1081194243]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1081194243]),msg_b(bob,alice,sid[!1 = @sid_1081194242])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194251]),msg_b(bob,alice,sid[!1 = @sid_1081194251]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194252]),msg_a(alice,bob,sid[!1 = @sid_1081194252]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1081194252]),msg_b(bob,alice,sid[!1 = @sid_1081194251])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194261]),msg_b(bob,alice,sid[!1 = @sid_1081194261]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194262]),msg_a(alice,bob,sid[!1 = @sid_1081194262]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1081194262]),msg_b(bob,alice,sid[!1 = @sid_1081194261])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194271]),msg_b(bob,alice,sid[!1 = @sid_1081194271]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194272]),msg_a(alice,bob,sid[!1 = @sid_1081194272]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1081194272]),msg_b(bob,alice,sid[!1 = @sid_1081194271])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194280]),msg_b(bob,alice,sid[!1 = @sid_1081194280]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194281]),msg_a(alice,bob,sid[!1 = @sid_1081194281]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_1081194281]),msg_b(bob,alice,sid[!1 = @sid_1081194280])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194304]),msg_c(alice,bob,sid[!1 = @sid_1081194304]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194305]),msg_b(bob,alice,sid[!1 = @sid_1081194305]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194304]),msg_a(alice,bob,sid[!1 = @sid_1081194304]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1081194305]),msg_c(alice,bob,sid[!1 = @sid_1081194304])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194313]),msg_c(alice,bob,sid[!1 = @sid_1081194313]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194314]),msg_b(bob,alice,sid[!1 = @sid_1081194314]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194313]),msg_a(alice,bob,sid[!1 = @sid_1081194313]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1081194314]),msg_c(alice,bob,sid[!1 = @sid_1081194313])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194323]),msg_c(alice,bob,sid[!1 = @sid_1081194323]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194324]),msg_b(bob,alice,sid[!1 = @sid_1081194324]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194323]),msg_a(alice,bob,sid[!1 = @sid_1081194323]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1081194324]),msg_c(alice,bob,sid[!1 = @sid_1081194323])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194333]),msg_c(alice,bob,sid[!1 = @sid_1081194333]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194334]),msg_b(bob,alice,sid[!1 = @sid_1081194334]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194333]),msg_a(alice,bob,sid[!1 = @sid_1081194333]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1081194334]),msg_c(alice,bob,sid[!1 = @sid_1081194333])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194342]),msg_c(alice,bob,sid[!1 = @sid_1081194342]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194343]),msg_b(bob,alice,sid[!1 = @sid_1081194343]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194342]),msg_a(alice,bob,sid[!1 = @sid_1081194342]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_1081194343]),msg_c(alice,bob,sid[!1 = @sid_1081194342])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194366]),msg_d(bob,alice,sid[!1 = @sid_1081194366]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194367]),msg_c(alice,bob,sid[!1 = @sid_1081194367]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194366]),msg_b(bob,alice,sid[!1 = @sid_1081194366]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194367]),msg_a(alice,bob,sid[!1 = @sid_1081194367]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1081194367]),msg_d(bob,alice,sid[!1 = @sid_1081194366])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194375]),msg_d(bob,alice,sid[!1 = @sid_1081194375]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194376]),msg_c(alice,bob,sid[!1 = @sid_1081194376]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194375]),msg_b(bob,alice,sid[!1 = @sid_1081194375]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194376]),msg_a(alice,bob,sid[!1 = @sid_1081194376]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1081194376]),msg_d(bob,alice,sid[!1 = @sid_1081194375])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194385]),msg_d(bob,alice,sid[!1 = @sid_1081194385]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194386]),msg_c(alice,bob,sid[!1 = @sid_1081194386]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194385]),msg_b(bob,alice,sid[!1 = @sid_1081194385]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194386]),msg_a(alice,bob,sid[!1 = @sid_1081194386]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1081194386]),msg_d(bob,alice,sid[!1 = @sid_1081194385])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1330,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194395]),msg_d(bob,alice,sid[!1 = @sid_1081194395]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194396]),msg_c(alice,bob,sid[!1 = @sid_1081194396]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194395]),msg_b(bob,alice,sid[!1 = @sid_1081194395]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194396]),msg_a(alice,bob,sid[!1 = @sid_1081194396]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1081194396]),msg_d(bob,alice,sid[!1 = @sid_1081194395])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194404]),msg_d(bob,alice,sid[!1 = @sid_1081194404]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194405]),msg_c(alice,bob,sid[!1 = @sid_1081194405]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194404]),msg_b(bob,alice,sid[!1 = @sid_1081194404]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194405]),msg_a(alice,bob,sid[!1 = @sid_1081194405]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_1081194405]),msg_d(bob,alice,sid[!1 = @sid_1081194404])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194428]),msg_e(alice,bob,sid[!1 = @sid_1081194428]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194429]),msg_d(bob,alice,sid[!1 = @sid_1081194429]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194428]),msg_c(alice,bob,sid[!1 = @sid_1081194428]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194429]),msg_b(bob,alice,sid[!1 = @sid_1081194429]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194428]),msg_a(alice,bob,sid[!1 = @sid_1081194428]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_1081194429]),msg_e(alice,bob,sid[!1 = @sid_1081194428])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194437]),msg_e(alice,bob,sid[!1 = @sid_1081194437]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194438]),msg_d(bob,alice,sid[!1 = @sid_1081194438]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194437]),msg_c(alice,bob,sid[!1 = @sid_1081194437]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194438]),msg_b(bob,alice,sid[!1 = @sid_1081194438]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194437]),msg_a(alice,bob,sid[!1 = @sid_1081194437]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_1081194438]),msg_e(alice,bob,sid[!1 = @sid_1081194437])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194447]),msg_e(alice,bob,sid[!1 = @sid_1081194447]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194448]),msg_d(bob,alice,sid[!1 = @sid_1081194448]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194447]),msg_c(alice,bob,sid[!1 = @sid_1081194447]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194448]),msg_b(bob,alice,sid[!1 = @sid_1081194448]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194447]),msg_a(alice,bob,sid[!1 = @sid_1081194447]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_1081194448]),msg_e(alice,bob,sid[!1 = @sid_1081194447])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1330,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194457]),msg_e(alice,bob,sid[!1 = @sid_1081194457]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194458]),msg_d(bob,alice,sid[!1 = @sid_1081194458]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194457]),msg_c(alice,bob,sid[!1 = @sid_1081194457]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194458]),msg_b(bob,alice,sid[!1 = @sid_1081194458]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194457]),msg_a(alice,bob,sid[!1 = @sid_1081194457]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_1081194458]),msg_e(alice,bob,sid[!1 = @sid_1081194457])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194466]),msg_e(alice,bob,sid[!1 = @sid_1081194466]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194467]),msg_d(bob,alice,sid[!1 = @sid_1081194467]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194466]),msg_c(alice,bob,sid[!1 = @sid_1081194466]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194467]),msg_b(bob,alice,sid[!1 = @sid_1081194467]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194466]),msg_a(alice,bob,sid[!1 = @sid_1081194466]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_1081194467]),msg_e(alice,bob,sid[!1 = @sid_1081194466])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_1081194488]),msg_e(alice,bob,sid[!1 = @sid_1081194488]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_1081194489]),msg_d(bob,alice,sid[!1 = @sid_1081194489]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_1081194488]),msg_c(alice,bob,sid[!1 = @sid_1081194488]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_1081194489]),msg_b(bob,alice,sid[!1 = @sid_1081194489]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_1081194488]),msg_a(alice,bob,sid[!1 = @sid_1081194488]))) -> end(RecvEnd(true))
Abbreviations:
sid_1081194887 = sid[!1 = @sid_1081194876]
sid_1081194888 = sid[!1 = @sid_1081194808]

1. The entry statestore(bob,alice,sid_1081194887,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {359}.
table(statestore(bob,alice,sid_1081194887,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,bob,sid_1081194888,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_1081194888,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_1081194888,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194888),msg_a(alice,bob,sid_1081194888)) may be executed at {46}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))) may be sent on channel pub at output {48}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))).

4. The entry statestore(bob,alice,sid_1081194887,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {393}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))) that may be sent on channel pub by 3 may be received at input {360}.
We have validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_1081194887,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false))) may be inserted in a table at insert {392}.
table(statestore(bob,alice,sid_1081194887,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false)))).

5. The entry statestore(bob,alice,sid_1081194887,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false))) that may be in a table by 4 may be read at get {441}.
The event SendMsg(bob,alice,stagepack_b(sid_1081194887),msg_b(bob,alice,sid_1081194887)) may be executed at {438}.
So the entry statestore(bob,alice,sid_1081194887,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false))) may be inserted in a table at insert {439}.
table(statestore(bob,alice,sid_1081194887,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false)))).

6. The entry statestore(alice,bob,sid_1081194888,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stagepack_a(sid_1081194888),msg_a(alice,bob,sid_1081194888)) may be executed at {46}.
So the entry statestore(alice,bob,sid_1081194888,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),empty,empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,sid_1081194888,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),empty,empty,empty,true)))).

7. The entry statestore(bob,alice,sid_1081194887,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false))) that may be in a table by 4 may be read at get {441}.
The event SendMsg(bob,alice,stagepack_b(sid_1081194887),msg_b(bob,alice,sid_1081194887)) may be executed at {438}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))) may be sent on channel pub at output {440}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))).

8. The entry statestore(alice,bob,sid_1081194888,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(increment_nonce(minnonce))),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {97}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))) that may be sent on channel pub by 7 may be received at input {50}.
So the entry statestore(alice,bob,sid_1081194888,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true))) may be inserted in a table at insert {96}.
table(statestore(alice,bob,sid_1081194888,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true)))).

9. The entry statestore(alice,bob,sid_1081194888,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true))) that may be in a table by 8 may be read at get {130}.
The event SendMsg(alice,bob,stagepack_c(sid_1081194888),msg_c(alice,bob,sid_1081194888)) may be executed at {127}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))) may be sent on channel pub at output {129}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))).

10. The entry statestore(bob,alice,sid_1081194887,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false))) that may be in a table by 5 may be read at get {475}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))) that may be sent on channel pub by 9 may be received at input {442}.
So the entry statestore(bob,alice,sid_1081194887,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce))) may be inserted in a table at insert {474}.
table(statestore(bob,alice,sid_1081194887,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_1081194887,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce))) that may be in a table by 10 may be read at get {495}.
The event SendMsg(bob,alice,stagepack_d(sid_1081194887),msg_d(bob,alice,sid_1081194887)) may be executed at {492}.
So the entry statestore(bob,alice,sid_1081194887,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {493}.
table(statestore(bob,alice,sid_1081194887,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_1081194888,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true))) that may be in a table by 8 may be read at get {130}.
The event SendMsg(alice,bob,stagepack_c(sid_1081194888),msg_c(alice,bob,sid_1081194888)) may be executed at {127}.
So the entry statestore(alice,bob,sid_1081194888,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce))) may be inserted in a table at insert {128}.
table(statestore(alice,bob,sid_1081194888,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_1081194887,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce))) that may be in a table by 10 may be read at get {495}.
The event SendMsg(bob,alice,stagepack_d(sid_1081194887),msg_d(bob,alice,sid_1081194887)) may be executed at {492}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887))) may be sent on channel pub at output {494}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))).

14. The entry statestore(alice,bob,sid_1081194888,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce))) that may be in a table by 12 may be read at get {151}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887))) that may be sent on channel pub by 13 may be received at input {133}.
So the entry statestore(alice,bob,sid_1081194888,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {150}.
table(statestore(alice,bob,sid_1081194888,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_1081194888,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),key_e(alice,bob,sid_1081194888)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {170}.
The event SendMsg(alice,bob,stagepack_e(sid_1081194888),msg_e(alice,bob,sid_1081194888)) may be executed at {168}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887))),msg_e(alice,bob,sid_1081194888))) may be sent on channel pub at output {169}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887))),msg_e(alice,bob,sid_1081194888)))).

16. The entry statestore(bob,alice,sid_1081194887,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g)),key_e(bob,alice,sid_1081194887)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {516}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_1081194887),g))),dhexp_real(key_e(alice,bob,sid_1081194888),dhexp_real(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_e(alice,bob,sid_1081194888),g))),dhexp_real(key_e(bob,alice,sid_1081194887),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),encrypt(empty,increment_nonce(minnonce),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_1081194888),g))),validkey(dhexp_real(key_s(alice),g)))),msg_a(alice,bob,sid_1081194888))),validkey(dhexp_real(key_e(bob,alice,sid_1081194887),g))),validkey(dhexp_real(key_s(bob),g)))),msg_b(bob,alice,sid_1081194887))),msg_c(alice,bob,sid_1081194888))),msg_d(bob,alice,sid_1081194887))),msg_e(alice,bob,sid_1081194888))) that may be sent on channel pub by 15 may be received at input {498}.
So event RecvEnd(true) may be executed at {515}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
