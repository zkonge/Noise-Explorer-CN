File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 233, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 234, characters 7-8:
Warning: identifier cs rebound.
File "X1K1.noise.passive.pv", line 234, character 36:
Warning: identifier h rebound.
File "X1K1.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 275, character 6:
Warning: identifier e rebound.
File "X1K1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 279, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 279, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 280, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 287, character 6:
Warning: identifier e rebound.
File "X1K1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 293, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 293, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 294, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 301, character 6:
Warning: identifier s rebound.
File "X1K1.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 302, characters 26-27:
Warning: identifier ns rebound.
File "X1K1.noise.passive.pv", line 303, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 303, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 304, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 312, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 312, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 313, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 321, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 321, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 322, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 329, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 329, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 330, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 338, characters 6-7:
Warning: identifier re rebound.
File "X1K1.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 351, characters 6-7:
Warning: identifier re rebound.
File "X1K1.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 355, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 358, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 366, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 366, characters 26-27:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 366, characters 40-45:
Warning: identifier valid1 rebound.
File "X1K1.noise.passive.pv", line 367, characters 6-7:
Warning: identifier rs rebound.
File "X1K1.noise.passive.pv", line 368, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 370, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 378, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 390, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 392, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 400, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 402, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 616, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 618, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 400, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 402, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 609, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 610, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 321, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 321, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 322, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 603, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 378, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 596, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 301, character 6:
Warning: identifier s rebound.
File "X1K1.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 302, characters 26-27:
Warning: identifier ns rebound.
File "X1K1.noise.passive.pv", line 303, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 303, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 304, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 590, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 351, characters 6-7:
Warning: identifier re rebound.
File "X1K1.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 355, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 358, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 583, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 275, character 6:
Warning: identifier e rebound.
File "X1K1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 279, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 279, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 280, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 676, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 677, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 329, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 329, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 330, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 668, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 670, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 390, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 392, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 662, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 312, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 312, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 313, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 656, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 366, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 366, characters 26-27:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 366, characters 40-45:
Warning: identifier valid1 rebound.
File "X1K1.noise.passive.pv", line 367, characters 6-7:
Warning: identifier rs rebound.
File "X1K1.noise.passive.pv", line 368, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 370, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 649, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 287, character 6:
Warning: identifier e rebound.
File "X1K1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ne rebound.
File "X1K1.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 293, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 293, characters 26-35:
Warning: identifier ciphertext rebound.
File "X1K1.noise.passive.pv", line 294, characters 6-7:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "X1K1.noise.passive.pv", line 643, characters 8-9:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 338, characters 6-7:
Warning: identifier re rebound.
File "X1K1.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "X1K1.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "X1K1.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_591: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_591));
    (
        {6}let e_592: keypair = keypairpack(empty,empty) in
        {7}let v_593: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {8}let rs_594: key = getpublickey((if not-caught-fail(v_593) then keypairpack(validkey(v_593),key_s(bob)) else fail-any)) in
        {9}let re_595: key = empty in
        {10}let v_596: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_597: key = catch-fail(v_596) in
        {12}let v_598: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_599: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_596) then (if not-caught-fail(v_597) then (if not-caught-fail(v_598) then symmetricstatepack(v_598,v_597,v_596) else fail-any) else fail-any) else fail-any))) in
        {14}let v_600: symmetricstate = catch-fail((if success?((if not-caught-fail(v_596) then (if not-caught-fail(v_597) then (if not-caught-fail(v_598) then symmetricstatepack(v_598,v_597,v_596) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then symmetricstatepack(1-proj-3-tuple(v_599),2-proj-3-tuple(v_599),hash(3-proj-3-tuple(v_599),empty)) else fail-any) else fail-any)) in
        {15}let v_601: bitstring = catch-fail(symmetricstateunpack(v_600)) in
        {16}let v_602: symmetricstate = catch-fail((if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-3-tuple(v_601))))) then symmetricstatepack(1-proj-3-tuple(v_601),2-proj-3-tuple(v_601),hash(3-proj-3-tuple(v_601),rs_594)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_600) then (if not-caught-fail(v_602) then handshakestatepack(v_602,s_591,e_592,rs_594,re_595,empty,true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {41}get statestore(=alice,=bob,=sid,statepack_a(hs_603: handshakestate)) in
        {19}let v_604: bitstring = catch-fail(handshakestateunpack(hs_603)) in
        {20}let v_605: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_606: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_607: keypair = catch-fail((if not-caught-fail(v_606) then keypairpack(validkey(v_606),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_608: bitstring = catch-fail(getpublickey(v_607)) in
        {24}let v_609: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_604))) in
        {25}let v_610: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_604)) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then symmetricstatepack(1-proj-3-tuple(v_609),2-proj-3-tuple(v_609),hash(3-proj-3-tuple(v_609),v_608)) else fail-any) else fail-any)) in
        {26}let v_611: bitstring = catch-fail(symmetricstateunpack(v_610)) in
        {27}let v_612: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_611))) in
        {28}let v_613: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_612),2-proj-2-tuple(v_612),3-proj-3-tuple(v_611),msg_a(alice,bob,sid))) in
        {29}let v_614: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_611))) in
        {30}let v_615: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_612))) && success?(1-proj-3-tuple(v_611))) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-2-tuple(v_614))))) then cipherstatepack(1-proj-2-tuple(v_614),increment_nonce(2-proj-2-tuple(v_612))) else fail-any) else fail-any)) in
        {31}let v_616: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_611)) && success?(1-proj-3-tuple(v_611))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then (if not-caught-fail(v_613) then (if not-caught-fail(v_615) then (v_615,v_613) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {32}let v_617: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_616),2-proj-3-tuple(v_611),3-proj-3-tuple(v_611)))) in
        {33}let v_618: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_616)) && success?(symmetricstatepack(1-proj-2-tuple(v_616),2-proj-3-tuple(v_611),3-proj-3-tuple(v_611)))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-3-tuple(v_617))))) then symmetricstatepack(1-proj-3-tuple(v_617),2-proj-3-tuple(v_617),hash(3-proj-3-tuple(v_617),2-proj-2-tuple(v_616))) else fail-any) else fail-any)) in
        {34}let v_619: bitstring = catch-fail((if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-3-tuple(v_611))))) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then (if not-caught-fail(v_618) then (v_618,2-proj-2-tuple(v_616)) else fail-any) else fail-any) else fail-any)) in
        {35}let v_620: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_619),2-proj-7-tuple(v_604),v_607,4-proj-7-tuple(v_604),5-proj-7-tuple(v_604),6-proj-7-tuple(v_604),7-proj-7-tuple(v_604))) in
        {36}let v_621: bitstring = catch-fail(concat3(v_608,2-proj-3-tuple(v_605),2-proj-2-tuple(v_619))) in
        {37}let (hs_622: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-7-tuple(v_604))))) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then (if not-caught-fail(v_607) then (if not-caught-fail(v_608) then (if not-caught-fail(v_610) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then (if not-caught-fail(v_620) then (if not-caught-fail(v_621) then (v_620,v_621) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {38}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {39}insert statestore(alice,bob,sid,statepack_b(hs_622));
        {40}out(pub, message_a)
    ) | (
        {77}get statestore(=alice,=bob,=sid,statepack_b(hs_623: handshakestate)) in
        {42}in(pub, message_b: bitstring);
        {43}let v_624: bitstring = catch-fail(handshakestateunpack(hs_623)) in
        {44}let v_625: bitstring = catch-fail(deconcat3(message_b)) in
        {45}let v_626: bool = catch-fail(true) in
        {46}let v_627: key = catch-fail(1-proj-3-tuple(v_625)) in
        {47}let v_628: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_624))) in
        {48}let v_629: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_624)) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-3-tuple(v_628))))) then symmetricstatepack(1-proj-3-tuple(v_628),2-proj-3-tuple(v_628),hash(3-proj-3-tuple(v_628),v_627)) else fail-any) else fail-any)) in
        {49}let v_630: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_624))) in
        {50}let v_631: bitstring = catch-fail(symmetricstateunpack(v_629)) in
        {51}let v_632: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_631),(if success?(3-proj-7-tuple(v_624)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-2-tuple(v_630))))) then dhexp(2-proj-2-tuple(v_630),v_627) else fail-any) else fail-any))) in
        {52}let v_633: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_631),(if success?(3-proj-7-tuple(v_624)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-2-tuple(v_630))))) then dhexp(2-proj-2-tuple(v_630),v_627) else fail-any) else fail-any))) in
        {53}let v_634: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_631),(if success?(3-proj-7-tuple(v_624)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-2-tuple(v_630))))) then dhexp(2-proj-2-tuple(v_630),v_627) else fail-any) else fail-any))) in
        {54}let v_635: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_624)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-2-tuple(v_630))))) then dhexp(2-proj-2-tuple(v_630),v_627) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_631))) then (if not-caught-fail(v_632) then (if not-caught-fail(v_633) then (if not-caught-fail(v_634) then (v_632,v_633,v_634) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {55}let v_636: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_624)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-2-tuple(v_630))))) then dhexp(2-proj-2-tuple(v_630),v_627) else fail-any) else fail-any)) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_635)) then cipherstatepack(2-proj-3-tuple(v_635),minnonce) else fail-any),1-proj-3-tuple(v_635),3-proj-3-tuple(v_631)) else fail-any) else fail-any) else fail-any)) in
        {56}let v_637: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_624))) in
        {57}let v_638: bitstring = catch-fail(symmetricstateunpack(v_636)) in
        {58}let v_639: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_638),(if (success?(4-proj-7-tuple(v_624)) && success?(3-proj-7-tuple(v_624))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {59}let v_640: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_638),(if (success?(4-proj-7-tuple(v_624)) && success?(3-proj-7-tuple(v_624))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {60}let v_641: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_638),(if (success?(4-proj-7-tuple(v_624)) && success?(3-proj-7-tuple(v_624))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {61}let v_642: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_624)) && success?(3-proj-7-tuple(v_624))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_638))) then (if not-caught-fail(v_639) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then (v_639,v_640,v_641) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {62}let v_643: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_624)) && success?(3-proj-7-tuple(v_624))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_642)) then cipherstatepack(2-proj-3-tuple(v_642),minnonce) else fail-any),1-proj-3-tuple(v_642),3-proj-3-tuple(v_638)) else fail-any) else fail-any) else fail-any)) in
        {63}let v_644: bitstring = catch-fail(symmetricstateunpack(v_643)) in
        {64}let v_645: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_644))) in
        {65}let v_646: aead = catch-fail(decrypt(1-proj-2-tuple(v_645),2-proj-2-tuple(v_645),3-proj-3-tuple(v_644),3-proj-3-tuple(v_625))) in
        {66}let v_647: bitstring = catch-fail(aeadunpack(v_646)) in
        {67}let v_648: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_644))) in
        {68}let v_649: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_645))) && success?(1-proj-3-tuple(v_644))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then cipherstatepack(1-proj-2-tuple(v_648),increment_nonce(2-proj-2-tuple(v_645))) else fail-any) else fail-any)) in
        {69}let v_650: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_625)) && (success?(3-proj-3-tuple(v_644)) && success?(1-proj-3-tuple(v_644)))) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then (if not-caught-fail(v_646) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then (if not-caught-fail(v_649) then (v_649,3-proj-3-tuple(v_647),1-proj-3-tuple(v_647)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {70}let v_651: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_650),2-proj-3-tuple(v_644),3-proj-3-tuple(v_644)))) in
        {71}let v_652: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_625)) && success?(symmetricstatepack(1-proj-3-tuple(v_650),2-proj-3-tuple(v_644),3-proj-3-tuple(v_644)))) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then symmetricstatepack(1-proj-3-tuple(v_651),2-proj-3-tuple(v_651),hash(3-proj-3-tuple(v_651),3-proj-3-tuple(v_625))) else fail-any) else fail-any)) in
        {72}let v_653: bitstring = catch-fail((if success?(3-proj-3-tuple(v_625)) then (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-3-tuple(v_644))))) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then (if not-caught-fail(v_652) then (v_652,2-proj-3-tuple(v_650),3-proj-3-tuple(v_650)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {73}let v_654: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_653),2-proj-7-tuple(v_624),3-proj-7-tuple(v_624),4-proj-7-tuple(v_624),v_627,6-proj-7-tuple(v_624),7-proj-7-tuple(v_624))) in
        {74}let (hs_655: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-7-tuple(v_624))))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then (if not-caught-fail(v_626) then (if not-caught-fail(v_627) then (if not-caught-fail(v_629) then (if not-caught-fail(v_636) then (if not-caught-fail(v_643) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then (if (v_626 && 3-proj-3-tuple(v_653)) then (if not-caught-fail(v_654) then (v_654,2-proj-3-tuple(v_653),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {75}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {76}insert statestore(alice,bob,sid,statepack_c(hs_655))
    ) | (
        {106}get statestore(=alice,=bob,=sid,statepack_c(hs_656: handshakestate)) in
        {78}let v_657: bitstring = catch-fail(handshakestateunpack(hs_656)) in
        {79}let v_658: bitstring = catch-fail((empty,empty,empty)) in
        {80}let v_659: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {81}let v_660: keypair = catch-fail((if not-caught-fail(v_659) then keypairpack(validkey(v_659),key_s(alice)) else fail-any)) in
        {82}let v_661: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_657))) in
        {83}let v_662: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_661))) in
        {84}let v_663: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_662),2-proj-2-tuple(v_662),3-proj-3-tuple(v_661),getpublickey(v_660))) in
        {85}let v_664: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_661))) in
        {86}let v_665: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_662))) && success?(1-proj-3-tuple(v_661))) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-2-tuple(v_664))))) then cipherstatepack(1-proj-2-tuple(v_664),increment_nonce(2-proj-2-tuple(v_662))) else fail-any) else fail-any)) in
        {87}let v_666: bitstring = catch-fail((if (success?(getpublickey(v_660)) && (success?(3-proj-3-tuple(v_661)) && success?(1-proj-3-tuple(v_661)))) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-2-tuple(v_662))))) then (if not-caught-fail(v_663) then (if not-caught-fail(v_665) then (v_665,v_663) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {88}let v_667: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_666),2-proj-3-tuple(v_661),3-proj-3-tuple(v_661)))) in
        {89}let v_668: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_666)) && success?(symmetricstatepack(1-proj-2-tuple(v_666),2-proj-3-tuple(v_661),3-proj-3-tuple(v_661)))) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-3-tuple(v_667))))) then symmetricstatepack(1-proj-3-tuple(v_667),2-proj-3-tuple(v_667),hash(3-proj-3-tuple(v_667),2-proj-2-tuple(v_666))) else fail-any) else fail-any)) in
        {90}let v_669: bitstring = catch-fail((if (success?(getpublickey(v_660)) && success?(1-proj-7-tuple(v_657))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then (if not-caught-fail(v_668) then (v_668,2-proj-2-tuple(v_666)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {91}let v_670: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_669))) in
        {92}let v_671: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_670))) in
        {93}let v_672: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_671),2-proj-2-tuple(v_671),3-proj-3-tuple(v_670),msg_c(alice,bob,sid))) in
        {94}let v_673: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_670))) in
        {95}let v_674: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_671))) && success?(1-proj-3-tuple(v_670))) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-2-tuple(v_673))))) then cipherstatepack(1-proj-2-tuple(v_673),increment_nonce(2-proj-2-tuple(v_671))) else fail-any) else fail-any)) in
        {96}let v_675: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_670)) && success?(1-proj-3-tuple(v_670))) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-2-tuple(v_671))))) then (if not-caught-fail(v_672) then (if not-caught-fail(v_674) then (v_674,v_672) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {97}let v_676: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_675),2-proj-3-tuple(v_670),3-proj-3-tuple(v_670)))) in
        {98}let v_677: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_675)) && success?(symmetricstatepack(1-proj-2-tuple(v_675),2-proj-3-tuple(v_670),3-proj-3-tuple(v_670)))) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-3-tuple(v_676))))) then symmetricstatepack(1-proj-3-tuple(v_676),2-proj-3-tuple(v_676),hash(3-proj-3-tuple(v_676),2-proj-2-tuple(v_675))) else fail-any) else fail-any)) in
        {99}let v_678: bitstring = catch-fail((if success?(1-proj-2-tuple(v_669)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then (if not-caught-fail(v_677) then (v_677,2-proj-2-tuple(v_675)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {100}let v_679: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_678),v_660,3-proj-7-tuple(v_657),4-proj-7-tuple(v_657),5-proj-7-tuple(v_657),6-proj-7-tuple(v_657),7-proj-7-tuple(v_657))) in
        {101}let v_680: bitstring = catch-fail(concat3(1-proj-3-tuple(v_658),2-proj-2-tuple(v_669),2-proj-2-tuple(v_678))) in
        {102}let (hs_681: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-7-tuple(v_657))))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then (if not-caught-fail(v_660) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-2-tuple(v_678))))) then (if not-caught-fail(v_679) then (if not-caught-fail(v_680) then (v_679,v_680) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {103}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {104}insert statestore(alice,bob,sid,statepack_d(hs_681));
        {105}out(pub, message_c)
    ) | (
        {140}get statestore(=alice,=bob,=sid,statepack_d(hs_682: handshakestate)) in
        {107}in(pub, message_d: bitstring);
        {108}let v_683: bitstring = catch-fail(handshakestateunpack(hs_682)) in
        {109}let v_684: bitstring = catch-fail(deconcat3(message_d)) in
        {110}let v_685: bool = catch-fail(true) in
        {111}let v_686: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_683))) in
        {112}let v_687: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_683))) in
        {113}let v_688: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_687),(if (success?(5-proj-7-tuple(v_683)) && success?(2-proj-7-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then dhexp(2-proj-2-tuple(v_686),5-proj-7-tuple(v_683)) else fail-any) else fail-any))) in
        {114}let v_689: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_687),(if (success?(5-proj-7-tuple(v_683)) && success?(2-proj-7-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then dhexp(2-proj-2-tuple(v_686),5-proj-7-tuple(v_683)) else fail-any) else fail-any))) in
        {115}let v_690: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_687),(if (success?(5-proj-7-tuple(v_683)) && success?(2-proj-7-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then dhexp(2-proj-2-tuple(v_686),5-proj-7-tuple(v_683)) else fail-any) else fail-any))) in
        {116}let v_691: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_683)) && success?(2-proj-7-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then dhexp(2-proj-2-tuple(v_686),5-proj-7-tuple(v_683)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_687))) then (if not-caught-fail(v_688) then (if not-caught-fail(v_689) then (if not-caught-fail(v_690) then (v_688,v_689,v_690) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {117}let v_692: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_683)) && success?(2-proj-7-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then dhexp(2-proj-2-tuple(v_686),5-proj-7-tuple(v_683)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_683))) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-3-tuple(v_691))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_691)) then cipherstatepack(2-proj-3-tuple(v_691),minnonce) else fail-any),1-proj-3-tuple(v_691),3-proj-3-tuple(v_687)) else fail-any) else fail-any) else fail-any)) in
        {118}let v_693: bitstring = catch-fail(symmetricstateunpack(v_692)) in
        {119}let v_694: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_693))) in
        {120}let v_695: aead = catch-fail(decrypt(1-proj-2-tuple(v_694),2-proj-2-tuple(v_694),3-proj-3-tuple(v_693),3-proj-3-tuple(v_684))) in
        {121}let v_696: bitstring = catch-fail(aeadunpack(v_695)) in
        {122}let v_697: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_693))) in
        {123}let v_698: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_694))) && success?(1-proj-3-tuple(v_693))) then (if (not-caught-fail(v_697) && success?(is-true(success?(1-proj-2-tuple(v_697))))) then cipherstatepack(1-proj-2-tuple(v_697),increment_nonce(2-proj-2-tuple(v_694))) else fail-any) else fail-any)) in
        {124}let v_699: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_684)) && (success?(3-proj-3-tuple(v_693)) && success?(1-proj-3-tuple(v_693)))) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-2-tuple(v_694))))) then (if not-caught-fail(v_695) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-3-tuple(v_696))))) then (if not-caught-fail(v_698) then (v_698,3-proj-3-tuple(v_696),1-proj-3-tuple(v_696)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {125}let v_700: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_699),2-proj-3-tuple(v_693),3-proj-3-tuple(v_693)))) in
        {126}let v_701: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_684)) && success?(symmetricstatepack(1-proj-3-tuple(v_699),2-proj-3-tuple(v_693),3-proj-3-tuple(v_693)))) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-3-tuple(v_700))))) then symmetricstatepack(1-proj-3-tuple(v_700),2-proj-3-tuple(v_700),hash(3-proj-3-tuple(v_700),3-proj-3-tuple(v_684))) else fail-any) else fail-any)) in
        {127}let v_702: bitstring = catch-fail((if success?(3-proj-3-tuple(v_684)) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-3-tuple(v_693))))) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-3-tuple(v_699))))) then (if not-caught-fail(v_701) then (v_701,2-proj-3-tuple(v_699),3-proj-3-tuple(v_699)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {128}let v_703: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_702),2-proj-7-tuple(v_683),3-proj-7-tuple(v_683),4-proj-7-tuple(v_683),5-proj-7-tuple(v_683),6-proj-7-tuple(v_683),7-proj-7-tuple(v_683))) in
        {129}let v_704: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_702))) in
        {130}let v_705: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_704),zero)) in
        {131}let v_706: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_704),zero)) in
        {132}let v_707: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_704),zero)) in
        {133}let v_708: bitstring = catch-fail((if success?(2-proj-3-tuple(v_704)) then (if not-caught-fail(v_705) then (if not-caught-fail(v_706) then (if not-caught-fail(v_707) then (v_705,v_706,v_707) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {134}let v_709: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_708)) then cipherstatepack(1-proj-3-tuple(v_708),minnonce) else fail-any)) in
        {135}let v_710: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_708)) then cipherstatepack(2-proj-3-tuple(v_708),minnonce) else fail-any)) in
        {136}let v_711: bitstring = catch-fail((if success?(1-proj-3-tuple(v_702)) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-3-tuple(v_704))))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if not-caught-fail(v_709) then (if not-caught-fail(v_710) then (1-proj-3-tuple(v_702),v_709,v_710) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {137}let (hs_712: handshakestate,plaintext_d: bitstring,valid_713: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-7-tuple(v_683))))) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-3-tuple(v_684))))) then (if not-caught-fail(v_685) then (if not-caught-fail(v_692) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if (v_685 && 3-proj-3-tuple(v_702)) then (if not-caught-fail(v_703) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then (v_703,2-proj-3-tuple(v_702),true,2-proj-3-tuple(v_711),3-proj-3-tuple(v_711)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {138}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {139}insert statestore(alice,bob,sid,statepack_e(hs_712,cs1,cs2))
    ) | (
        {141}!
        {160}get statestore(=alice,=bob,=sid,statepack_e(hs_714: handshakestate,cs1_715: cipherstate,cs2_716: cipherstate)) in
        {142}let hs_717: handshakestate = handshakestatesetcs(hs_714,cs1_715) in
        {143}let v_718: bitstring = catch-fail(handshakestateunpack(hs_717)) in
        {144}let v_719: bitstring = catch-fail((empty,empty,empty)) in
        {145}let v_720: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_718))) in
        {146}let v_721: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_720))) in
        {147}let v_722: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_721),2-proj-2-tuple(v_721),3-proj-3-tuple(v_720),msg_e(alice,bob,sid))) in
        {148}let v_723: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_720))) in
        {149}let v_724: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_721))) && success?(1-proj-3-tuple(v_720))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-2-tuple(v_723))))) then cipherstatepack(1-proj-2-tuple(v_723),increment_nonce(2-proj-2-tuple(v_721))) else fail-any) else fail-any)) in
        {150}let v_725: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_720)) && success?(1-proj-3-tuple(v_720))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-2-tuple(v_721))))) then (if not-caught-fail(v_722) then (if not-caught-fail(v_724) then (v_724,v_722) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {151}let v_726: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_725),2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)))) in
        {152}let v_727: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_725)) && success?(symmetricstatepack(1-proj-2-tuple(v_725),2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)))) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-3-tuple(v_726))))) then symmetricstatepack(1-proj-3-tuple(v_726),2-proj-3-tuple(v_726),hash(3-proj-3-tuple(v_726),2-proj-2-tuple(v_725))) else fail-any) else fail-any)) in
        {153}let v_728: bitstring = catch-fail((if success?(1-proj-7-tuple(v_718)) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-2-tuple(v_725))))) then (if not-caught-fail(v_727) then (v_727,2-proj-2-tuple(v_725)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {154}let v_729: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_728),2-proj-7-tuple(v_718),3-proj-7-tuple(v_718),4-proj-7-tuple(v_718),5-proj-7-tuple(v_718),6-proj-7-tuple(v_718),7-proj-7-tuple(v_718))) in
        {155}let v_730: bitstring = catch-fail(concat3(1-proj-3-tuple(v_719),2-proj-3-tuple(v_719),2-proj-2-tuple(v_728))) in
        {156}let (hs_731: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-7-tuple(v_718))))) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-3-tuple(v_719))))) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-2-tuple(v_728))))) then (if not-caught-fail(v_729) then (if not-caught-fail(v_730) then (v_729,v_730) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {157}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {158}insert statestore(alice,bob,sid,statepack_f(hs_731,handshakestategetcs(hs_731),cs2_716));
        {159}out(pub, message_e)
    ) | (
        {161}!
        {181}get statestore(=alice,=bob,=sid,statepack_f(hs_732: handshakestate,cs1_733: cipherstate,cs2_734: cipherstate)) in
        {162}let hs_735: handshakestate = handshakestatesetcs(hs_732,cs2_734) in
        {163}in(pub, message_f: bitstring);
        {164}let v_736: bitstring = catch-fail(handshakestateunpack(hs_735)) in
        {165}let v_737: bitstring = catch-fail(deconcat3(message_f)) in
        {166}let v_738: bool = catch-fail(true) in
        {167}let v_739: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_736))) in
        {168}let v_740: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_739))) in
        {169}let v_741: aead = catch-fail(decrypt(1-proj-2-tuple(v_740),2-proj-2-tuple(v_740),3-proj-3-tuple(v_739),3-proj-3-tuple(v_737))) in
        {170}let v_742: bitstring = catch-fail(aeadunpack(v_741)) in
        {171}let v_743: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_739))) in
        {172}let v_744: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_740))) && success?(1-proj-3-tuple(v_739))) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-2-tuple(v_743))))) then cipherstatepack(1-proj-2-tuple(v_743),increment_nonce(2-proj-2-tuple(v_740))) else fail-any) else fail-any)) in
        {173}let v_745: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_737)) && (success?(3-proj-3-tuple(v_739)) && success?(1-proj-3-tuple(v_739)))) then (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-2-tuple(v_740))))) then (if not-caught-fail(v_741) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if not-caught-fail(v_744) then (v_744,3-proj-3-tuple(v_742),1-proj-3-tuple(v_742)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {174}let v_746: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_745),2-proj-3-tuple(v_739),3-proj-3-tuple(v_739)))) in
        {175}let v_747: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_737)) && success?(symmetricstatepack(1-proj-3-tuple(v_745),2-proj-3-tuple(v_739),3-proj-3-tuple(v_739)))) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-3-tuple(v_746))))) then symmetricstatepack(1-proj-3-tuple(v_746),2-proj-3-tuple(v_746),hash(3-proj-3-tuple(v_746),3-proj-3-tuple(v_737))) else fail-any) else fail-any)) in
        {176}let v_748: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_737)) && success?(1-proj-7-tuple(v_736))) then (if (not-caught-fail(v_739) && success?(is-true(success?(1-proj-3-tuple(v_739))))) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-3-tuple(v_745))))) then (if not-caught-fail(v_747) then (v_747,2-proj-3-tuple(v_745),3-proj-3-tuple(v_745)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {177}let v_749: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_748),2-proj-7-tuple(v_736),3-proj-7-tuple(v_736),4-proj-7-tuple(v_736),5-proj-7-tuple(v_736),6-proj-7-tuple(v_736),7-proj-7-tuple(v_736))) in
        {178}let (hs_750: handshakestate,plaintext_f: bitstring,valid_751: bool) = (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-7-tuple(v_736))))) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then (if not-caught-fail(v_738) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-3-tuple(v_748))))) then (if (v_738 && 3-proj-3-tuple(v_748)) then (if not-caught-fail(v_749) then (v_749,2-proj-3-tuple(v_748),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {179}event RecvMsg(alice,bob,stagepack_f(sid),plaintext_f);
        {180}event RecvEnd(valid_751)
    ) | (
        {182}event LeakS(phase0,alice);
        {183}out(pub, key_s(alice))
    ) | (
        {184}phase 1;
        {185}event LeakS(phase1,alice);
        {186}out(pub, key_s(alice))
    )
) | (
    {187}let s_752: keypair = keypairpack(empty,empty) in
    {188}out(pub, getpublickey(s_752));
    (
        {189}let e_753: keypair = keypairpack(empty,empty) in
        {190}let v_754: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {191}let rs_755: key = getpublickey((if not-caught-fail(v_754) then keypairpack(validkey(v_754),key_s(charlie)) else fail-any)) in
        {192}let re_756: key = empty in
        {193}let v_757: bitstring = catch-fail(hash(somename,empty)) in
        {194}let v_758: key = catch-fail(v_757) in
        {195}let v_759: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {196}let v_760: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_757) then (if not-caught-fail(v_758) then (if not-caught-fail(v_759) then symmetricstatepack(v_759,v_758,v_757) else fail-any) else fail-any) else fail-any))) in
        {197}let v_761: symmetricstate = catch-fail((if success?((if not-caught-fail(v_757) then (if not-caught-fail(v_758) then (if not-caught-fail(v_759) then symmetricstatepack(v_759,v_758,v_757) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then symmetricstatepack(1-proj-3-tuple(v_760),2-proj-3-tuple(v_760),hash(3-proj-3-tuple(v_760),empty)) else fail-any) else fail-any)) in
        {198}let v_762: bitstring = catch-fail(symmetricstateunpack(v_761)) in
        {199}let v_763: symmetricstate = catch-fail((if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then symmetricstatepack(1-proj-3-tuple(v_762),2-proj-3-tuple(v_762),hash(3-proj-3-tuple(v_762),rs_755)) else fail-any)) in
        {200}let hs_764: handshakestate = (if not-caught-fail(v_761) then (if not-caught-fail(v_763) then handshakestatepack(v_763,s_752,e_753,rs_755,re_756,empty,true) else fail-any) else fail-any) in
        {201}insert statestore(alice,charlie,sid,statepack_a(hs_764))
    ) | (
        {224}get statestore(=alice,=charlie,=sid,statepack_a(hs_765: handshakestate)) in
        {202}let v_766: bitstring = catch-fail(handshakestateunpack(hs_765)) in
        {203}let v_767: bitstring = catch-fail((empty,empty,empty)) in
        {204}let v_768: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {205}let v_769: keypair = catch-fail((if not-caught-fail(v_768) then keypairpack(validkey(v_768),key_e(alice,charlie,sid)) else fail-any)) in
        {206}let v_770: bitstring = catch-fail(getpublickey(v_769)) in
        {207}let v_771: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_766))) in
        {208}let v_772: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_766)) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then symmetricstatepack(1-proj-3-tuple(v_771),2-proj-3-tuple(v_771),hash(3-proj-3-tuple(v_771),v_770)) else fail-any) else fail-any)) in
        {209}let v_773: bitstring = catch-fail(symmetricstateunpack(v_772)) in
        {210}let v_774: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_773))) in
        {211}let v_775: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_774),2-proj-2-tuple(v_774),3-proj-3-tuple(v_773),msg_a(alice,charlie,sid))) in
        {212}let v_776: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_773))) in
        {213}let v_777: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_774))) && success?(1-proj-3-tuple(v_773))) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then cipherstatepack(1-proj-2-tuple(v_776),increment_nonce(2-proj-2-tuple(v_774))) else fail-any) else fail-any)) in
        {214}let v_778: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_773)) && success?(1-proj-3-tuple(v_773))) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then (if not-caught-fail(v_775) then (if not-caught-fail(v_777) then (v_777,v_775) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {215}let v_779: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_778),2-proj-3-tuple(v_773),3-proj-3-tuple(v_773)))) in
        {216}let v_780: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_778)) && success?(symmetricstatepack(1-proj-2-tuple(v_778),2-proj-3-tuple(v_773),3-proj-3-tuple(v_773)))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then symmetricstatepack(1-proj-3-tuple(v_779),2-proj-3-tuple(v_779),hash(3-proj-3-tuple(v_779),2-proj-2-tuple(v_778))) else fail-any) else fail-any)) in
        {217}let v_781: bitstring = catch-fail((if (not-caught-fail(v_773) && success?(is-true(success?(1-proj-3-tuple(v_773))))) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then (if not-caught-fail(v_780) then (v_780,2-proj-2-tuple(v_778)) else fail-any) else fail-any) else fail-any)) in
        {218}let v_782: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_781),2-proj-7-tuple(v_766),v_769,4-proj-7-tuple(v_766),5-proj-7-tuple(v_766),6-proj-7-tuple(v_766),7-proj-7-tuple(v_766))) in
        {219}let v_783: bitstring = catch-fail(concat3(v_770,2-proj-3-tuple(v_767),2-proj-2-tuple(v_781))) in
        {220}let (hs_784: handshakestate,message_a_785: bitstring) = (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-7-tuple(v_766))))) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-3-tuple(v_767))))) then (if not-caught-fail(v_769) then (if not-caught-fail(v_770) then (if not-caught-fail(v_772) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then (if not-caught-fail(v_782) then (if not-caught-fail(v_783) then (v_782,v_783) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {221}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {222}insert statestore(alice,charlie,sid,statepack_b(hs_784));
        {223}out(pub, message_a_785)
    ) | (
        {260}get statestore(=alice,=charlie,=sid,statepack_b(hs_786: handshakestate)) in
        {225}in(pub, message_b_787: bitstring);
        {226}let v_788: bitstring = catch-fail(handshakestateunpack(hs_786)) in
        {227}let v_789: bitstring = catch-fail(deconcat3(message_b_787)) in
        {228}let v_790: bool = catch-fail(true) in
        {229}let v_791: key = catch-fail(1-proj-3-tuple(v_789)) in
        {230}let v_792: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_788))) in
        {231}let v_793: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_788)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then symmetricstatepack(1-proj-3-tuple(v_792),2-proj-3-tuple(v_792),hash(3-proj-3-tuple(v_792),v_791)) else fail-any) else fail-any)) in
        {232}let v_794: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_788))) in
        {233}let v_795: bitstring = catch-fail(symmetricstateunpack(v_793)) in
        {234}let v_796: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_795),(if success?(3-proj-7-tuple(v_788)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then dhexp(2-proj-2-tuple(v_794),v_791) else fail-any) else fail-any))) in
        {235}let v_797: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_795),(if success?(3-proj-7-tuple(v_788)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then dhexp(2-proj-2-tuple(v_794),v_791) else fail-any) else fail-any))) in
        {236}let v_798: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_795),(if success?(3-proj-7-tuple(v_788)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then dhexp(2-proj-2-tuple(v_794),v_791) else fail-any) else fail-any))) in
        {237}let v_799: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_788)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then dhexp(2-proj-2-tuple(v_794),v_791) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_795))) then (if not-caught-fail(v_796) then (if not-caught-fail(v_797) then (if not-caught-fail(v_798) then (v_796,v_797,v_798) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {238}let v_800: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_788)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then dhexp(2-proj-2-tuple(v_794),v_791) else fail-any) else fail-any)) then (if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-3-tuple(v_795))))) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-3-tuple(v_799))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_799)) then cipherstatepack(2-proj-3-tuple(v_799),minnonce) else fail-any),1-proj-3-tuple(v_799),3-proj-3-tuple(v_795)) else fail-any) else fail-any) else fail-any)) in
        {239}let v_801: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_788))) in
        {240}let v_802: bitstring = catch-fail(symmetricstateunpack(v_800)) in
        {241}let v_803: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_802),(if (success?(4-proj-7-tuple(v_788)) && success?(3-proj-7-tuple(v_788))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then dhexp(2-proj-2-tuple(v_801),4-proj-7-tuple(v_788)) else fail-any) else fail-any))) in
        {242}let v_804: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_802),(if (success?(4-proj-7-tuple(v_788)) && success?(3-proj-7-tuple(v_788))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then dhexp(2-proj-2-tuple(v_801),4-proj-7-tuple(v_788)) else fail-any) else fail-any))) in
        {243}let v_805: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_802),(if (success?(4-proj-7-tuple(v_788)) && success?(3-proj-7-tuple(v_788))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then dhexp(2-proj-2-tuple(v_801),4-proj-7-tuple(v_788)) else fail-any) else fail-any))) in
        {244}let v_806: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_788)) && success?(3-proj-7-tuple(v_788))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then dhexp(2-proj-2-tuple(v_801),4-proj-7-tuple(v_788)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_802))) then (if not-caught-fail(v_803) then (if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (v_803,v_804,v_805) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {245}let v_807: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_788)) && success?(3-proj-7-tuple(v_788))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then dhexp(2-proj-2-tuple(v_801),4-proj-7-tuple(v_788)) else fail-any) else fail-any)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-3-tuple(v_802))))) then (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-3-tuple(v_806))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_806)) then cipherstatepack(2-proj-3-tuple(v_806),minnonce) else fail-any),1-proj-3-tuple(v_806),3-proj-3-tuple(v_802)) else fail-any) else fail-any) else fail-any)) in
        {246}let v_808: bitstring = catch-fail(symmetricstateunpack(v_807)) in
        {247}let v_809: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_808))) in
        {248}let v_810: aead = catch-fail(decrypt(1-proj-2-tuple(v_809),2-proj-2-tuple(v_809),3-proj-3-tuple(v_808),3-proj-3-tuple(v_789))) in
        {249}let v_811: bitstring = catch-fail(aeadunpack(v_810)) in
        {250}let v_812: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_808))) in
        {251}let v_813: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_809))) && success?(1-proj-3-tuple(v_808))) then (if (not-caught-fail(v_812) && success?(is-true(success?(1-proj-2-tuple(v_812))))) then cipherstatepack(1-proj-2-tuple(v_812),increment_nonce(2-proj-2-tuple(v_809))) else fail-any) else fail-any)) in
        {252}let v_814: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_789)) && (success?(3-proj-3-tuple(v_808)) && success?(1-proj-3-tuple(v_808)))) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-2-tuple(v_809))))) then (if not-caught-fail(v_810) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then (if not-caught-fail(v_813) then (v_813,3-proj-3-tuple(v_811),1-proj-3-tuple(v_811)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_815: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_814),2-proj-3-tuple(v_808),3-proj-3-tuple(v_808)))) in
        {254}let v_816: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_789)) && success?(symmetricstatepack(1-proj-3-tuple(v_814),2-proj-3-tuple(v_808),3-proj-3-tuple(v_808)))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then symmetricstatepack(1-proj-3-tuple(v_815),2-proj-3-tuple(v_815),hash(3-proj-3-tuple(v_815),3-proj-3-tuple(v_789))) else fail-any) else fail-any)) in
        {255}let v_817: bitstring = catch-fail((if success?(3-proj-3-tuple(v_789)) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-3-tuple(v_814))))) then (if not-caught-fail(v_816) then (v_816,2-proj-3-tuple(v_814),3-proj-3-tuple(v_814)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {256}let v_818: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_817),2-proj-7-tuple(v_788),3-proj-7-tuple(v_788),4-proj-7-tuple(v_788),v_791,6-proj-7-tuple(v_788),7-proj-7-tuple(v_788))) in
        {257}let (hs_819: handshakestate,plaintext_b_820: bitstring,valid_821: bool) = (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-7-tuple(v_788))))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then (if not-caught-fail(v_790) then (if not-caught-fail(v_791) then (if not-caught-fail(v_793) then (if not-caught-fail(v_800) then (if not-caught-fail(v_807) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then (if (v_790 && 3-proj-3-tuple(v_817)) then (if not-caught-fail(v_818) then (v_818,2-proj-3-tuple(v_817),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {258}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_820);
        {259}insert statestore(alice,charlie,sid,statepack_c(hs_819))
    ) | (
        {289}get statestore(=alice,=charlie,=sid,statepack_c(hs_822: handshakestate)) in
        {261}let v_823: bitstring = catch-fail(handshakestateunpack(hs_822)) in
        {262}let v_824: bitstring = catch-fail((empty,empty,empty)) in
        {263}let v_825: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {264}let v_826: keypair = catch-fail((if not-caught-fail(v_825) then keypairpack(validkey(v_825),key_s(alice)) else fail-any)) in
        {265}let v_827: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_823))) in
        {266}let v_828: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {267}let v_829: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_828),2-proj-2-tuple(v_828),3-proj-3-tuple(v_827),getpublickey(v_826))) in
        {268}let v_830: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {269}let v_831: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_828))) && success?(1-proj-3-tuple(v_827))) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-2-tuple(v_830))))) then cipherstatepack(1-proj-2-tuple(v_830),increment_nonce(2-proj-2-tuple(v_828))) else fail-any) else fail-any)) in
        {270}let v_832: bitstring = catch-fail((if (success?(getpublickey(v_826)) && (success?(3-proj-3-tuple(v_827)) && success?(1-proj-3-tuple(v_827)))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-2-tuple(v_828))))) then (if not-caught-fail(v_829) then (if not-caught-fail(v_831) then (v_831,v_829) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {271}let v_833: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_832),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) in
        {272}let v_834: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_832)) && success?(symmetricstatepack(1-proj-2-tuple(v_832),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) then (if (not-caught-fail(v_833) && success?(is-true(success?(1-proj-3-tuple(v_833))))) then symmetricstatepack(1-proj-3-tuple(v_833),2-proj-3-tuple(v_833),hash(3-proj-3-tuple(v_833),2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {273}let v_835: bitstring = catch-fail((if (success?(getpublickey(v_826)) && success?(1-proj-7-tuple(v_823))) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_834) then (v_834,2-proj-2-tuple(v_832)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {274}let v_836: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_835))) in
        {275}let v_837: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_836))) in
        {276}let v_838: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_837),2-proj-2-tuple(v_837),3-proj-3-tuple(v_836),msg_c(alice,charlie,sid))) in
        {277}let v_839: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_836))) in
        {278}let v_840: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_837))) && success?(1-proj-3-tuple(v_836))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-2-tuple(v_839))))) then cipherstatepack(1-proj-2-tuple(v_839),increment_nonce(2-proj-2-tuple(v_837))) else fail-any) else fail-any)) in
        {279}let v_841: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_836)) && success?(1-proj-3-tuple(v_836))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-2-tuple(v_837))))) then (if not-caught-fail(v_838) then (if not-caught-fail(v_840) then (v_840,v_838) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {280}let v_842: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_841),2-proj-3-tuple(v_836),3-proj-3-tuple(v_836)))) in
        {281}let v_843: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_841)) && success?(symmetricstatepack(1-proj-2-tuple(v_841),2-proj-3-tuple(v_836),3-proj-3-tuple(v_836)))) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then symmetricstatepack(1-proj-3-tuple(v_842),2-proj-3-tuple(v_842),hash(3-proj-3-tuple(v_842),2-proj-2-tuple(v_841))) else fail-any) else fail-any)) in
        {282}let v_844: bitstring = catch-fail((if success?(1-proj-2-tuple(v_835)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-3-tuple(v_836))))) then (if (not-caught-fail(v_841) && success?(is-true(success?(1-proj-2-tuple(v_841))))) then (if not-caught-fail(v_843) then (v_843,2-proj-2-tuple(v_841)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {283}let v_845: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_844),v_826,3-proj-7-tuple(v_823),4-proj-7-tuple(v_823),5-proj-7-tuple(v_823),6-proj-7-tuple(v_823),7-proj-7-tuple(v_823))) in
        {284}let v_846: bitstring = catch-fail(concat3(1-proj-3-tuple(v_824),2-proj-2-tuple(v_835),2-proj-2-tuple(v_844))) in
        {285}let (hs_847: handshakestate,message_c_848: bitstring) = (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-7-tuple(v_823))))) then (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-3-tuple(v_824))))) then (if not-caught-fail(v_826) then (if (not-caught-fail(v_835) && success?(is-true(success?(1-proj-2-tuple(v_835))))) then (if (not-caught-fail(v_844) && success?(is-true(success?(1-proj-2-tuple(v_844))))) then (if not-caught-fail(v_845) then (if not-caught-fail(v_846) then (v_845,v_846) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {286}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {287}insert statestore(alice,charlie,sid,statepack_d(hs_847));
        {288}out(pub, message_c_848)
    ) | (
        {323}get statestore(=alice,=charlie,=sid,statepack_d(hs_849: handshakestate)) in
        {290}in(pub, message_d_850: bitstring);
        {291}let v_851: bitstring = catch-fail(handshakestateunpack(hs_849)) in
        {292}let v_852: bitstring = catch-fail(deconcat3(message_d_850)) in
        {293}let v_853: bool = catch-fail(true) in
        {294}let v_854: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_851))) in
        {295}let v_855: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_851))) in
        {296}let v_856: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_855),(if (success?(5-proj-7-tuple(v_851)) && success?(2-proj-7-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then dhexp(2-proj-2-tuple(v_854),5-proj-7-tuple(v_851)) else fail-any) else fail-any))) in
        {297}let v_857: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_855),(if (success?(5-proj-7-tuple(v_851)) && success?(2-proj-7-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then dhexp(2-proj-2-tuple(v_854),5-proj-7-tuple(v_851)) else fail-any) else fail-any))) in
        {298}let v_858: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_855),(if (success?(5-proj-7-tuple(v_851)) && success?(2-proj-7-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then dhexp(2-proj-2-tuple(v_854),5-proj-7-tuple(v_851)) else fail-any) else fail-any))) in
        {299}let v_859: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_851)) && success?(2-proj-7-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then dhexp(2-proj-2-tuple(v_854),5-proj-7-tuple(v_851)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_855))) then (if not-caught-fail(v_856) then (if not-caught-fail(v_857) then (if not-caught-fail(v_858) then (v_856,v_857,v_858) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {300}let v_860: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_851)) && success?(2-proj-7-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then dhexp(2-proj-2-tuple(v_854),5-proj-7-tuple(v_851)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_851))) then (if (not-caught-fail(v_855) && success?(is-true(success?(1-proj-3-tuple(v_855))))) then (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-3-tuple(v_859))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_859)) then cipherstatepack(2-proj-3-tuple(v_859),minnonce) else fail-any),1-proj-3-tuple(v_859),3-proj-3-tuple(v_855)) else fail-any) else fail-any) else fail-any)) in
        {301}let v_861: bitstring = catch-fail(symmetricstateunpack(v_860)) in
        {302}let v_862: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_861))) in
        {303}let v_863: aead = catch-fail(decrypt(1-proj-2-tuple(v_862),2-proj-2-tuple(v_862),3-proj-3-tuple(v_861),3-proj-3-tuple(v_852))) in
        {304}let v_864: bitstring = catch-fail(aeadunpack(v_863)) in
        {305}let v_865: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_861))) in
        {306}let v_866: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_862))) && success?(1-proj-3-tuple(v_861))) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then cipherstatepack(1-proj-2-tuple(v_865),increment_nonce(2-proj-2-tuple(v_862))) else fail-any) else fail-any)) in
        {307}let v_867: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_852)) && (success?(3-proj-3-tuple(v_861)) && success?(1-proj-3-tuple(v_861)))) then (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-2-tuple(v_862))))) then (if not-caught-fail(v_863) then (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-3-tuple(v_864))))) then (if not-caught-fail(v_866) then (v_866,3-proj-3-tuple(v_864),1-proj-3-tuple(v_864)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {308}let v_868: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_867),2-proj-3-tuple(v_861),3-proj-3-tuple(v_861)))) in
        {309}let v_869: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_852)) && success?(symmetricstatepack(1-proj-3-tuple(v_867),2-proj-3-tuple(v_861),3-proj-3-tuple(v_861)))) then (if (not-caught-fail(v_868) && success?(is-true(success?(1-proj-3-tuple(v_868))))) then symmetricstatepack(1-proj-3-tuple(v_868),2-proj-3-tuple(v_868),hash(3-proj-3-tuple(v_868),3-proj-3-tuple(v_852))) else fail-any) else fail-any)) in
        {310}let v_870: bitstring = catch-fail((if success?(3-proj-3-tuple(v_852)) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-3-tuple(v_861))))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-3-tuple(v_867))))) then (if not-caught-fail(v_869) then (v_869,2-proj-3-tuple(v_867),3-proj-3-tuple(v_867)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {311}let v_871: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_870),2-proj-7-tuple(v_851),3-proj-7-tuple(v_851),4-proj-7-tuple(v_851),5-proj-7-tuple(v_851),6-proj-7-tuple(v_851),7-proj-7-tuple(v_851))) in
        {312}let v_872: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_870))) in
        {313}let v_873: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_872),zero)) in
        {314}let v_874: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_872),zero)) in
        {315}let v_875: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_872),zero)) in
        {316}let v_876: bitstring = catch-fail((if success?(2-proj-3-tuple(v_872)) then (if not-caught-fail(v_873) then (if not-caught-fail(v_874) then (if not-caught-fail(v_875) then (v_873,v_874,v_875) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {317}let v_877: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_876)) then cipherstatepack(1-proj-3-tuple(v_876),minnonce) else fail-any)) in
        {318}let v_878: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_876)) then cipherstatepack(2-proj-3-tuple(v_876),minnonce) else fail-any)) in
        {319}let v_879: bitstring = catch-fail((if success?(1-proj-3-tuple(v_870)) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then (if not-caught-fail(v_877) then (if not-caught-fail(v_878) then (1-proj-3-tuple(v_870),v_877,v_878) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {320}let (hs_880: handshakestate,plaintext_d_881: bitstring,valid_882: bool,cs1_883: cipherstate,cs2_884: cipherstate) = (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-7-tuple(v_851))))) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-3-tuple(v_852))))) then (if not-caught-fail(v_853) then (if not-caught-fail(v_860) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-3-tuple(v_870))))) then (if (v_853 && 3-proj-3-tuple(v_870)) then (if not-caught-fail(v_871) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then (v_871,2-proj-3-tuple(v_870),true,2-proj-3-tuple(v_879),3-proj-3-tuple(v_879)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {321}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_881);
        {322}insert statestore(alice,charlie,sid,statepack_e(hs_880,cs1_883,cs2_884))
    ) | (
        {324}!
        {343}get statestore(=alice,=charlie,=sid,statepack_e(hs_885: handshakestate,cs1_886: cipherstate,cs2_887: cipherstate)) in
        {325}let hs_888: handshakestate = handshakestatesetcs(hs_885,cs1_886) in
        {326}let v_889: bitstring = catch-fail(handshakestateunpack(hs_888)) in
        {327}let v_890: bitstring = catch-fail((empty,empty,empty)) in
        {328}let v_891: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_889))) in
        {329}let v_892: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_891))) in
        {330}let v_893: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_892),2-proj-2-tuple(v_892),3-proj-3-tuple(v_891),msg_e(alice,charlie,sid))) in
        {331}let v_894: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_891))) in
        {332}let v_895: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_892))) && success?(1-proj-3-tuple(v_891))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then cipherstatepack(1-proj-2-tuple(v_894),increment_nonce(2-proj-2-tuple(v_892))) else fail-any) else fail-any)) in
        {333}let v_896: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_891)) && success?(1-proj-3-tuple(v_891))) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-2-tuple(v_892))))) then (if not-caught-fail(v_893) then (if not-caught-fail(v_895) then (v_895,v_893) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {334}let v_897: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_896),2-proj-3-tuple(v_891),3-proj-3-tuple(v_891)))) in
        {335}let v_898: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_896)) && success?(symmetricstatepack(1-proj-2-tuple(v_896),2-proj-3-tuple(v_891),3-proj-3-tuple(v_891)))) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-3-tuple(v_897))))) then symmetricstatepack(1-proj-3-tuple(v_897),2-proj-3-tuple(v_897),hash(3-proj-3-tuple(v_897),2-proj-2-tuple(v_896))) else fail-any) else fail-any)) in
        {336}let v_899: bitstring = catch-fail((if success?(1-proj-7-tuple(v_889)) then (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-3-tuple(v_891))))) then (if (not-caught-fail(v_896) && success?(is-true(success?(1-proj-2-tuple(v_896))))) then (if not-caught-fail(v_898) then (v_898,2-proj-2-tuple(v_896)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {337}let v_900: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_899),2-proj-7-tuple(v_889),3-proj-7-tuple(v_889),4-proj-7-tuple(v_889),5-proj-7-tuple(v_889),6-proj-7-tuple(v_889),7-proj-7-tuple(v_889))) in
        {338}let v_901: bitstring = catch-fail(concat3(1-proj-3-tuple(v_890),2-proj-3-tuple(v_890),2-proj-2-tuple(v_899))) in
        {339}let (hs_902: handshakestate,message_e_903: bitstring) = (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-7-tuple(v_889))))) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-3-tuple(v_890))))) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-2-tuple(v_899))))) then (if not-caught-fail(v_900) then (if not-caught-fail(v_901) then (v_900,v_901) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {340}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {341}insert statestore(alice,charlie,sid,statepack_f(hs_902,handshakestategetcs(hs_902),cs2_887));
        {342}out(pub, message_e_903)
    ) | (
        {344}!
        {364}get statestore(=alice,=charlie,=sid,statepack_f(hs_904: handshakestate,cs1_905: cipherstate,cs2_906: cipherstate)) in
        {345}let hs_907: handshakestate = handshakestatesetcs(hs_904,cs2_906) in
        {346}in(pub, message_f_908: bitstring);
        {347}let v_909: bitstring = catch-fail(handshakestateunpack(hs_907)) in
        {348}let v_910: bitstring = catch-fail(deconcat3(message_f_908)) in
        {349}let v_911: bool = catch-fail(true) in
        {350}let v_912: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_909))) in
        {351}let v_913: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_912))) in
        {352}let v_914: aead = catch-fail(decrypt(1-proj-2-tuple(v_913),2-proj-2-tuple(v_913),3-proj-3-tuple(v_912),3-proj-3-tuple(v_910))) in
        {353}let v_915: bitstring = catch-fail(aeadunpack(v_914)) in
        {354}let v_916: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_912))) in
        {355}let v_917: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_913))) && success?(1-proj-3-tuple(v_912))) then (if (not-caught-fail(v_916) && success?(is-true(success?(1-proj-2-tuple(v_916))))) then cipherstatepack(1-proj-2-tuple(v_916),increment_nonce(2-proj-2-tuple(v_913))) else fail-any) else fail-any)) in
        {356}let v_918: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_910)) && (success?(3-proj-3-tuple(v_912)) && success?(1-proj-3-tuple(v_912)))) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-2-tuple(v_913))))) then (if not-caught-fail(v_914) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then (if not-caught-fail(v_917) then (v_917,3-proj-3-tuple(v_915),1-proj-3-tuple(v_915)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {357}let v_919: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_918),2-proj-3-tuple(v_912),3-proj-3-tuple(v_912)))) in
        {358}let v_920: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_910)) && success?(symmetricstatepack(1-proj-3-tuple(v_918),2-proj-3-tuple(v_912),3-proj-3-tuple(v_912)))) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then symmetricstatepack(1-proj-3-tuple(v_919),2-proj-3-tuple(v_919),hash(3-proj-3-tuple(v_919),3-proj-3-tuple(v_910))) else fail-any) else fail-any)) in
        {359}let v_921: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_910)) && success?(1-proj-7-tuple(v_909))) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then (if (not-caught-fail(v_918) && success?(is-true(success?(1-proj-3-tuple(v_918))))) then (if not-caught-fail(v_920) then (v_920,2-proj-3-tuple(v_918),3-proj-3-tuple(v_918)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {360}let v_922: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_921),2-proj-7-tuple(v_909),3-proj-7-tuple(v_909),4-proj-7-tuple(v_909),5-proj-7-tuple(v_909),6-proj-7-tuple(v_909),7-proj-7-tuple(v_909))) in
        {361}let (hs_923: handshakestate,plaintext_f_924: bitstring,valid_925: bool) = (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-7-tuple(v_909))))) then (if (not-caught-fail(v_910) && success?(is-true(success?(1-proj-3-tuple(v_910))))) then (if not-caught-fail(v_911) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-3-tuple(v_921))))) then (if (v_911 && 3-proj-3-tuple(v_921)) then (if not-caught-fail(v_922) then (v_922,2-proj-3-tuple(v_921),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {362}event RecvMsg(alice,charlie,stagepack_f(sid),plaintext_f_924);
        {363}event RecvEnd(valid_925)
    ) | (
        {365}event LeakS(phase0,alice);
        {366}out(pub, key_s(alice))
    ) | (
        {367}phase 1;
        {368}event LeakS(phase1,alice);
        {369}out(pub, key_s(alice))
    )
) | (
    {370}let v_926: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {371}let s_927: keypair = (if not-caught-fail(v_926) then keypairpack(validkey(v_926),key_s(bob)) else fail-any) in
    {372}out(pub, getpublickey(s_927));
    (
        {373}let e_928: keypair = keypairpack(empty,empty) in
        {374}let rs_929: key = empty in
        {375}let re_930: key = empty in
        {376}let v_931: bitstring = catch-fail(hash(somename,empty)) in
        {377}let v_932: key = catch-fail(v_931) in
        {378}let v_933: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {379}let v_934: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_931) then (if not-caught-fail(v_932) then (if not-caught-fail(v_933) then symmetricstatepack(v_933,v_932,v_931) else fail-any) else fail-any) else fail-any))) in
        {380}let v_935: symmetricstate = catch-fail((if success?((if not-caught-fail(v_931) then (if not-caught-fail(v_932) then (if not-caught-fail(v_933) then symmetricstatepack(v_933,v_932,v_931) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-3-tuple(v_934))))) then symmetricstatepack(1-proj-3-tuple(v_934),2-proj-3-tuple(v_934),hash(3-proj-3-tuple(v_934),empty)) else fail-any) else fail-any)) in
        {381}let v_936: bitstring = catch-fail(symmetricstateunpack(v_935)) in
        {382}let v_937: symmetricstate = catch-fail((if success?(getpublickey(s_927)) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-3-tuple(v_936))))) then symmetricstatepack(1-proj-3-tuple(v_936),2-proj-3-tuple(v_936),hash(3-proj-3-tuple(v_936),getpublickey(s_927))) else fail-any) else fail-any)) in
        {383}let hs_938: handshakestate = (if not-caught-fail(v_935) then (if not-caught-fail(v_937) then handshakestatepack(v_937,s_927,e_928,rs_929,re_930,empty,false) else fail-any) else fail-any) in
        {384}insert statestore(bob,alice,sid,statepack_a(hs_938))
    ) | (
        {406}get statestore(=bob,=alice,=sid,statepack_a(hs_939: handshakestate)) in
        {385}in(pub, message_a_940: bitstring);
        {386}let v_941: bitstring = catch-fail(handshakestateunpack(hs_939)) in
        {387}let v_942: bitstring = catch-fail(deconcat3(message_a_940)) in
        {388}let v_943: bool = catch-fail(true) in
        {389}let v_944: key = catch-fail(1-proj-3-tuple(v_942)) in
        {390}let v_945: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_941))) in
        {391}let v_946: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_941)) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-3-tuple(v_945))))) then symmetricstatepack(1-proj-3-tuple(v_945),2-proj-3-tuple(v_945),hash(3-proj-3-tuple(v_945),v_944)) else fail-any) else fail-any)) in
        {392}let v_947: bitstring = catch-fail(symmetricstateunpack(v_946)) in
        {393}let v_948: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_947))) in
        {394}let v_949: aead = catch-fail(decrypt(1-proj-2-tuple(v_948),2-proj-2-tuple(v_948),3-proj-3-tuple(v_947),3-proj-3-tuple(v_942))) in
        {395}let v_950: bitstring = catch-fail(aeadunpack(v_949)) in
        {396}let v_951: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_947))) in
        {397}let v_952: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_948))) && success?(1-proj-3-tuple(v_947))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-2-tuple(v_951))))) then cipherstatepack(1-proj-2-tuple(v_951),increment_nonce(2-proj-2-tuple(v_948))) else fail-any) else fail-any)) in
        {398}let v_953: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_942)) && (success?(3-proj-3-tuple(v_947)) && success?(1-proj-3-tuple(v_947)))) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-2-tuple(v_948))))) then (if not-caught-fail(v_949) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then (if not-caught-fail(v_952) then (v_952,3-proj-3-tuple(v_950),1-proj-3-tuple(v_950)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {399}let v_954: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_953),2-proj-3-tuple(v_947),3-proj-3-tuple(v_947)))) in
        {400}let v_955: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_942)) && success?(symmetricstatepack(1-proj-3-tuple(v_953),2-proj-3-tuple(v_947),3-proj-3-tuple(v_947)))) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-3-tuple(v_954))))) then symmetricstatepack(1-proj-3-tuple(v_954),2-proj-3-tuple(v_954),hash(3-proj-3-tuple(v_954),3-proj-3-tuple(v_942))) else fail-any) else fail-any)) in
        {401}let v_956: bitstring = catch-fail((if success?(3-proj-3-tuple(v_942)) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if not-caught-fail(v_955) then (v_955,2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {402}let v_957: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_956),2-proj-7-tuple(v_941),3-proj-7-tuple(v_941),4-proj-7-tuple(v_941),v_944,6-proj-7-tuple(v_941),7-proj-7-tuple(v_941))) in
        {403}let (hs_958: handshakestate,plaintext_a: bitstring,valid_959: bool) = (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-7-tuple(v_941))))) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-3-tuple(v_942))))) then (if not-caught-fail(v_943) then (if not-caught-fail(v_944) then (if not-caught-fail(v_946) then (if (not-caught-fail(v_956) && success?(is-true(success?(1-proj-3-tuple(v_956))))) then (if (v_943 && 3-proj-3-tuple(v_956)) then (if not-caught-fail(v_957) then (v_957,2-proj-3-tuple(v_956),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {404}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {405}insert statestore(bob,alice,sid,statepack_b(hs_958))
    ) | (
        {443}get statestore(=bob,=alice,=sid,statepack_b(hs_960: handshakestate)) in
        {407}let v_961: bitstring = catch-fail(handshakestateunpack(hs_960)) in
        {408}let v_962: bitstring = catch-fail((empty,empty,empty)) in
        {409}let v_963: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {410}let v_964: keypair = catch-fail((if not-caught-fail(v_963) then keypairpack(validkey(v_963),key_e(bob,alice,sid)) else fail-any)) in
        {411}let v_965: bitstring = catch-fail(getpublickey(v_964)) in
        {412}let v_966: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_961))) in
        {413}let v_967: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_961)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-3-tuple(v_966))))) then symmetricstatepack(1-proj-3-tuple(v_966),2-proj-3-tuple(v_966),hash(3-proj-3-tuple(v_966),v_965)) else fail-any) else fail-any)) in
        {414}let v_968: bitstring = catch-fail(keypairunpack(v_964)) in
        {415}let v_969: bitstring = catch-fail(symmetricstateunpack(v_967)) in
        {416}let v_970: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_969),(if success?(5-proj-7-tuple(v_961)) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-2-tuple(v_968))))) then dhexp(2-proj-2-tuple(v_968),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {417}let v_971: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_969),(if success?(5-proj-7-tuple(v_961)) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-2-tuple(v_968))))) then dhexp(2-proj-2-tuple(v_968),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {418}let v_972: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_969),(if success?(5-proj-7-tuple(v_961)) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-2-tuple(v_968))))) then dhexp(2-proj-2-tuple(v_968),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {419}let v_973: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_961)) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-2-tuple(v_968))))) then dhexp(2-proj-2-tuple(v_968),5-proj-7-tuple(v_961)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_969))) then (if not-caught-fail(v_970) then (if not-caught-fail(v_971) then (if not-caught-fail(v_972) then (v_970,v_971,v_972) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {420}let v_974: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_961)) then (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-2-tuple(v_968))))) then dhexp(2-proj-2-tuple(v_968),5-proj-7-tuple(v_961)) else fail-any) else fail-any)) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then (if (not-caught-fail(v_973) && success?(is-true(success?(1-proj-3-tuple(v_973))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_973)) then cipherstatepack(2-proj-3-tuple(v_973),minnonce) else fail-any),1-proj-3-tuple(v_973),3-proj-3-tuple(v_969)) else fail-any) else fail-any) else fail-any)) in
        {421}let v_975: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_961))) in
        {422}let v_976: bitstring = catch-fail(symmetricstateunpack(v_974)) in
        {423}let v_977: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_976),(if (success?(5-proj-7-tuple(v_961)) && success?(2-proj-7-tuple(v_961))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {424}let v_978: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_976),(if (success?(5-proj-7-tuple(v_961)) && success?(2-proj-7-tuple(v_961))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {425}let v_979: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_976),(if (success?(5-proj-7-tuple(v_961)) && success?(2-proj-7-tuple(v_961))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_961)) else fail-any) else fail-any))) in
        {426}let v_980: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_961)) && success?(2-proj-7-tuple(v_961))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_961)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_976))) then (if not-caught-fail(v_977) then (if not-caught-fail(v_978) then (if not-caught-fail(v_979) then (v_977,v_978,v_979) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {427}let v_981: symmetricstate = catch-fail((if success?((if (success?(5-proj-7-tuple(v_961)) && success?(2-proj-7-tuple(v_961))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_961)) else fail-any) else fail-any)) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-3-tuple(v_980))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_980)) then cipherstatepack(2-proj-3-tuple(v_980),minnonce) else fail-any),1-proj-3-tuple(v_980),3-proj-3-tuple(v_976)) else fail-any) else fail-any) else fail-any)) in
        {428}let v_982: bitstring = catch-fail(symmetricstateunpack(v_981)) in
        {429}let v_983: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_982))) in
        {430}let v_984: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_983),2-proj-2-tuple(v_983),3-proj-3-tuple(v_982),msg_b(bob,alice,sid))) in
        {431}let v_985: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_982))) in
        {432}let v_986: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_983))) && success?(1-proj-3-tuple(v_982))) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-2-tuple(v_985))))) then cipherstatepack(1-proj-2-tuple(v_985),increment_nonce(2-proj-2-tuple(v_983))) else fail-any) else fail-any)) in
        {433}let v_987: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_982)) && success?(1-proj-3-tuple(v_982))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-2-tuple(v_983))))) then (if not-caught-fail(v_984) then (if not-caught-fail(v_986) then (v_986,v_984) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {434}let v_988: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_987),2-proj-3-tuple(v_982),3-proj-3-tuple(v_982)))) in
        {435}let v_989: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_987)) && success?(symmetricstatepack(1-proj-2-tuple(v_987),2-proj-3-tuple(v_982),3-proj-3-tuple(v_982)))) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-3-tuple(v_988))))) then symmetricstatepack(1-proj-3-tuple(v_988),2-proj-3-tuple(v_988),hash(3-proj-3-tuple(v_988),2-proj-2-tuple(v_987))) else fail-any) else fail-any)) in
        {436}let v_990: bitstring = catch-fail((if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-2-tuple(v_987))))) then (if not-caught-fail(v_989) then (v_989,2-proj-2-tuple(v_987)) else fail-any) else fail-any) else fail-any)) in
        {437}let v_991: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_990),2-proj-7-tuple(v_961),v_964,4-proj-7-tuple(v_961),5-proj-7-tuple(v_961),6-proj-7-tuple(v_961),7-proj-7-tuple(v_961))) in
        {438}let v_992: bitstring = catch-fail(concat3(v_965,2-proj-3-tuple(v_962),2-proj-2-tuple(v_990))) in
        {439}let (hs_993: handshakestate,message_b_994: bitstring) = (if (not-caught-fail(v_961) && success?(is-true(success?(1-proj-7-tuple(v_961))))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-3-tuple(v_962))))) then (if not-caught-fail(v_964) then (if not-caught-fail(v_965) then (if not-caught-fail(v_967) then (if not-caught-fail(v_974) then (if not-caught-fail(v_981) then (if (not-caught-fail(v_990) && success?(is-true(success?(1-proj-2-tuple(v_990))))) then (if not-caught-fail(v_991) then (if not-caught-fail(v_992) then (v_991,v_992) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {440}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {441}insert statestore(bob,alice,sid,statepack_c(hs_993));
        {442}out(pub, message_b_994)
    ) | (
        {474}get statestore(=bob,=alice,=sid,statepack_c(hs_995: handshakestate)) in
        {444}in(pub, message_c_996: bitstring);
        {445}let v_997: bitstring = catch-fail(handshakestateunpack(hs_995)) in
        {446}let v_998: bitstring = catch-fail(deconcat3(message_c_996)) in
        {447}let v_999: bool = catch-fail(true) in
        {448}let v_1000: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_997))) in
        {449}let v_1001: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1000))) in
        {450}let v_1002: aead = catch-fail(decrypt(1-proj-2-tuple(v_1001),2-proj-2-tuple(v_1001),3-proj-3-tuple(v_1000),2-proj-3-tuple(v_998))) in
        {451}let v_1003: bitstring = catch-fail(aeadunpack(v_1002)) in
        {452}let v_1004: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1000))) in
        {453}let v_1005: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1001))) && success?(1-proj-3-tuple(v_1000))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-2-tuple(v_1004))))) then cipherstatepack(1-proj-2-tuple(v_1004),increment_nonce(2-proj-2-tuple(v_1001))) else fail-any) else fail-any)) in
        {454}let v_1006: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_998)) && (success?(3-proj-3-tuple(v_1000)) && success?(1-proj-3-tuple(v_1000)))) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-2-tuple(v_1001))))) then (if not-caught-fail(v_1002) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if not-caught-fail(v_1005) then (v_1005,3-proj-3-tuple(v_1003),1-proj-3-tuple(v_1003)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {455}let v_1007: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1006),2-proj-3-tuple(v_1000),3-proj-3-tuple(v_1000)))) in
        {456}let v_1008: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_998)) && success?(symmetricstatepack(1-proj-3-tuple(v_1006),2-proj-3-tuple(v_1000),3-proj-3-tuple(v_1000)))) then (if (not-caught-fail(v_1007) && success?(is-true(success?(1-proj-3-tuple(v_1007))))) then symmetricstatepack(1-proj-3-tuple(v_1007),2-proj-3-tuple(v_1007),hash(3-proj-3-tuple(v_1007),2-proj-3-tuple(v_998))) else fail-any) else fail-any)) in
        {457}let v_1009: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_998)) && success?(1-proj-7-tuple(v_997))) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-3-tuple(v_1006))))) then (if not-caught-fail(v_1008) then (v_1008,2-proj-3-tuple(v_1006),3-proj-3-tuple(v_1006)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {458}let v_1010: key = catch-fail(2-proj-3-tuple(v_1009)) in
        {459}let v_1011: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1009))) in
        {460}let v_1012: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1011))) in
        {461}let v_1013: aead = catch-fail(decrypt(1-proj-2-tuple(v_1012),2-proj-2-tuple(v_1012),3-proj-3-tuple(v_1011),3-proj-3-tuple(v_998))) in
        {462}let v_1014: bitstring = catch-fail(aeadunpack(v_1013)) in
        {463}let v_1015: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1011))) in
        {464}let v_1016: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1012))) && success?(1-proj-3-tuple(v_1011))) then (if (not-caught-fail(v_1015) && success?(is-true(success?(1-proj-2-tuple(v_1015))))) then cipherstatepack(1-proj-2-tuple(v_1015),increment_nonce(2-proj-2-tuple(v_1012))) else fail-any) else fail-any)) in
        {465}let v_1017: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_998)) && (success?(3-proj-3-tuple(v_1011)) && success?(1-proj-3-tuple(v_1011)))) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-2-tuple(v_1012))))) then (if not-caught-fail(v_1013) then (if (not-caught-fail(v_1014) && success?(is-true(success?(1-proj-3-tuple(v_1014))))) then (if not-caught-fail(v_1016) then (v_1016,3-proj-3-tuple(v_1014),1-proj-3-tuple(v_1014)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {466}let v_1018: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1017),2-proj-3-tuple(v_1011),3-proj-3-tuple(v_1011)))) in
        {467}let v_1019: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_998)) && success?(symmetricstatepack(1-proj-3-tuple(v_1017),2-proj-3-tuple(v_1011),3-proj-3-tuple(v_1011)))) then (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then symmetricstatepack(1-proj-3-tuple(v_1018),2-proj-3-tuple(v_1018),hash(3-proj-3-tuple(v_1018),3-proj-3-tuple(v_998))) else fail-any) else fail-any)) in
        {468}let v_1020: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_998)) && success?(1-proj-3-tuple(v_1009))) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-3-tuple(v_1011))))) then (if (not-caught-fail(v_1017) && success?(is-true(success?(1-proj-3-tuple(v_1017))))) then (if not-caught-fail(v_1019) then (v_1019,2-proj-3-tuple(v_1017),3-proj-3-tuple(v_1017)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {469}let v_1021: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {470}let v_1022: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1020),2-proj-7-tuple(v_997),3-proj-7-tuple(v_997),v_1010,5-proj-7-tuple(v_997),6-proj-7-tuple(v_997),7-proj-7-tuple(v_997))) in
        {471}let (hs_1023: handshakestate,plaintext_c: bitstring,valid_1024: bool) = (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-7-tuple(v_997))))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-3-tuple(v_998))))) then (if not-caught-fail(v_999) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then (if not-caught-fail(v_1010) then (if (not-caught-fail(v_1020) && success?(is-true(success?(1-proj-3-tuple(v_1020))))) then (if ((3-proj-3-tuple(v_1009) && 3-proj-3-tuple(v_1020)) && (v_1010 = getpublickey((if not-caught-fail(v_1021) then keypairpack(validkey(v_1021),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_1022) then (v_1022,2-proj-3-tuple(v_1020),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {472}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {473}insert statestore(bob,alice,sid,statepack_d(hs_1023))
    ) | (
        {507}get statestore(=bob,=alice,=sid,statepack_d(hs_1025: handshakestate)) in
        {475}let v_1026: bitstring = catch-fail(handshakestateunpack(hs_1025)) in
        {476}let v_1027: bitstring = catch-fail((empty,empty,empty)) in
        {477}let v_1028: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1026))) in
        {478}let v_1029: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1026))) in
        {479}let v_1030: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1029),(if (success?(4-proj-7-tuple(v_1026)) && success?(3-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then dhexp(2-proj-2-tuple(v_1028),4-proj-7-tuple(v_1026)) else fail-any) else fail-any))) in
        {480}let v_1031: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1029),(if (success?(4-proj-7-tuple(v_1026)) && success?(3-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then dhexp(2-proj-2-tuple(v_1028),4-proj-7-tuple(v_1026)) else fail-any) else fail-any))) in
        {481}let v_1032: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1029),(if (success?(4-proj-7-tuple(v_1026)) && success?(3-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then dhexp(2-proj-2-tuple(v_1028),4-proj-7-tuple(v_1026)) else fail-any) else fail-any))) in
        {482}let v_1033: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1026)) && success?(3-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then dhexp(2-proj-2-tuple(v_1028),4-proj-7-tuple(v_1026)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1029))) then (if not-caught-fail(v_1030) then (if not-caught-fail(v_1031) then (if not-caught-fail(v_1032) then (v_1030,v_1031,v_1032) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {483}let v_1034: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1026)) && success?(3-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then dhexp(2-proj-2-tuple(v_1028),4-proj-7-tuple(v_1026)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_1026))) then (if (not-caught-fail(v_1029) && success?(is-true(success?(1-proj-3-tuple(v_1029))))) then (if (not-caught-fail(v_1033) && success?(is-true(success?(1-proj-3-tuple(v_1033))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1033)) then cipherstatepack(2-proj-3-tuple(v_1033),minnonce) else fail-any),1-proj-3-tuple(v_1033),3-proj-3-tuple(v_1029)) else fail-any) else fail-any) else fail-any)) in
        {484}let v_1035: bitstring = catch-fail(symmetricstateunpack(v_1034)) in
        {485}let v_1036: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1035))) in
        {486}let v_1037: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1036),2-proj-2-tuple(v_1036),3-proj-3-tuple(v_1035),msg_d(bob,alice,sid))) in
        {487}let v_1038: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1035))) in
        {488}let v_1039: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1036))) && success?(1-proj-3-tuple(v_1035))) then (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-2-tuple(v_1038))))) then cipherstatepack(1-proj-2-tuple(v_1038),increment_nonce(2-proj-2-tuple(v_1036))) else fail-any) else fail-any)) in
        {489}let v_1040: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1035)) && success?(1-proj-3-tuple(v_1035))) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then (if not-caught-fail(v_1037) then (if not-caught-fail(v_1039) then (v_1039,v_1037) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {490}let v_1041: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1040),2-proj-3-tuple(v_1035),3-proj-3-tuple(v_1035)))) in
        {491}let v_1042: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1040)) && success?(symmetricstatepack(1-proj-2-tuple(v_1040),2-proj-3-tuple(v_1035),3-proj-3-tuple(v_1035)))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-3-tuple(v_1041))))) then symmetricstatepack(1-proj-3-tuple(v_1041),2-proj-3-tuple(v_1041),hash(3-proj-3-tuple(v_1041),2-proj-2-tuple(v_1040))) else fail-any) else fail-any)) in
        {492}let v_1043: bitstring = catch-fail((if (not-caught-fail(v_1035) && success?(is-true(success?(1-proj-3-tuple(v_1035))))) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-2-tuple(v_1040))))) then (if not-caught-fail(v_1042) then (v_1042,2-proj-2-tuple(v_1040)) else fail-any) else fail-any) else fail-any)) in
        {493}let v_1044: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1043),2-proj-7-tuple(v_1026),3-proj-7-tuple(v_1026),4-proj-7-tuple(v_1026),5-proj-7-tuple(v_1026),6-proj-7-tuple(v_1026),7-proj-7-tuple(v_1026))) in
        {494}let v_1045: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1027),2-proj-3-tuple(v_1027),2-proj-2-tuple(v_1043))) in
        {495}let v_1046: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1043))) in
        {496}let v_1047: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1046),zero)) in
        {497}let v_1048: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1046),zero)) in
        {498}let v_1049: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1046),zero)) in
        {499}let v_1050: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1046)) then (if not-caught-fail(v_1047) then (if not-caught-fail(v_1048) then (if not-caught-fail(v_1049) then (v_1047,v_1048,v_1049) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {500}let v_1051: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1050)) then cipherstatepack(1-proj-3-tuple(v_1050),minnonce) else fail-any)) in
        {501}let v_1052: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1050)) then cipherstatepack(2-proj-3-tuple(v_1050),minnonce) else fail-any)) in
        {502}let v_1053: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1043)) then (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-3-tuple(v_1046))))) then (if (not-caught-fail(v_1050) && success?(is-true(success?(1-proj-3-tuple(v_1050))))) then (if not-caught-fail(v_1051) then (if not-caught-fail(v_1052) then (1-proj-2-tuple(v_1043),v_1051,v_1052) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {503}let (hs_1054: handshakestate,message_d_1055: bitstring,cs1_1056: cipherstate,cs2_1057: cipherstate) = (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-7-tuple(v_1026))))) then (if (not-caught-fail(v_1027) && success?(is-true(success?(1-proj-3-tuple(v_1027))))) then (if not-caught-fail(v_1034) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-2-tuple(v_1043))))) then (if not-caught-fail(v_1044) then (if not-caught-fail(v_1045) then (if (not-caught-fail(v_1053) && success?(is-true(success?(1-proj-3-tuple(v_1053))))) then (v_1044,v_1045,2-proj-3-tuple(v_1053),3-proj-3-tuple(v_1053)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {504}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {505}insert statestore(bob,alice,sid,statepack_e(hs_1054,cs1_1056,cs2_1057));
        {506}out(pub, message_d_1055)
    ) | (
        {508}!
        {528}get statestore(=bob,=alice,=sid,statepack_e(hs_1058: handshakestate,cs1_1059: cipherstate,cs2_1060: cipherstate)) in
        {509}let hs_1061: handshakestate = handshakestatesetcs(hs_1058,cs1_1059) in
        {510}in(pub, message_e_1062: bitstring);
        {511}let v_1063: bitstring = catch-fail(handshakestateunpack(hs_1061)) in
        {512}let v_1064: bitstring = catch-fail(deconcat3(message_e_1062)) in
        {513}let v_1065: bool = catch-fail(true) in
        {514}let v_1066: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1063))) in
        {515}let v_1067: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1066))) in
        {516}let v_1068: aead = catch-fail(decrypt(1-proj-2-tuple(v_1067),2-proj-2-tuple(v_1067),3-proj-3-tuple(v_1066),3-proj-3-tuple(v_1064))) in
        {517}let v_1069: bitstring = catch-fail(aeadunpack(v_1068)) in
        {518}let v_1070: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1066))) in
        {519}let v_1071: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1067))) && success?(1-proj-3-tuple(v_1066))) then (if (not-caught-fail(v_1070) && success?(is-true(success?(1-proj-2-tuple(v_1070))))) then cipherstatepack(1-proj-2-tuple(v_1070),increment_nonce(2-proj-2-tuple(v_1067))) else fail-any) else fail-any)) in
        {520}let v_1072: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1064)) && (success?(3-proj-3-tuple(v_1066)) && success?(1-proj-3-tuple(v_1066)))) then (if (not-caught-fail(v_1067) && success?(is-true(success?(1-proj-2-tuple(v_1067))))) then (if not-caught-fail(v_1068) then (if (not-caught-fail(v_1069) && success?(is-true(success?(1-proj-3-tuple(v_1069))))) then (if not-caught-fail(v_1071) then (v_1071,3-proj-3-tuple(v_1069),1-proj-3-tuple(v_1069)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {521}let v_1073: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1072),2-proj-3-tuple(v_1066),3-proj-3-tuple(v_1066)))) in
        {522}let v_1074: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1064)) && success?(symmetricstatepack(1-proj-3-tuple(v_1072),2-proj-3-tuple(v_1066),3-proj-3-tuple(v_1066)))) then (if (not-caught-fail(v_1073) && success?(is-true(success?(1-proj-3-tuple(v_1073))))) then symmetricstatepack(1-proj-3-tuple(v_1073),2-proj-3-tuple(v_1073),hash(3-proj-3-tuple(v_1073),3-proj-3-tuple(v_1064))) else fail-any) else fail-any)) in
        {523}let v_1075: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1064)) && success?(1-proj-7-tuple(v_1063))) then (if (not-caught-fail(v_1066) && success?(is-true(success?(1-proj-3-tuple(v_1066))))) then (if (not-caught-fail(v_1072) && success?(is-true(success?(1-proj-3-tuple(v_1072))))) then (if not-caught-fail(v_1074) then (v_1074,2-proj-3-tuple(v_1072),3-proj-3-tuple(v_1072)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {524}let v_1076: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1075),2-proj-7-tuple(v_1063),3-proj-7-tuple(v_1063),4-proj-7-tuple(v_1063),5-proj-7-tuple(v_1063),6-proj-7-tuple(v_1063),7-proj-7-tuple(v_1063))) in
        {525}let (hs_1077: handshakestate,plaintext_e: bitstring,valid_1078: bool) = (if (not-caught-fail(v_1063) && success?(is-true(success?(1-proj-7-tuple(v_1063))))) then (if (not-caught-fail(v_1064) && success?(is-true(success?(1-proj-3-tuple(v_1064))))) then (if not-caught-fail(v_1065) then (if (not-caught-fail(v_1075) && success?(is-true(success?(1-proj-3-tuple(v_1075))))) then (if (v_1065 && 3-proj-3-tuple(v_1075)) then (if not-caught-fail(v_1076) then (v_1076,2-proj-3-tuple(v_1075),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {526}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {527}insert statestore(bob,alice,sid,statepack_f(hs_1077,handshakestategetcs(hs_1077),cs2_1060))
    ) | (
        {529}!
        {547}get statestore(=bob,=alice,=sid,statepack_f(hs_1079: handshakestate,cs1_1080: cipherstate,cs2_1081: cipherstate)) in
        {530}let hs_1082: handshakestate = handshakestatesetcs(hs_1079,cs2_1081) in
        {531}let v_1083: bitstring = catch-fail(handshakestateunpack(hs_1082)) in
        {532}let v_1084: bitstring = catch-fail((empty,empty,empty)) in
        {533}let v_1085: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1083))) in
        {534}let v_1086: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1085))) in
        {535}let v_1087: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1086),2-proj-2-tuple(v_1086),3-proj-3-tuple(v_1085),msg_f(bob,alice,sid))) in
        {536}let v_1088: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1085))) in
        {537}let v_1089: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1086))) && success?(1-proj-3-tuple(v_1085))) then (if (not-caught-fail(v_1088) && success?(is-true(success?(1-proj-2-tuple(v_1088))))) then cipherstatepack(1-proj-2-tuple(v_1088),increment_nonce(2-proj-2-tuple(v_1086))) else fail-any) else fail-any)) in
        {538}let v_1090: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1085)) && success?(1-proj-3-tuple(v_1085))) then (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-2-tuple(v_1086))))) then (if not-caught-fail(v_1087) then (if not-caught-fail(v_1089) then (v_1089,v_1087) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {539}let v_1091: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1090),2-proj-3-tuple(v_1085),3-proj-3-tuple(v_1085)))) in
        {540}let v_1092: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1090)) && success?(symmetricstatepack(1-proj-2-tuple(v_1090),2-proj-3-tuple(v_1085),3-proj-3-tuple(v_1085)))) then (if (not-caught-fail(v_1091) && success?(is-true(success?(1-proj-3-tuple(v_1091))))) then symmetricstatepack(1-proj-3-tuple(v_1091),2-proj-3-tuple(v_1091),hash(3-proj-3-tuple(v_1091),2-proj-2-tuple(v_1090))) else fail-any) else fail-any)) in
        {541}let v_1093: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1083)) then (if (not-caught-fail(v_1085) && success?(is-true(success?(1-proj-3-tuple(v_1085))))) then (if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-2-tuple(v_1090))))) then (if not-caught-fail(v_1092) then (v_1092,2-proj-2-tuple(v_1090)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {542}let v_1094: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1093),2-proj-7-tuple(v_1083),3-proj-7-tuple(v_1083),4-proj-7-tuple(v_1083),5-proj-7-tuple(v_1083),6-proj-7-tuple(v_1083),7-proj-7-tuple(v_1083))) in
        {543}let v_1095: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1084),2-proj-3-tuple(v_1084),2-proj-2-tuple(v_1093))) in
        {544}let (hs_1096: handshakestate,message_f_1097: bitstring) = (if (not-caught-fail(v_1083) && success?(is-true(success?(1-proj-7-tuple(v_1083))))) then (if (not-caught-fail(v_1084) && success?(is-true(success?(1-proj-3-tuple(v_1084))))) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then (if not-caught-fail(v_1094) then (if not-caught-fail(v_1095) then (v_1094,v_1095) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {545}event SendMsg(bob,alice,stagepack_f(sid),msg_f(bob,alice,sid));
        {546}out(pub, message_f_1097)
    ) | (
        {548}event LeakS(phase0,bob);
        {549}out(pub, key_s(bob))
    ) | (
        {550}phase 1;
        {551}event LeakS(phase1,bob);
        {552}out(pub, key_s(bob))
    )
) | (
    {553}let v_1098: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {554}let s_1099: keypair = (if not-caught-fail(v_1098) then keypairpack(validkey(v_1098),key_s(bob)) else fail-any) in
    {555}out(pub, getpublickey(s_1099));
    (
        {556}let e_1100: keypair = keypairpack(empty,empty) in
        {557}let rs_1101: key = empty in
        {558}let re_1102: key = empty in
        {559}let v_1103: bitstring = catch-fail(hash(somename,empty)) in
        {560}let v_1104: key = catch-fail(v_1103) in
        {561}let v_1105: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {562}let v_1106: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1103) then (if not-caught-fail(v_1104) then (if not-caught-fail(v_1105) then symmetricstatepack(v_1105,v_1104,v_1103) else fail-any) else fail-any) else fail-any))) in
        {563}let v_1107: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1103) then (if not-caught-fail(v_1104) then (if not-caught-fail(v_1105) then symmetricstatepack(v_1105,v_1104,v_1103) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-3-tuple(v_1106))))) then symmetricstatepack(1-proj-3-tuple(v_1106),2-proj-3-tuple(v_1106),hash(3-proj-3-tuple(v_1106),empty)) else fail-any) else fail-any)) in
        {564}let v_1108: bitstring = catch-fail(symmetricstateunpack(v_1107)) in
        {565}let v_1109: symmetricstate = catch-fail((if success?(getpublickey(s_1099)) then (if (not-caught-fail(v_1108) && success?(is-true(success?(1-proj-3-tuple(v_1108))))) then symmetricstatepack(1-proj-3-tuple(v_1108),2-proj-3-tuple(v_1108),hash(3-proj-3-tuple(v_1108),getpublickey(s_1099))) else fail-any) else fail-any)) in
        {566}let hs_1110: handshakestate = (if not-caught-fail(v_1107) then (if not-caught-fail(v_1109) then handshakestatepack(v_1109,s_1099,e_1100,rs_1101,re_1102,empty,false) else fail-any) else fail-any) in
        {567}insert statestore(bob,charlie,sid,statepack_a(hs_1110))
    ) | (
        {589}get statestore(=bob,=charlie,=sid,statepack_a(hs_1111: handshakestate)) in
        {568}in(pub, message_a_1112: bitstring);
        {569}let v_1113: bitstring = catch-fail(handshakestateunpack(hs_1111)) in
        {570}let v_1114: bitstring = catch-fail(deconcat3(message_a_1112)) in
        {571}let v_1115: bool = catch-fail(true) in
        {572}let v_1116: key = catch-fail(1-proj-3-tuple(v_1114)) in
        {573}let v_1117: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1113))) in
        {574}let v_1118: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1113)) then (if (not-caught-fail(v_1117) && success?(is-true(success?(1-proj-3-tuple(v_1117))))) then symmetricstatepack(1-proj-3-tuple(v_1117),2-proj-3-tuple(v_1117),hash(3-proj-3-tuple(v_1117),v_1116)) else fail-any) else fail-any)) in
        {575}let v_1119: bitstring = catch-fail(symmetricstateunpack(v_1118)) in
        {576}let v_1120: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1119))) in
        {577}let v_1121: aead = catch-fail(decrypt(1-proj-2-tuple(v_1120),2-proj-2-tuple(v_1120),3-proj-3-tuple(v_1119),3-proj-3-tuple(v_1114))) in
        {578}let v_1122: bitstring = catch-fail(aeadunpack(v_1121)) in
        {579}let v_1123: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1119))) in
        {580}let v_1124: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1120))) && success?(1-proj-3-tuple(v_1119))) then (if (not-caught-fail(v_1123) && success?(is-true(success?(1-proj-2-tuple(v_1123))))) then cipherstatepack(1-proj-2-tuple(v_1123),increment_nonce(2-proj-2-tuple(v_1120))) else fail-any) else fail-any)) in
        {581}let v_1125: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1114)) && (success?(3-proj-3-tuple(v_1119)) && success?(1-proj-3-tuple(v_1119)))) then (if (not-caught-fail(v_1120) && success?(is-true(success?(1-proj-2-tuple(v_1120))))) then (if not-caught-fail(v_1121) then (if (not-caught-fail(v_1122) && success?(is-true(success?(1-proj-3-tuple(v_1122))))) then (if not-caught-fail(v_1124) then (v_1124,3-proj-3-tuple(v_1122),1-proj-3-tuple(v_1122)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {582}let v_1126: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1125),2-proj-3-tuple(v_1119),3-proj-3-tuple(v_1119)))) in
        {583}let v_1127: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1114)) && success?(symmetricstatepack(1-proj-3-tuple(v_1125),2-proj-3-tuple(v_1119),3-proj-3-tuple(v_1119)))) then (if (not-caught-fail(v_1126) && success?(is-true(success?(1-proj-3-tuple(v_1126))))) then symmetricstatepack(1-proj-3-tuple(v_1126),2-proj-3-tuple(v_1126),hash(3-proj-3-tuple(v_1126),3-proj-3-tuple(v_1114))) else fail-any) else fail-any)) in
        {584}let v_1128: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1114)) then (if (not-caught-fail(v_1119) && success?(is-true(success?(1-proj-3-tuple(v_1119))))) then (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-3-tuple(v_1125))))) then (if not-caught-fail(v_1127) then (v_1127,2-proj-3-tuple(v_1125),3-proj-3-tuple(v_1125)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {585}let v_1129: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1128),2-proj-7-tuple(v_1113),3-proj-7-tuple(v_1113),4-proj-7-tuple(v_1113),v_1116,6-proj-7-tuple(v_1113),7-proj-7-tuple(v_1113))) in
        {586}let (hs_1130: handshakestate,plaintext_a_1131: bitstring,valid_1132: bool) = (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-7-tuple(v_1113))))) then (if (not-caught-fail(v_1114) && success?(is-true(success?(1-proj-3-tuple(v_1114))))) then (if not-caught-fail(v_1115) then (if not-caught-fail(v_1116) then (if not-caught-fail(v_1118) then (if (not-caught-fail(v_1128) && success?(is-true(success?(1-proj-3-tuple(v_1128))))) then (if (v_1115 && 3-proj-3-tuple(v_1128)) then (if not-caught-fail(v_1129) then (v_1129,2-proj-3-tuple(v_1128),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {587}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1131);
        {588}insert statestore(bob,charlie,sid,statepack_b(hs_1130))
    ) | (
        {626}get statestore(=bob,=charlie,=sid,statepack_b(hs_1133: handshakestate)) in
        {590}let v_1134: bitstring = catch-fail(handshakestateunpack(hs_1133)) in
        {591}let v_1135: bitstring = catch-fail((empty,empty,empty)) in
        {592}let v_1136: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {593}let v_1137: keypair = catch-fail((if not-caught-fail(v_1136) then keypairpack(validkey(v_1136),key_e(bob,charlie,sid)) else fail-any)) in
        {594}let v_1138: bitstring = catch-fail(getpublickey(v_1137)) in
        {595}let v_1139: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1134))) in
        {596}let v_1140: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-3-tuple(v_1139))))) then symmetricstatepack(1-proj-3-tuple(v_1139),2-proj-3-tuple(v_1139),hash(3-proj-3-tuple(v_1139),v_1138)) else fail-any) else fail-any)) in
        {597}let v_1141: bitstring = catch-fail(keypairunpack(v_1137)) in
        {598}let v_1142: bitstring = catch-fail(symmetricstateunpack(v_1140)) in
        {599}let v_1143: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1142),(if success?(5-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then dhexp(2-proj-2-tuple(v_1141),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {600}let v_1144: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1142),(if success?(5-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then dhexp(2-proj-2-tuple(v_1141),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {601}let v_1145: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1142),(if success?(5-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then dhexp(2-proj-2-tuple(v_1141),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {602}let v_1146: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then dhexp(2-proj-2-tuple(v_1141),5-proj-7-tuple(v_1134)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1142))) then (if not-caught-fail(v_1143) then (if not-caught-fail(v_1144) then (if not-caught-fail(v_1145) then (v_1143,v_1144,v_1145) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {603}let v_1147: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1134)) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-2-tuple(v_1141))))) then dhexp(2-proj-2-tuple(v_1141),5-proj-7-tuple(v_1134)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-3-tuple(v_1142))))) then (if (not-caught-fail(v_1146) && success?(is-true(success?(1-proj-3-tuple(v_1146))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1146)) then cipherstatepack(2-proj-3-tuple(v_1146),minnonce) else fail-any),1-proj-3-tuple(v_1146),3-proj-3-tuple(v_1142)) else fail-any) else fail-any) else fail-any)) in
        {604}let v_1148: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1134))) in
        {605}let v_1149: bitstring = catch-fail(symmetricstateunpack(v_1147)) in
        {606}let v_1150: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1149),(if (success?(5-proj-7-tuple(v_1134)) && success?(2-proj-7-tuple(v_1134))) then (if (not-caught-fail(v_1148) && success?(is-true(success?(1-proj-2-tuple(v_1148))))) then dhexp(2-proj-2-tuple(v_1148),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {607}let v_1151: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1149),(if (success?(5-proj-7-tuple(v_1134)) && success?(2-proj-7-tuple(v_1134))) then (if (not-caught-fail(v_1148) && success?(is-true(success?(1-proj-2-tuple(v_1148))))) then dhexp(2-proj-2-tuple(v_1148),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {608}let v_1152: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1149),(if (success?(5-proj-7-tuple(v_1134)) && success?(2-proj-7-tuple(v_1134))) then (if (not-caught-fail(v_1148) && success?(is-true(success?(1-proj-2-tuple(v_1148))))) then dhexp(2-proj-2-tuple(v_1148),5-proj-7-tuple(v_1134)) else fail-any) else fail-any))) in
        {609}let v_1153: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_1134)) && success?(2-proj-7-tuple(v_1134))) then (if (not-caught-fail(v_1148) && success?(is-true(success?(1-proj-2-tuple(v_1148))))) then dhexp(2-proj-2-tuple(v_1148),5-proj-7-tuple(v_1134)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1149))) then (if not-caught-fail(v_1150) then (if not-caught-fail(v_1151) then (if not-caught-fail(v_1152) then (v_1150,v_1151,v_1152) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {610}let v_1154: symmetricstate = catch-fail((if success?((if (success?(5-proj-7-tuple(v_1134)) && success?(2-proj-7-tuple(v_1134))) then (if (not-caught-fail(v_1148) && success?(is-true(success?(1-proj-2-tuple(v_1148))))) then dhexp(2-proj-2-tuple(v_1148),5-proj-7-tuple(v_1134)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-3-tuple(v_1149))))) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-3-tuple(v_1153))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1153)) then cipherstatepack(2-proj-3-tuple(v_1153),minnonce) else fail-any),1-proj-3-tuple(v_1153),3-proj-3-tuple(v_1149)) else fail-any) else fail-any) else fail-any)) in
        {611}let v_1155: bitstring = catch-fail(symmetricstateunpack(v_1154)) in
        {612}let v_1156: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1155))) in
        {613}let v_1157: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1156),2-proj-2-tuple(v_1156),3-proj-3-tuple(v_1155),msg_b(bob,charlie,sid))) in
        {614}let v_1158: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1155))) in
        {615}let v_1159: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1156))) && success?(1-proj-3-tuple(v_1155))) then (if (not-caught-fail(v_1158) && success?(is-true(success?(1-proj-2-tuple(v_1158))))) then cipherstatepack(1-proj-2-tuple(v_1158),increment_nonce(2-proj-2-tuple(v_1156))) else fail-any) else fail-any)) in
        {616}let v_1160: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1155)) && success?(1-proj-3-tuple(v_1155))) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-2-tuple(v_1156))))) then (if not-caught-fail(v_1157) then (if not-caught-fail(v_1159) then (v_1159,v_1157) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {617}let v_1161: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1160),2-proj-3-tuple(v_1155),3-proj-3-tuple(v_1155)))) in
        {618}let v_1162: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1160)) && success?(symmetricstatepack(1-proj-2-tuple(v_1160),2-proj-3-tuple(v_1155),3-proj-3-tuple(v_1155)))) then (if (not-caught-fail(v_1161) && success?(is-true(success?(1-proj-3-tuple(v_1161))))) then symmetricstatepack(1-proj-3-tuple(v_1161),2-proj-3-tuple(v_1161),hash(3-proj-3-tuple(v_1161),2-proj-2-tuple(v_1160))) else fail-any) else fail-any)) in
        {619}let v_1163: bitstring = catch-fail((if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-3-tuple(v_1155))))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then (if not-caught-fail(v_1162) then (v_1162,2-proj-2-tuple(v_1160)) else fail-any) else fail-any) else fail-any)) in
        {620}let v_1164: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1163),2-proj-7-tuple(v_1134),v_1137,4-proj-7-tuple(v_1134),5-proj-7-tuple(v_1134),6-proj-7-tuple(v_1134),7-proj-7-tuple(v_1134))) in
        {621}let v_1165: bitstring = catch-fail(concat3(v_1138,2-proj-3-tuple(v_1135),2-proj-2-tuple(v_1163))) in
        {622}let (hs_1166: handshakestate,message_b_1167: bitstring) = (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-7-tuple(v_1134))))) then (if (not-caught-fail(v_1135) && success?(is-true(success?(1-proj-3-tuple(v_1135))))) then (if not-caught-fail(v_1137) then (if not-caught-fail(v_1138) then (if not-caught-fail(v_1140) then (if not-caught-fail(v_1147) then (if not-caught-fail(v_1154) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-2-tuple(v_1163))))) then (if not-caught-fail(v_1164) then (if not-caught-fail(v_1165) then (v_1164,v_1165) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {623}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {624}insert statestore(bob,charlie,sid,statepack_c(hs_1166));
        {625}out(pub, message_b_1167)
    ) | (
        {657}get statestore(=bob,=charlie,=sid,statepack_c(hs_1168: handshakestate)) in
        {627}in(pub, message_c_1169: bitstring);
        {628}let v_1170: bitstring = catch-fail(handshakestateunpack(hs_1168)) in
        {629}let v_1171: bitstring = catch-fail(deconcat3(message_c_1169)) in
        {630}let v_1172: bool = catch-fail(true) in
        {631}let v_1173: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1170))) in
        {632}let v_1174: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1173))) in
        {633}let v_1175: aead = catch-fail(decrypt(1-proj-2-tuple(v_1174),2-proj-2-tuple(v_1174),3-proj-3-tuple(v_1173),2-proj-3-tuple(v_1171))) in
        {634}let v_1176: bitstring = catch-fail(aeadunpack(v_1175)) in
        {635}let v_1177: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1173))) in
        {636}let v_1178: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1174))) && success?(1-proj-3-tuple(v_1173))) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then cipherstatepack(1-proj-2-tuple(v_1177),increment_nonce(2-proj-2-tuple(v_1174))) else fail-any) else fail-any)) in
        {637}let v_1179: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1171)) && (success?(3-proj-3-tuple(v_1173)) && success?(1-proj-3-tuple(v_1173)))) then (if (not-caught-fail(v_1174) && success?(is-true(success?(1-proj-2-tuple(v_1174))))) then (if not-caught-fail(v_1175) then (if (not-caught-fail(v_1176) && success?(is-true(success?(1-proj-3-tuple(v_1176))))) then (if not-caught-fail(v_1178) then (v_1178,3-proj-3-tuple(v_1176),1-proj-3-tuple(v_1176)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {638}let v_1180: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1179),2-proj-3-tuple(v_1173),3-proj-3-tuple(v_1173)))) in
        {639}let v_1181: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1171)) && success?(symmetricstatepack(1-proj-3-tuple(v_1179),2-proj-3-tuple(v_1173),3-proj-3-tuple(v_1173)))) then (if (not-caught-fail(v_1180) && success?(is-true(success?(1-proj-3-tuple(v_1180))))) then symmetricstatepack(1-proj-3-tuple(v_1180),2-proj-3-tuple(v_1180),hash(3-proj-3-tuple(v_1180),2-proj-3-tuple(v_1171))) else fail-any) else fail-any)) in
        {640}let v_1182: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1171)) && success?(1-proj-7-tuple(v_1170))) then (if (not-caught-fail(v_1173) && success?(is-true(success?(1-proj-3-tuple(v_1173))))) then (if (not-caught-fail(v_1179) && success?(is-true(success?(1-proj-3-tuple(v_1179))))) then (if not-caught-fail(v_1181) then (v_1181,2-proj-3-tuple(v_1179),3-proj-3-tuple(v_1179)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {641}let v_1183: key = catch-fail(2-proj-3-tuple(v_1182)) in
        {642}let v_1184: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1182))) in
        {643}let v_1185: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1184))) in
        {644}let v_1186: aead = catch-fail(decrypt(1-proj-2-tuple(v_1185),2-proj-2-tuple(v_1185),3-proj-3-tuple(v_1184),3-proj-3-tuple(v_1171))) in
        {645}let v_1187: bitstring = catch-fail(aeadunpack(v_1186)) in
        {646}let v_1188: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1184))) in
        {647}let v_1189: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1185))) && success?(1-proj-3-tuple(v_1184))) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then cipherstatepack(1-proj-2-tuple(v_1188),increment_nonce(2-proj-2-tuple(v_1185))) else fail-any) else fail-any)) in
        {648}let v_1190: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1171)) && (success?(3-proj-3-tuple(v_1184)) && success?(1-proj-3-tuple(v_1184)))) then (if (not-caught-fail(v_1185) && success?(is-true(success?(1-proj-2-tuple(v_1185))))) then (if not-caught-fail(v_1186) then (if (not-caught-fail(v_1187) && success?(is-true(success?(1-proj-3-tuple(v_1187))))) then (if not-caught-fail(v_1189) then (v_1189,3-proj-3-tuple(v_1187),1-proj-3-tuple(v_1187)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {649}let v_1191: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1190),2-proj-3-tuple(v_1184),3-proj-3-tuple(v_1184)))) in
        {650}let v_1192: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1171)) && success?(symmetricstatepack(1-proj-3-tuple(v_1190),2-proj-3-tuple(v_1184),3-proj-3-tuple(v_1184)))) then (if (not-caught-fail(v_1191) && success?(is-true(success?(1-proj-3-tuple(v_1191))))) then symmetricstatepack(1-proj-3-tuple(v_1191),2-proj-3-tuple(v_1191),hash(3-proj-3-tuple(v_1191),3-proj-3-tuple(v_1171))) else fail-any) else fail-any)) in
        {651}let v_1193: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1171)) && success?(1-proj-3-tuple(v_1182))) then (if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-3-tuple(v_1184))))) then (if (not-caught-fail(v_1190) && success?(is-true(success?(1-proj-3-tuple(v_1190))))) then (if not-caught-fail(v_1192) then (v_1192,2-proj-3-tuple(v_1190),3-proj-3-tuple(v_1190)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {652}let v_1194: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {653}let v_1195: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1193),2-proj-7-tuple(v_1170),3-proj-7-tuple(v_1170),v_1183,5-proj-7-tuple(v_1170),6-proj-7-tuple(v_1170),7-proj-7-tuple(v_1170))) in
        {654}let (hs_1196: handshakestate,plaintext_c_1197: bitstring,valid_1198: bool) = (if (not-caught-fail(v_1170) && success?(is-true(success?(1-proj-7-tuple(v_1170))))) then (if (not-caught-fail(v_1171) && success?(is-true(success?(1-proj-3-tuple(v_1171))))) then (if not-caught-fail(v_1172) then (if (not-caught-fail(v_1182) && success?(is-true(success?(1-proj-3-tuple(v_1182))))) then (if not-caught-fail(v_1183) then (if (not-caught-fail(v_1193) && success?(is-true(success?(1-proj-3-tuple(v_1193))))) then (if ((3-proj-3-tuple(v_1182) && 3-proj-3-tuple(v_1193)) && (v_1183 = getpublickey((if not-caught-fail(v_1194) then keypairpack(validkey(v_1194),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1195) then (v_1195,2-proj-3-tuple(v_1193),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {655}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1197);
        {656}insert statestore(bob,charlie,sid,statepack_d(hs_1196))
    ) | (
        {690}get statestore(=bob,=charlie,=sid,statepack_d(hs_1199: handshakestate)) in
        {658}let v_1200: bitstring = catch-fail(handshakestateunpack(hs_1199)) in
        {659}let v_1201: bitstring = catch-fail((empty,empty,empty)) in
        {660}let v_1202: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1200))) in
        {661}let v_1203: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1200))) in
        {662}let v_1204: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1203),(if (success?(4-proj-7-tuple(v_1200)) && success?(3-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-2-tuple(v_1202))))) then dhexp(2-proj-2-tuple(v_1202),4-proj-7-tuple(v_1200)) else fail-any) else fail-any))) in
        {663}let v_1205: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1203),(if (success?(4-proj-7-tuple(v_1200)) && success?(3-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-2-tuple(v_1202))))) then dhexp(2-proj-2-tuple(v_1202),4-proj-7-tuple(v_1200)) else fail-any) else fail-any))) in
        {664}let v_1206: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1203),(if (success?(4-proj-7-tuple(v_1200)) && success?(3-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-2-tuple(v_1202))))) then dhexp(2-proj-2-tuple(v_1202),4-proj-7-tuple(v_1200)) else fail-any) else fail-any))) in
        {665}let v_1207: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1200)) && success?(3-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-2-tuple(v_1202))))) then dhexp(2-proj-2-tuple(v_1202),4-proj-7-tuple(v_1200)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1203))) then (if not-caught-fail(v_1204) then (if not-caught-fail(v_1205) then (if not-caught-fail(v_1206) then (v_1204,v_1205,v_1206) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {666}let v_1208: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_1200)) && success?(3-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-2-tuple(v_1202))))) then dhexp(2-proj-2-tuple(v_1202),4-proj-7-tuple(v_1200)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_1200))) then (if (not-caught-fail(v_1203) && success?(is-true(success?(1-proj-3-tuple(v_1203))))) then (if (not-caught-fail(v_1207) && success?(is-true(success?(1-proj-3-tuple(v_1207))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1207)) then cipherstatepack(2-proj-3-tuple(v_1207),minnonce) else fail-any),1-proj-3-tuple(v_1207),3-proj-3-tuple(v_1203)) else fail-any) else fail-any) else fail-any)) in
        {667}let v_1209: bitstring = catch-fail(symmetricstateunpack(v_1208)) in
        {668}let v_1210: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1209))) in
        {669}let v_1211: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1210),2-proj-2-tuple(v_1210),3-proj-3-tuple(v_1209),msg_d(bob,charlie,sid))) in
        {670}let v_1212: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1209))) in
        {671}let v_1213: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1210))) && success?(1-proj-3-tuple(v_1209))) then (if (not-caught-fail(v_1212) && success?(is-true(success?(1-proj-2-tuple(v_1212))))) then cipherstatepack(1-proj-2-tuple(v_1212),increment_nonce(2-proj-2-tuple(v_1210))) else fail-any) else fail-any)) in
        {672}let v_1214: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1209)) && success?(1-proj-3-tuple(v_1209))) then (if (not-caught-fail(v_1210) && success?(is-true(success?(1-proj-2-tuple(v_1210))))) then (if not-caught-fail(v_1211) then (if not-caught-fail(v_1213) then (v_1213,v_1211) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {673}let v_1215: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1214),2-proj-3-tuple(v_1209),3-proj-3-tuple(v_1209)))) in
        {674}let v_1216: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1214)) && success?(symmetricstatepack(1-proj-2-tuple(v_1214),2-proj-3-tuple(v_1209),3-proj-3-tuple(v_1209)))) then (if (not-caught-fail(v_1215) && success?(is-true(success?(1-proj-3-tuple(v_1215))))) then symmetricstatepack(1-proj-3-tuple(v_1215),2-proj-3-tuple(v_1215),hash(3-proj-3-tuple(v_1215),2-proj-2-tuple(v_1214))) else fail-any) else fail-any)) in
        {675}let v_1217: bitstring = catch-fail((if (not-caught-fail(v_1209) && success?(is-true(success?(1-proj-3-tuple(v_1209))))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-2-tuple(v_1214))))) then (if not-caught-fail(v_1216) then (v_1216,2-proj-2-tuple(v_1214)) else fail-any) else fail-any) else fail-any)) in
        {676}let v_1218: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1217),2-proj-7-tuple(v_1200),3-proj-7-tuple(v_1200),4-proj-7-tuple(v_1200),5-proj-7-tuple(v_1200),6-proj-7-tuple(v_1200),7-proj-7-tuple(v_1200))) in
        {677}let v_1219: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1201),2-proj-3-tuple(v_1201),2-proj-2-tuple(v_1217))) in
        {678}let v_1220: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1217))) in
        {679}let v_1221: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1220),zero)) in
        {680}let v_1222: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1220),zero)) in
        {681}let v_1223: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1220),zero)) in
        {682}let v_1224: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1220)) then (if not-caught-fail(v_1221) then (if not-caught-fail(v_1222) then (if not-caught-fail(v_1223) then (v_1221,v_1222,v_1223) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {683}let v_1225: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1224)) then cipherstatepack(1-proj-3-tuple(v_1224),minnonce) else fail-any)) in
        {684}let v_1226: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1224)) then cipherstatepack(2-proj-3-tuple(v_1224),minnonce) else fail-any)) in
        {685}let v_1227: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1217)) then (if (not-caught-fail(v_1220) && success?(is-true(success?(1-proj-3-tuple(v_1220))))) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-3-tuple(v_1224))))) then (if not-caught-fail(v_1225) then (if not-caught-fail(v_1226) then (1-proj-2-tuple(v_1217),v_1225,v_1226) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {686}let (hs_1228: handshakestate,message_d_1229: bitstring,cs1_1230: cipherstate,cs2_1231: cipherstate) = (if (not-caught-fail(v_1200) && success?(is-true(success?(1-proj-7-tuple(v_1200))))) then (if (not-caught-fail(v_1201) && success?(is-true(success?(1-proj-3-tuple(v_1201))))) then (if not-caught-fail(v_1208) then (if (not-caught-fail(v_1217) && success?(is-true(success?(1-proj-2-tuple(v_1217))))) then (if not-caught-fail(v_1218) then (if not-caught-fail(v_1219) then (if (not-caught-fail(v_1227) && success?(is-true(success?(1-proj-3-tuple(v_1227))))) then (v_1218,v_1219,2-proj-3-tuple(v_1227),3-proj-3-tuple(v_1227)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {687}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {688}insert statestore(bob,charlie,sid,statepack_e(hs_1228,cs1_1230,cs2_1231));
        {689}out(pub, message_d_1229)
    ) | (
        {691}!
        {711}get statestore(=bob,=charlie,=sid,statepack_e(hs_1232: handshakestate,cs1_1233: cipherstate,cs2_1234: cipherstate)) in
        {692}let hs_1235: handshakestate = handshakestatesetcs(hs_1232,cs1_1233) in
        {693}in(pub, message_e_1236: bitstring);
        {694}let v_1237: bitstring = catch-fail(handshakestateunpack(hs_1235)) in
        {695}let v_1238: bitstring = catch-fail(deconcat3(message_e_1236)) in
        {696}let v_1239: bool = catch-fail(true) in
        {697}let v_1240: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1237))) in
        {698}let v_1241: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1240))) in
        {699}let v_1242: aead = catch-fail(decrypt(1-proj-2-tuple(v_1241),2-proj-2-tuple(v_1241),3-proj-3-tuple(v_1240),3-proj-3-tuple(v_1238))) in
        {700}let v_1243: bitstring = catch-fail(aeadunpack(v_1242)) in
        {701}let v_1244: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1240))) in
        {702}let v_1245: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1241))) && success?(1-proj-3-tuple(v_1240))) then (if (not-caught-fail(v_1244) && success?(is-true(success?(1-proj-2-tuple(v_1244))))) then cipherstatepack(1-proj-2-tuple(v_1244),increment_nonce(2-proj-2-tuple(v_1241))) else fail-any) else fail-any)) in
        {703}let v_1246: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1238)) && (success?(3-proj-3-tuple(v_1240)) && success?(1-proj-3-tuple(v_1240)))) then (if (not-caught-fail(v_1241) && success?(is-true(success?(1-proj-2-tuple(v_1241))))) then (if not-caught-fail(v_1242) then (if (not-caught-fail(v_1243) && success?(is-true(success?(1-proj-3-tuple(v_1243))))) then (if not-caught-fail(v_1245) then (v_1245,3-proj-3-tuple(v_1243),1-proj-3-tuple(v_1243)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {704}let v_1247: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1246),2-proj-3-tuple(v_1240),3-proj-3-tuple(v_1240)))) in
        {705}let v_1248: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1238)) && success?(symmetricstatepack(1-proj-3-tuple(v_1246),2-proj-3-tuple(v_1240),3-proj-3-tuple(v_1240)))) then (if (not-caught-fail(v_1247) && success?(is-true(success?(1-proj-3-tuple(v_1247))))) then symmetricstatepack(1-proj-3-tuple(v_1247),2-proj-3-tuple(v_1247),hash(3-proj-3-tuple(v_1247),3-proj-3-tuple(v_1238))) else fail-any) else fail-any)) in
        {706}let v_1249: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1238)) && success?(1-proj-7-tuple(v_1237))) then (if (not-caught-fail(v_1240) && success?(is-true(success?(1-proj-3-tuple(v_1240))))) then (if (not-caught-fail(v_1246) && success?(is-true(success?(1-proj-3-tuple(v_1246))))) then (if not-caught-fail(v_1248) then (v_1248,2-proj-3-tuple(v_1246),3-proj-3-tuple(v_1246)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {707}let v_1250: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1249),2-proj-7-tuple(v_1237),3-proj-7-tuple(v_1237),4-proj-7-tuple(v_1237),5-proj-7-tuple(v_1237),6-proj-7-tuple(v_1237),7-proj-7-tuple(v_1237))) in
        {708}let (hs_1251: handshakestate,plaintext_e_1252: bitstring,valid_1253: bool) = (if (not-caught-fail(v_1237) && success?(is-true(success?(1-proj-7-tuple(v_1237))))) then (if (not-caught-fail(v_1238) && success?(is-true(success?(1-proj-3-tuple(v_1238))))) then (if not-caught-fail(v_1239) then (if (not-caught-fail(v_1249) && success?(is-true(success?(1-proj-3-tuple(v_1249))))) then (if (v_1239 && 3-proj-3-tuple(v_1249)) then (if not-caught-fail(v_1250) then (v_1250,2-proj-3-tuple(v_1249),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {709}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1252);
        {710}insert statestore(bob,charlie,sid,statepack_f(hs_1251,handshakestategetcs(hs_1251),cs2_1234))
    ) | (
        {712}!
        {730}get statestore(=bob,=charlie,=sid,statepack_f(hs_1254: handshakestate,cs1_1255: cipherstate,cs2_1256: cipherstate)) in
        {713}let hs_1257: handshakestate = handshakestatesetcs(hs_1254,cs2_1256) in
        {714}let v_1258: bitstring = catch-fail(handshakestateunpack(hs_1257)) in
        {715}let v_1259: bitstring = catch-fail((empty,empty,empty)) in
        {716}let v_1260: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1258))) in
        {717}let v_1261: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1260))) in
        {718}let v_1262: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1261),2-proj-2-tuple(v_1261),3-proj-3-tuple(v_1260),msg_f(bob,charlie,sid))) in
        {719}let v_1263: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1260))) in
        {720}let v_1264: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1261))) && success?(1-proj-3-tuple(v_1260))) then (if (not-caught-fail(v_1263) && success?(is-true(success?(1-proj-2-tuple(v_1263))))) then cipherstatepack(1-proj-2-tuple(v_1263),increment_nonce(2-proj-2-tuple(v_1261))) else fail-any) else fail-any)) in
        {721}let v_1265: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1260)) && success?(1-proj-3-tuple(v_1260))) then (if (not-caught-fail(v_1261) && success?(is-true(success?(1-proj-2-tuple(v_1261))))) then (if not-caught-fail(v_1262) then (if not-caught-fail(v_1264) then (v_1264,v_1262) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {722}let v_1266: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1265),2-proj-3-tuple(v_1260),3-proj-3-tuple(v_1260)))) in
        {723}let v_1267: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1265)) && success?(symmetricstatepack(1-proj-2-tuple(v_1265),2-proj-3-tuple(v_1260),3-proj-3-tuple(v_1260)))) then (if (not-caught-fail(v_1266) && success?(is-true(success?(1-proj-3-tuple(v_1266))))) then symmetricstatepack(1-proj-3-tuple(v_1266),2-proj-3-tuple(v_1266),hash(3-proj-3-tuple(v_1266),2-proj-2-tuple(v_1265))) else fail-any) else fail-any)) in
        {724}let v_1268: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1258)) then (if (not-caught-fail(v_1260) && success?(is-true(success?(1-proj-3-tuple(v_1260))))) then (if (not-caught-fail(v_1265) && success?(is-true(success?(1-proj-2-tuple(v_1265))))) then (if not-caught-fail(v_1267) then (v_1267,2-proj-2-tuple(v_1265)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {725}let v_1269: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1268),2-proj-7-tuple(v_1258),3-proj-7-tuple(v_1258),4-proj-7-tuple(v_1258),5-proj-7-tuple(v_1258),6-proj-7-tuple(v_1258),7-proj-7-tuple(v_1258))) in
        {726}let v_1270: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1259),2-proj-3-tuple(v_1259),2-proj-2-tuple(v_1268))) in
        {727}let (hs_1271: handshakestate,message_f_1272: bitstring) = (if (not-caught-fail(v_1258) && success?(is-true(success?(1-proj-7-tuple(v_1258))))) then (if (not-caught-fail(v_1259) && success?(is-true(success?(1-proj-3-tuple(v_1259))))) then (if (not-caught-fail(v_1268) && success?(is-true(success?(1-proj-2-tuple(v_1268))))) then (if not-caught-fail(v_1269) then (if not-caught-fail(v_1270) then (v_1269,v_1270) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {728}event SendMsg(bob,charlie,stagepack_f(sid),msg_f(bob,charlie,sid));
        {729}out(pub, message_f_1272)
    ) | (
        {731}event LeakS(phase0,bob);
        {732}out(pub, key_s(bob))
    ) | (
        {733}phase 1;
        {734}event LeakS(phase1,bob);
        {735}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)); event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_f(bob,alice,sid_b)); attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 175 rules in the queue.
400 rules inserted. The rule base contains 392 rules. 17 rules in the queue.
600 rules inserted. The rule base contains 575 rules. 129 rules in the queue.
800 rules inserted. The rule base contains 753 rules. 64 rules in the queue.
1000 rules inserted. The rule base contains 897 rules. 231 rules in the queue.
1200 rules inserted. The rule base contains 1070 rules. 224 rules in the queue.
1400 rules inserted. The rule base contains 1228 rules. 307 rules in the queue.
1600 rules inserted. The rule base contains 1368 rules. 276 rules in the queue.
1800 rules inserted. The rule base contains 1543 rules. 284 rules in the queue.
2000 rules inserted. The rule base contains 1719 rules. 328 rules in the queue.
2200 rules inserted. The rule base contains 1845 rules. 353 rules in the queue.
2400 rules inserted. The rule base contains 1995 rules. 366 rules in the queue.
2600 rules inserted. The rule base contains 2149 rules. 414 rules in the queue.
2800 rules inserted. The rule base contains 2282 rules. 409 rules in the queue.
3000 rules inserted. The rule base contains 2422 rules. 418 rules in the queue.
3200 rules inserted. The rule base contains 2528 rules. 418 rules in the queue.
3400 rules inserted. The rule base contains 2641 rules. 418 rules in the queue.
3600 rules inserted. The rule base contains 2712 rules. 392 rules in the queue.
3800 rules inserted. The rule base contains 2816 rules. 383 rules in the queue.
4000 rules inserted. The rule base contains 2959 rules. 398 rules in the queue.
4200 rules inserted. The rule base contains 3078 rules. 393 rules in the queue.
4400 rules inserted. The rule base contains 3204 rules. 369 rules in the queue.
4600 rules inserted. The rule base contains 3326 rules. 367 rules in the queue.
4800 rules inserted. The rule base contains 3443 rules. 358 rules in the queue.
5000 rules inserted. The rule base contains 3567 rules. 361 rules in the queue.
5200 rules inserted. The rule base contains 3695 rules. 356 rules in the queue.
5400 rules inserted. The rule base contains 3798 rules. 338 rules in the queue.
5600 rules inserted. The rule base contains 3912 rules. 333 rules in the queue.
5800 rules inserted. The rule base contains 3982 rules. 285 rules in the queue.
6000 rules inserted. The rule base contains 4115 rules. 272 rules in the queue.
6200 rules inserted. The rule base contains 4209 rules. 251 rules in the queue.
6400 rules inserted. The rule base contains 4327 rules. 232 rules in the queue.
6600 rules inserted. The rule base contains 4475 rules. 270 rules in the queue.
6800 rules inserted. The rule base contains 4598 rules. 306 rules in the queue.
7000 rules inserted. The rule base contains 4723 rules. 282 rules in the queue.
7200 rules inserted. The rule base contains 4843 rules. 312 rules in the queue.
7400 rules inserted. The rule base contains 4970 rules. 338 rules in the queue.
7600 rules inserted. The rule base contains 5081 rules. 315 rules in the queue.
7800 rules inserted. The rule base contains 5255 rules. 310 rules in the queue.
8000 rules inserted. The rule base contains 5389 rules. 268 rules in the queue.
8200 rules inserted. The rule base contains 5535 rules. 261 rules in the queue.
8400 rules inserted. The rule base contains 5677 rules. 287 rules in the queue.
8600 rules inserted. The rule base contains 5804 rules. 272 rules in the queue.
8800 rules inserted. The rule base contains 5921 rules. 302 rules in the queue.
9000 rules inserted. The rule base contains 6051 rules. 288 rules in the queue.
9200 rules inserted. The rule base contains 6181 rules. 280 rules in the queue.
9400 rules inserted. The rule base contains 6276 rules. 244 rules in the queue.
9600 rules inserted. The rule base contains 6379 rules. 230 rules in the queue.
9800 rules inserted. The rule base contains 6505 rules. 189 rules in the queue.
10000 rules inserted. The rule base contains 6616 rules. 193 rules in the queue.
10200 rules inserted. The rule base contains 6749 rules. 146 rules in the queue.
10400 rules inserted. The rule base contains 6816 rules. 79 rules in the queue.
10600 rules inserted. The rule base contains 6818 rules. 0 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155665]),msg_a(alice,bob,sid[!1 = @sid_448155665]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_448155666]),msg_a(alice,bob,sid[!1 = @sid_448155665])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155674]),msg_a(alice,bob,sid[!1 = @sid_448155674]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_448155675]),msg_a(alice,bob,sid[!1 = @sid_448155674])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155684]),msg_a(alice,bob,sid[!1 = @sid_448155684]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_448155685]),msg_a(alice,bob,sid[!1 = @sid_448155684])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155694]),msg_a(alice,bob,sid[!1 = @sid_448155694]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_448155695]),msg_a(alice,bob,sid[!1 = @sid_448155694])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155703]),msg_a(alice,bob,sid[!1 = @sid_448155703]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_448155704]),msg_a(alice,bob,sid[!1 = @sid_448155703])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155712]),msg_a(alice,bob,sid[!1 = @sid_448155712]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_448155712]))
Abbreviations:
sid_448155769 = sid[!1 = @sid_448155744]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_448155769,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448155769,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_448155769,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448155769),msg_a(alice,bob,sid_448155769)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))).

7. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {372}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155769),g))),msg_a(alice,bob,sid_448155769)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_448155769).
attacker(msg_a(alice,bob,sid_448155769)).

18. By 17, the attacker may know msg_a(alice,bob,sid_448155769).
So the attacker may know msg_a(alice,bob,sid_448155769) in phase 1.
attacker_p1(msg_a(alice,bob,sid_448155769)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155772]),msg_a(alice,bob,sid[!1 = @sid_448155772]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_448155772]))
Abbreviations:
sid_448155830 = sid[!1 = @sid_448155805]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_448155830,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448155830,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_448155830,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448155830),msg_a(alice,bob,sid_448155830)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))).

7. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {372}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155830),g))),msg_a(alice,bob,sid_448155830)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_448155830).
attacker(msg_a(alice,bob,sid_448155830)).

18. By 17, the attacker may know msg_a(alice,bob,sid_448155830).
So the attacker may know msg_a(alice,bob,sid_448155830) in phase 1.
attacker_p1(msg_a(alice,bob,sid_448155830)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155833]),msg_a(alice,bob,sid[!1 = @sid_448155833]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_448155833]))
Abbreviations:
sid_448155892 = sid[!1 = @sid_448155867]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_448155892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448155892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_448155892,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448155892),msg_a(alice,bob,sid_448155892)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))).

7. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {372}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155892),g))),msg_a(alice,bob,sid_448155892)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_448155892).
attacker(msg_a(alice,bob,sid_448155892)).

18. By 17, the attacker may know msg_a(alice,bob,sid_448155892).
So the attacker may know msg_a(alice,bob,sid_448155892) in phase 1.
attacker_p1(msg_a(alice,bob,sid_448155892)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155895]),msg_a(alice,bob,sid[!1 = @sid_448155895]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_448155895]))
Abbreviations:
sid_448155952 = sid[!1 = @sid_448155927]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_448155952,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448155952,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_448155952,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448155952),msg_a(alice,bob,sid_448155952)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))).

7. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {372}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

8. By 1, the attacker may have the channel pub.
By 7, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g)))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 9, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)).
attacker(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448155952),g))),msg_a(alice,bob,sid_448155952)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_448155952).
attacker(msg_a(alice,bob,sid_448155952)).

18. By 17, the attacker may know msg_a(alice,bob,sid_448155952).
So the attacker may know msg_a(alice,bob,sid_448155952) in phase 1.
attacker_p1(msg_a(alice,bob,sid_448155952)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_448155955]),msg_b(bob,charlie,sid[!1 = @sid_448155955]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448155956]),msg_a(alice,bob,sid[!1 = @sid_448155956]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448155956]),msg_b(bob,charlie,sid[!1 = @sid_448155955])))
Abbreviations:
sid_448156032 = sid[!1 = @sid_448155979]
sid_448156033 = sid[!1 = @sid_448156005]

1. The entry statestore(alice,bob,sid_448156032,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448156032,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_448156032,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156032),msg_a(alice,bob,sid_448156032)) may be executed at {38}.
So the entry statestore(alice,bob,sid_448156032,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),key_e(alice,bob,sid_448156032)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {39}.
table(statestore(alice,bob,sid_448156032,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),key_e(alice,bob,sid_448156032)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_448156033,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {567}.
table(statestore(bob,charlie,sid_448156033,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_448156032,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156032),msg_a(alice,bob,sid_448156032)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))).

5. The entry statestore(bob,charlie,sid_448156033,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {589}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032))) that may be sent on channel pub by 4 may be received at input {568}.
We have validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_448156033,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,false))) may be inserted in a table at insert {588}.
table(statestore(bob,charlie,sid_448156033,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,false)))).

6. The entry statestore(bob,charlie,sid_448156033,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),empty,false))) that may be in a table by 5 may be read at get {626}.
The event SendMsg(bob,charlie,stagepack_b(sid_448156033),msg_b(bob,charlie,sid_448156033)) may be executed at {623}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156033),dhexp_real(key_e(alice,bob,sid_448156032),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156032),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032))),validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g))),msg_b(bob,charlie,sid_448156033))) may be sent on channel pub at output {625}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156033),dhexp_real(key_e(alice,bob,sid_448156032),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156032),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032))),validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g))),msg_b(bob,charlie,sid_448156033)))).

7. The entry statestore(alice,bob,sid_448156032,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156032),g)),key_e(alice,bob,sid_448156032)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {77}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156033),dhexp_real(key_e(alice,bob,sid_448156032),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156032),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156032),g))),msg_a(alice,bob,sid_448156032))),validkey(dhexp_real(key_e(bob,charlie,sid_448156033),g))),msg_b(bob,charlie,sid_448156033))) that may be sent on channel pub by 6 may be received at input {42}.
So event RecvMsg(alice,bob,stagepack_b(sid_448156032),msg_b(bob,charlie,sid_448156033)) may be executed at {75}.
end(RecvMsg(alice,bob,stagepack_b(sid_448156032),msg_b(bob,charlie,sid_448156033))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_448156036]),msg_b(bob,charlie,sid[!1 = @sid_448156036]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156037]),msg_a(alice,bob,sid[!1 = @sid_448156037]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156037]),msg_b(bob,charlie,sid[!1 = @sid_448156036])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156040]),msg_b(bob,alice,sid[!1 = @sid_448156040]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156041]),msg_a(alice,bob,sid[!1 = @sid_448156041]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156041]),msg_b(bob,alice,sid[!1 = @sid_448156040])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_448156050]),msg_b(bob,charlie,sid[!1 = @sid_448156050]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156051]),msg_a(alice,bob,sid[!1 = @sid_448156051]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156051]),msg_b(bob,charlie,sid[!1 = @sid_448156050])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156054]),msg_b(bob,alice,sid[!1 = @sid_448156054]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156055]),msg_a(alice,bob,sid[!1 = @sid_448156055]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156055]),msg_b(bob,alice,sid[!1 = @sid_448156054])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_448156064]),msg_b(bob,charlie,sid[!1 = @sid_448156064]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156065]),msg_a(alice,bob,sid[!1 = @sid_448156065]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156065]),msg_b(bob,charlie,sid[!1 = @sid_448156064])))
Abbreviations:
sid_448156141 = sid[!1 = @sid_448156088]
sid_448156142 = sid[!1 = @sid_448156114]

1. The entry statestore(alice,bob,sid_448156141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448156141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_448156141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156141),msg_a(alice,bob,sid_448156141)) may be executed at {38}.
So the entry statestore(alice,bob,sid_448156141,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),key_e(alice,bob,sid_448156141)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {39}.
table(statestore(alice,bob,sid_448156141,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),key_e(alice,bob,sid_448156141)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_448156142,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {567}.
table(statestore(bob,charlie,sid_448156142,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_448156141,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156141),msg_a(alice,bob,sid_448156141)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))).

5. The entry statestore(bob,charlie,sid_448156142,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {589}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141))) that may be sent on channel pub by 4 may be received at input {568}.
We have validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_448156142,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,false))) may be inserted in a table at insert {588}.
table(statestore(bob,charlie,sid_448156142,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,false)))).

6. The entry statestore(bob,charlie,sid_448156142,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),empty,false))) that may be in a table by 5 may be read at get {626}.
The event SendMsg(bob,charlie,stagepack_b(sid_448156142),msg_b(bob,charlie,sid_448156142)) may be executed at {623}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156142),dhexp_real(key_e(alice,bob,sid_448156141),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156141),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141))),validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g))),msg_b(bob,charlie,sid_448156142))) may be sent on channel pub at output {625}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156142),dhexp_real(key_e(alice,bob,sid_448156141),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156141),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141))),validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g))),msg_b(bob,charlie,sid_448156142)))).

7. The entry statestore(alice,bob,sid_448156141,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156141),g)),key_e(alice,bob,sid_448156141)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {77}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156142),dhexp_real(key_e(alice,bob,sid_448156141),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156141),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156141),g))),msg_a(alice,bob,sid_448156141))),validkey(dhexp_real(key_e(bob,charlie,sid_448156142),g))),msg_b(bob,charlie,sid_448156142))) that may be sent on channel pub by 6 may be received at input {42}.
So event RecvMsg(alice,bob,stagepack_b(sid_448156141),msg_b(bob,charlie,sid_448156142)) may be executed at {75}.
end(RecvMsg(alice,bob,stagepack_b(sid_448156141),msg_b(bob,charlie,sid_448156142))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_448156145]),msg_b(bob,charlie,sid[!1 = @sid_448156145]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156146]),msg_a(alice,bob,sid[!1 = @sid_448156146]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_448156146]),msg_b(bob,charlie,sid[!1 = @sid_448156145])))
Abbreviations:
sid_448156222 = sid[!1 = @sid_448156169]
sid_448156223 = sid[!1 = @sid_448156195]

1. The entry statestore(alice,bob,sid_448156222,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448156222,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_448156222,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156222),msg_a(alice,bob,sid_448156222)) may be executed at {38}.
So the entry statestore(alice,bob,sid_448156222,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),key_e(alice,bob,sid_448156222)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {39}.
table(statestore(alice,bob,sid_448156222,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),key_e(alice,bob,sid_448156222)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_448156223,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {567}.
table(statestore(bob,charlie,sid_448156223,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_448156222,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448156222),msg_a(alice,bob,sid_448156222)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))).

5. The entry statestore(bob,charlie,sid_448156223,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {589}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222))) that may be sent on channel pub by 4 may be received at input {568}.
We have validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_448156223,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,false))) may be inserted in a table at insert {588}.
table(statestore(bob,charlie,sid_448156223,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,false)))).

6. The entry statestore(bob,charlie,sid_448156223,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),empty,false))) that may be in a table by 5 may be read at get {626}.
The event SendMsg(bob,charlie,stagepack_b(sid_448156223),msg_b(bob,charlie,sid_448156223)) may be executed at {623}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156223),dhexp_real(key_e(alice,bob,sid_448156222),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156222),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222))),validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g))),msg_b(bob,charlie,sid_448156223))) may be sent on channel pub at output {625}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156223),dhexp_real(key_e(alice,bob,sid_448156222),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156222),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222))),validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g))),msg_b(bob,charlie,sid_448156223)))).

7. The entry statestore(alice,bob,sid_448156222,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448156222),g)),key_e(alice,bob,sid_448156222)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {77}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,charlie,sid_448156223),dhexp_real(key_e(alice,bob,sid_448156222),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448156222),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448156222),g))),msg_a(alice,bob,sid_448156222))),validkey(dhexp_real(key_e(bob,charlie,sid_448156223),g))),msg_b(bob,charlie,sid_448156223))) that may be sent on channel pub by 6 may be received at input {42}.
So event RecvMsg(alice,bob,stagepack_b(sid_448156222),msg_b(bob,charlie,sid_448156223)) may be executed at {75}.
end(RecvMsg(alice,bob,stagepack_b(sid_448156222),msg_b(bob,charlie,sid_448156223))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156241]),msg_c(alice,bob,sid[!1 = @sid_448156241]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156242]),msg_b(bob,alice,sid[!1 = @sid_448156242]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156241]),msg_a(alice,bob,sid[!1 = @sid_448156241]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_448156242]),msg_c(alice,bob,sid[!1 = @sid_448156241])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156250]),msg_c(alice,bob,sid[!1 = @sid_448156250]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156251]),msg_b(bob,alice,sid[!1 = @sid_448156251]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156250]),msg_a(alice,bob,sid[!1 = @sid_448156250]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_448156251]),msg_c(alice,bob,sid[!1 = @sid_448156250])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156260]),msg_c(alice,bob,sid[!1 = @sid_448156260]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156261]),msg_b(bob,alice,sid[!1 = @sid_448156261]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156260]),msg_a(alice,bob,sid[!1 = @sid_448156260]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_448156261]),msg_c(alice,bob,sid[!1 = @sid_448156260])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156270]),msg_c(alice,bob,sid[!1 = @sid_448156270]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156271]),msg_b(bob,alice,sid[!1 = @sid_448156271]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156270]),msg_a(alice,bob,sid[!1 = @sid_448156270]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_448156271]),msg_c(alice,bob,sid[!1 = @sid_448156270])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156279]),msg_c(alice,bob,sid[!1 = @sid_448156279]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156280]),msg_b(bob,alice,sid[!1 = @sid_448156280]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156279]),msg_a(alice,bob,sid[!1 = @sid_448156279]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_448156280]),msg_c(alice,bob,sid[!1 = @sid_448156279])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156303]),msg_d(bob,alice,sid[!1 = @sid_448156303]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156304]),msg_c(alice,bob,sid[!1 = @sid_448156304]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156303]),msg_b(bob,alice,sid[!1 = @sid_448156303]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156304]),msg_a(alice,bob,sid[!1 = @sid_448156304]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_448156304]),msg_d(bob,alice,sid[!1 = @sid_448156303])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156312]),msg_d(bob,alice,sid[!1 = @sid_448156312]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156313]),msg_c(alice,bob,sid[!1 = @sid_448156313]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156312]),msg_b(bob,alice,sid[!1 = @sid_448156312]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156313]),msg_a(alice,bob,sid[!1 = @sid_448156313]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_448156313]),msg_d(bob,alice,sid[!1 = @sid_448156312])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156322]),msg_d(bob,alice,sid[!1 = @sid_448156322]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156323]),msg_c(alice,bob,sid[!1 = @sid_448156323]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156322]),msg_b(bob,alice,sid[!1 = @sid_448156322]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156323]),msg_a(alice,bob,sid[!1 = @sid_448156323]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_448156323]),msg_d(bob,alice,sid[!1 = @sid_448156322])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156332]),msg_d(bob,alice,sid[!1 = @sid_448156332]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156333]),msg_c(alice,bob,sid[!1 = @sid_448156333]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156332]),msg_b(bob,alice,sid[!1 = @sid_448156332]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156333]),msg_a(alice,bob,sid[!1 = @sid_448156333]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_448156333]),msg_d(bob,alice,sid[!1 = @sid_448156332])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156341]),msg_d(bob,alice,sid[!1 = @sid_448156341]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156342]),msg_c(alice,bob,sid[!1 = @sid_448156342]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156341]),msg_b(bob,alice,sid[!1 = @sid_448156341]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156342]),msg_a(alice,bob,sid[!1 = @sid_448156342]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_448156342]),msg_d(bob,alice,sid[!1 = @sid_448156341])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156365]),msg_e(alice,bob,sid[!1 = @sid_448156365]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156366]),msg_d(bob,alice,sid[!1 = @sid_448156366]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156365]),msg_c(alice,bob,sid[!1 = @sid_448156365]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156366]),msg_b(bob,alice,sid[!1 = @sid_448156366]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156365]),msg_a(alice,bob,sid[!1 = @sid_448156365]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_448156366]),msg_e(alice,bob,sid[!1 = @sid_448156365])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156374]),msg_e(alice,bob,sid[!1 = @sid_448156374]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156375]),msg_d(bob,alice,sid[!1 = @sid_448156375]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156374]),msg_c(alice,bob,sid[!1 = @sid_448156374]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156375]),msg_b(bob,alice,sid[!1 = @sid_448156375]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156374]),msg_a(alice,bob,sid[!1 = @sid_448156374]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_448156375]),msg_e(alice,bob,sid[!1 = @sid_448156374])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156384]),msg_e(alice,bob,sid[!1 = @sid_448156384]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156385]),msg_d(bob,alice,sid[!1 = @sid_448156385]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156384]),msg_c(alice,bob,sid[!1 = @sid_448156384]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156385]),msg_b(bob,alice,sid[!1 = @sid_448156385]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156384]),msg_a(alice,bob,sid[!1 = @sid_448156384]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_448156385]),msg_e(alice,bob,sid[!1 = @sid_448156384])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1382,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156394]),msg_e(alice,bob,sid[!1 = @sid_448156394]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156395]),msg_d(bob,alice,sid[!1 = @sid_448156395]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156394]),msg_c(alice,bob,sid[!1 = @sid_448156394]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156395]),msg_b(bob,alice,sid[!1 = @sid_448156395]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156394]),msg_a(alice,bob,sid[!1 = @sid_448156394]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_448156395]),msg_e(alice,bob,sid[!1 = @sid_448156394])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156403]),msg_e(alice,bob,sid[!1 = @sid_448156403]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156404]),msg_d(bob,alice,sid[!1 = @sid_448156404]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156403]),msg_c(alice,bob,sid[!1 = @sid_448156403]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156404]),msg_b(bob,alice,sid[!1 = @sid_448156404]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156403]),msg_a(alice,bob,sid[!1 = @sid_448156403]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_448156404]),msg_e(alice,bob,sid[!1 = @sid_448156403])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156427]),msg_f(bob,alice,sid[!1 = @sid_448156427]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156428]),msg_e(alice,bob,sid[!1 = @sid_448156428]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156427]),msg_d(bob,alice,sid[!1 = @sid_448156427]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156428]),msg_c(alice,bob,sid[!1 = @sid_448156428]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156427]),msg_b(bob,alice,sid[!1 = @sid_448156427]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156428]),msg_a(alice,bob,sid[!1 = @sid_448156428]))) -> end(RecvMsg(alice,bob,stagepack_f(sid[!1 = @sid_448156428]),msg_f(bob,alice,sid[!1 = @sid_448156427])))
RESULT event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156436]),msg_f(bob,alice,sid[!1 = @sid_448156436]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156437]),msg_e(alice,bob,sid[!1 = @sid_448156437]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156436]),msg_d(bob,alice,sid[!1 = @sid_448156436]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156437]),msg_c(alice,bob,sid[!1 = @sid_448156437]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156436]),msg_b(bob,alice,sid[!1 = @sid_448156436]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156437]),msg_a(alice,bob,sid[!1 = @sid_448156437]))) -> end(RecvMsg(alice,bob,stagepack_f(sid[!1 = @sid_448156437]),msg_f(bob,alice,sid[!1 = @sid_448156436])))
RESULT event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156446]),msg_f(bob,alice,sid[!1 = @sid_448156446]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156447]),msg_e(alice,bob,sid[!1 = @sid_448156447]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156446]),msg_d(bob,alice,sid[!1 = @sid_448156446]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156447]),msg_c(alice,bob,sid[!1 = @sid_448156447]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156446]),msg_b(bob,alice,sid[!1 = @sid_448156446]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156447]),msg_a(alice,bob,sid[!1 = @sid_448156447]))) -> end(RecvMsg(alice,bob,stagepack_f(sid[!1 = @sid_448156447]),msg_f(bob,alice,sid[!1 = @sid_448156446])))
RESULT event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,c_1382,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156456]),msg_f(bob,alice,sid[!1 = @sid_448156456]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156457]),msg_e(alice,bob,sid[!1 = @sid_448156457]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156456]),msg_d(bob,alice,sid[!1 = @sid_448156456]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156457]),msg_c(alice,bob,sid[!1 = @sid_448156457]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156456]),msg_b(bob,alice,sid[!1 = @sid_448156456]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156457]),msg_a(alice,bob,sid[!1 = @sid_448156457]))) -> end(RecvMsg(alice,bob,stagepack_f(sid[!1 = @sid_448156457]),msg_f(bob,alice,sid[!1 = @sid_448156456])))
RESULT event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156465]),msg_f(bob,alice,sid[!1 = @sid_448156465]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156466]),msg_e(alice,bob,sid[!1 = @sid_448156466]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156465]),msg_d(bob,alice,sid[!1 = @sid_448156465]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156466]),msg_c(alice,bob,sid[!1 = @sid_448156466]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156465]),msg_b(bob,alice,sid[!1 = @sid_448156465]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156466]),msg_a(alice,bob,sid[!1 = @sid_448156466]))) -> end(RecvMsg(alice,bob,stagepack_f(sid[!1 = @sid_448156466]),msg_f(bob,alice,sid[!1 = @sid_448156465])))
RESULT event(RecvMsg(alice,bob,stagepack_f(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_f(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_f(bob,alice,sid_b))
RESULT not attacker_p1(msg_f(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_f(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,alice,stagepack_f(sid[!1 = @sid_448156487]),msg_f(bob,alice,sid[!1 = @sid_448156487]))) && begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_448156488]),msg_e(alice,bob,sid[!1 = @sid_448156488]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_448156487]),msg_d(bob,alice,sid[!1 = @sid_448156487]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_448156488]),msg_c(alice,bob,sid[!1 = @sid_448156488]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_448156487]),msg_b(bob,alice,sid[!1 = @sid_448156487]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_448156488]),msg_a(alice,bob,sid[!1 = @sid_448156488]))) -> end(RecvEnd(true))
Abbreviations:
sid_448157156 = sid[!1 = @sid_448157075]
sid_448157157 = sid[!1 = @sid_448157145]

1. The entry statestore(alice,bob,sid_448157157,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_448157157,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_448157157,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448157157),msg_a(alice,bob,sid_448157157)) may be executed at {38}.
So the entry statestore(alice,bob,sid_448157157,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) may be inserted in a table at insert {39}.
table(statestore(alice,bob,sid_448157157,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true)))).

3. The entry statestore(bob,alice,sid_448157156,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {384}.
table(statestore(bob,alice,sid_448157156,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_448157157,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 1 may be read at get {41}.
The event SendMsg(alice,bob,stagepack_a(sid_448157157),msg_a(alice,bob,sid_448157157)) may be executed at {38}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))) may be sent on channel pub at output {40}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))).

5. The entry statestore(bob,alice,sid_448157156,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {406}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))) that may be sent on channel pub by 4 may be received at input {385}.
We have validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_448157156,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) may be inserted in a table at insert {405}.
table(statestore(bob,alice,sid_448157156,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false)))).

6. The entry statestore(bob,alice,sid_448157156,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) that may be in a table by 5 may be read at get {443}.
The event SendMsg(bob,alice,stagepack_b(sid_448157156),msg_b(bob,alice,sid_448157156)) may be executed at {440}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))) may be sent on channel pub at output {442}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))).

7. The entry statestore(alice,bob,sid_448157157,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),empty,empty,true))) that may be in a table by 2 may be read at get {77}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))) that may be sent on channel pub by 6 may be received at input {42}.
So the entry statestore(alice,bob,sid_448157157,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true))) may be inserted in a table at insert {76}.
table(statestore(alice,bob,sid_448157157,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true)))).

8. The entry statestore(alice,bob,sid_448157157,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true))) that may be in a table by 7 may be read at get {106}.
The event SendMsg(alice,bob,stagepack_c(sid_448157157),msg_c(alice,bob,sid_448157157)) may be executed at {103}.
So the entry statestore(alice,bob,sid_448157157,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true))) may be inserted in a table at insert {104}.
table(statestore(alice,bob,sid_448157157,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true)))).

9. The entry statestore(bob,alice,sid_448157156,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) that may be in a table by 5 may be read at get {443}.
The event SendMsg(bob,alice,stagepack_b(sid_448157156),msg_b(bob,alice,sid_448157156)) may be executed at {440}.
So the entry statestore(bob,alice,sid_448157156,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) may be inserted in a table at insert {441}.
table(statestore(bob,alice,sid_448157156,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false)))).

10. The entry statestore(alice,bob,sid_448157157,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true))) that may be in a table by 7 may be read at get {106}.
The event SendMsg(alice,bob,stagepack_c(sid_448157157),msg_c(alice,bob,sid_448157157)) may be executed at {103}.
So the message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))) may be sent on channel pub at output {105}.
mess(pub,concat3(empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))).

11. The entry statestore(bob,alice,sid_448157156,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),empty,validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) that may be in a table by 9 may be read at get {474}.
The message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))) that may be sent on channel pub by 10 may be received at input {444}.
So the entry statestore(bob,alice,sid_448157156,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) may be inserted in a table at insert {473}.
table(statestore(bob,alice,sid_448157156,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false)))).

12. The entry statestore(bob,alice,sid_448157156,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) that may be in a table by 11 may be read at get {507}.
The event SendMsg(bob,alice,stagepack_d(sid_448157156),msg_d(bob,alice,sid_448157156)) may be executed at {504}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))) may be sent on channel pub at output {506}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))).

13. The entry statestore(alice,bob,sid_448157157,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true))) that may be in a table by 8 may be read at get {140}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))) that may be sent on channel pub by 12 may be received at input {107}.
So the entry statestore(alice,bob,sid_448157157,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) may be inserted in a table at insert {139}.
table(statestore(alice,bob,sid_448157157,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce)))).

14. The entry statestore(alice,bob,sid_448157157,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) that may be in a table by 13 may be read at get {160}.
The event SendMsg(alice,bob,stagepack_e(sid_448157157),msg_e(alice,bob,sid_448157157)) may be executed at {157}.
So the entry statestore(alice,bob,sid_448157157,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) may be inserted in a table at insert {158}.
table(statestore(alice,bob,sid_448157157,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce)))).

15. The entry statestore(bob,alice,sid_448157156,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(increment_nonce(minnonce)))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false))) that may be in a table by 11 may be read at get {507}.
The event SendMsg(bob,alice,stagepack_d(sid_448157156),msg_d(bob,alice,sid_448157156)) may be executed at {504}.
So the entry statestore(bob,alice,sid_448157156,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) may be inserted in a table at insert {505}.
table(statestore(bob,alice,sid_448157156,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce)))).

16. The entry statestore(alice,bob,sid_448157157,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) that may be in a table by 13 may be read at get {160}.
The event SendMsg(alice,bob,stagepack_e(sid_448157157),msg_e(alice,bob,sid_448157157)) may be executed at {157}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157))) may be sent on channel pub at output {159}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))).

17. The entry statestore(bob,alice,sid_448157156,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) that may be in a table by 15 may be read at get {528}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157))) that may be sent on channel pub by 16 may be received at input {510}.
So the entry statestore(bob,alice,sid_448157156,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) may be inserted in a table at insert {527}.
table(statestore(bob,alice,sid_448157156,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce)))).

18. The entry statestore(bob,alice,sid_448157156,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),key_e(bob,alice,sid_448157156)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) that may be in a table by 17 may be read at get {547}.
The event SendMsg(bob,alice,stagepack_f(sid_448157156),msg_f(bob,alice,sid_448157156)) may be executed at {545}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157))),msg_f(bob,alice,sid_448157156))) may be sent on channel pub at output {546}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157))),msg_f(bob,alice,sid_448157156)))).

19. The entry statestore(alice,bob,sid_448157157,statepack_f(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_448157157),g)),key_e(alice,bob,sid_448157157)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce))) that may be in a table by 14 may be read at get {181}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_e(alice,bob,sid_448157157),dhexp_real(key_s(bob),g))),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp_real(key_e(bob,alice,sid_448157156),dhexp_real(key_e(alice,bob,sid_448157157),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_448157157),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),encrypt(empty,minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_448157157),g))),msg_a(alice,bob,sid_448157157))),validkey(dhexp_real(key_e(bob,alice,sid_448157156),g))),msg_b(bob,alice,sid_448157156))),validkey(dhexp_real(key_s(alice),g)))),msg_c(alice,bob,sid_448157157))),msg_d(bob,alice,sid_448157156))),msg_e(alice,bob,sid_448157157))),msg_f(bob,alice,sid_448157156))) that may be sent on channel pub by 18 may be received at input {163}.
So event RecvEnd(true) may be executed at {180}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
