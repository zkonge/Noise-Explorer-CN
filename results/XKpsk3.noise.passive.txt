File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 261, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 272, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 275, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 277, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 277, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 278, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 285, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 290, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 290, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 291, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 298, character 6:
Warning: identifier s rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 26-27:
Warning: identifier ns rebound.
File "XKpsk3.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 301, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 302, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 303, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 328, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 329, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 330, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 331, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 332, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 334, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 342, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 346, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 348, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 26-27:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 40-45:
Warning: identifier valid1 rebound.
File "XKpsk3.noise.passive.pv", line 357, characters 6-7:
Warning: identifier rs rebound.
File "XKpsk3.noise.passive.pv", line 358, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 362, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 569, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 570, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 561, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 563, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 555, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 298, character 6:
Warning: identifier s rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 26-27:
Warning: identifier ns rebound.
File "XKpsk3.noise.passive.pv", line 300, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 301, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 302, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 303, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 549, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 342, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 343, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 346, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 348, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 542, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 272, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 275, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 277, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 277, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 278, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 261, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 628, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 630, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 621, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 622, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 615, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 26-27:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 40-45:
Warning: identifier valid1 rebound.
File "XKpsk3.noise.passive.pv", line 357, characters 6-7:
Warning: identifier rs rebound.
File "XKpsk3.noise.passive.pv", line 358, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 362, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 608, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 285, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 290, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 290, characters 26-35:
Warning: identifier ciphertext rebound.
File "XKpsk3.noise.passive.pv", line 291, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 602, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 328, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 329, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 330, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 331, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 332, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 334, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_600: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_600));
    (
        {6}let e_601: keypair = keypairpack(empty,empty) in
        {7}let v_602: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {8}let rs_603: key = getpublickey((if not-caught-fail(v_602) then keypairpack(validkey(v_602),key_s(bob)) else fail-any)) in
        {9}let re_604: key = empty in
        {10}let v_605: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_606: key = catch-fail(v_605) in
        {12}let v_607: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_608: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_605) then (if not-caught-fail(v_606) then (if not-caught-fail(v_607) then symmetricstatepack(v_607,v_606,v_605) else fail-any) else fail-any) else fail-any))) in
        {14}let v_609: symmetricstate = catch-fail((if success?((if not-caught-fail(v_605) then (if not-caught-fail(v_606) then (if not-caught-fail(v_607) then symmetricstatepack(v_607,v_606,v_605) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then symmetricstatepack(1-proj-3-tuple(v_608),2-proj-3-tuple(v_608),hash(3-proj-3-tuple(v_608),empty)) else fail-any) else fail-any)) in
        {15}let v_610: bitstring = catch-fail(symmetricstateunpack(v_609)) in
        {16}let v_611: symmetricstate = catch-fail((if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-3-tuple(v_610))))) then symmetricstatepack(1-proj-3-tuple(v_610),2-proj-3-tuple(v_610),hash(3-proj-3-tuple(v_610),rs_603)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_609) then (if not-caught-fail(v_611) then handshakestatepack(v_611,s_600,e_601,rs_603,re_604,key_psk(alice,bob),true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {54}get statestore(=alice,=bob,=sid,statepack_a(hs_612: handshakestate)) in
        {19}let v_613: bitstring = catch-fail(handshakestateunpack(hs_612)) in
        {20}let v_614: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_615: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_616: keypair = catch-fail((if not-caught-fail(v_615) then keypairpack(validkey(v_615),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_617: bitstring = catch-fail(getpublickey(v_616)) in
        {24}let v_618: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_613))) in
        {25}let v_619: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_613)) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then symmetricstatepack(1-proj-3-tuple(v_618),2-proj-3-tuple(v_618),hash(3-proj-3-tuple(v_618),v_617)) else fail-any) else fail-any)) in
        {26}let v_620: bitstring = catch-fail(symmetricstateunpack(v_619)) in
        {27}let v_621: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_620),getpublickey(v_616))) in
        {28}let v_622: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_620),getpublickey(v_616))) in
        {29}let v_623: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_620),getpublickey(v_616))) in
        {30}let v_624: bitstring = catch-fail((if (success?(getpublickey(v_616)) && success?(2-proj-3-tuple(v_620))) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then (if not-caught-fail(v_623) then (v_621,v_622,v_623) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_625: symmetricstate = catch-fail((if success?(getpublickey(v_616)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-3-tuple(v_620))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_624)) then cipherstatepack(2-proj-3-tuple(v_624),minnonce) else fail-any),1-proj-3-tuple(v_624),3-proj-3-tuple(v_620)) else fail-any) else fail-any) else fail-any)) in
        {32}let v_626: bitstring = catch-fail(keypairunpack(v_616)) in
        {33}let v_627: bitstring = catch-fail(symmetricstateunpack(v_625)) in
        {34}let v_628: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_627),(if success?(4-proj-7-tuple(v_613)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-2-tuple(v_626))))) then dhexp(2-proj-2-tuple(v_626),4-proj-7-tuple(v_613)) else fail-any) else fail-any))) in
        {35}let v_629: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_627),(if success?(4-proj-7-tuple(v_613)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-2-tuple(v_626))))) then dhexp(2-proj-2-tuple(v_626),4-proj-7-tuple(v_613)) else fail-any) else fail-any))) in
        {36}let v_630: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_627),(if success?(4-proj-7-tuple(v_613)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-2-tuple(v_626))))) then dhexp(2-proj-2-tuple(v_626),4-proj-7-tuple(v_613)) else fail-any) else fail-any))) in
        {37}let v_631: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_613)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-2-tuple(v_626))))) then dhexp(2-proj-2-tuple(v_626),4-proj-7-tuple(v_613)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_627))) then (if not-caught-fail(v_628) then (if not-caught-fail(v_629) then (if not-caught-fail(v_630) then (v_628,v_629,v_630) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {38}let v_632: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_613)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-2-tuple(v_626))))) then dhexp(2-proj-2-tuple(v_626),4-proj-7-tuple(v_613)) else fail-any) else fail-any)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_631)) then cipherstatepack(2-proj-3-tuple(v_631),minnonce) else fail-any),1-proj-3-tuple(v_631),3-proj-3-tuple(v_627)) else fail-any) else fail-any) else fail-any)) in
        {39}let v_633: bitstring = catch-fail(symmetricstateunpack(v_632)) in
        {40}let v_634: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_633))) in
        {41}let v_635: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_634),2-proj-2-tuple(v_634),3-proj-3-tuple(v_633),msg_a(alice,bob,sid))) in
        {42}let v_636: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_633))) in
        {43}let v_637: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_634))) && success?(1-proj-3-tuple(v_633))) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-2-tuple(v_636))))) then cipherstatepack(1-proj-2-tuple(v_636),increment_nonce(2-proj-2-tuple(v_634))) else fail-any) else fail-any)) in
        {44}let v_638: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_633)) && success?(1-proj-3-tuple(v_633))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then (if not-caught-fail(v_635) then (if not-caught-fail(v_637) then (v_637,v_635) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {45}let v_639: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_638),2-proj-3-tuple(v_633),3-proj-3-tuple(v_633)))) in
        {46}let v_640: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_638)) && success?(symmetricstatepack(1-proj-2-tuple(v_638),2-proj-3-tuple(v_633),3-proj-3-tuple(v_633)))) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then symmetricstatepack(1-proj-3-tuple(v_639),2-proj-3-tuple(v_639),hash(3-proj-3-tuple(v_639),2-proj-2-tuple(v_638))) else fail-any) else fail-any)) in
        {47}let v_641: bitstring = catch-fail((if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then (if not-caught-fail(v_640) then (v_640,2-proj-2-tuple(v_638)) else fail-any) else fail-any) else fail-any)) in
        {48}let v_642: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_641),2-proj-7-tuple(v_613),v_616,4-proj-7-tuple(v_613),5-proj-7-tuple(v_613),6-proj-7-tuple(v_613),7-proj-7-tuple(v_613))) in
        {49}let v_643: bitstring = catch-fail(concat3(v_617,2-proj-3-tuple(v_614),2-proj-2-tuple(v_641))) in
        {50}let (hs_644: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-7-tuple(v_613))))) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (if not-caught-fail(v_619) then (if not-caught-fail(v_625) then (if not-caught-fail(v_632) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then (if not-caught-fail(v_642) then (if not-caught-fail(v_643) then (v_642,v_643) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {51}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {52}insert statestore(alice,bob,sid,statepack_b(hs_644));
        {53}out(pub, message_a)
    ) | (
        {89}get statestore(=alice,=bob,=sid,statepack_b(hs_645: handshakestate)) in
        {55}in(pub, message_b: bitstring);
        {56}let v_646: bitstring = catch-fail(handshakestateunpack(hs_645)) in
        {57}let v_647: bitstring = catch-fail(deconcat3(message_b)) in
        {58}let v_648: bool = catch-fail(true) in
        {59}let v_649: key = catch-fail(1-proj-3-tuple(v_647)) in
        {60}let v_650: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_646))) in
        {61}let v_651: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_646)) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then symmetricstatepack(1-proj-3-tuple(v_650),2-proj-3-tuple(v_650),hash(3-proj-3-tuple(v_650),v_649)) else fail-any) else fail-any)) in
        {62}let v_652: bitstring = catch-fail(symmetricstateunpack(v_651)) in
        {63}let v_653: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_652),v_649)) in
        {64}let v_654: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_652),v_649)) in
        {65}let v_655: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_652),v_649)) in
        {66}let v_656: bitstring = catch-fail((if success?(2-proj-3-tuple(v_652)) then (if not-caught-fail(v_653) then (if not-caught-fail(v_654) then (if not-caught-fail(v_655) then (v_653,v_654,v_655) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {67}let v_657: symmetricstate = catch-fail((if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-3-tuple(v_656))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_656)) then cipherstatepack(2-proj-3-tuple(v_656),minnonce) else fail-any),1-proj-3-tuple(v_656),3-proj-3-tuple(v_652)) else fail-any) else fail-any)) in
        {68}let v_658: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_646))) in
        {69}let v_659: bitstring = catch-fail(symmetricstateunpack(v_657)) in
        {70}let v_660: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_659),(if success?(3-proj-7-tuple(v_646)) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then dhexp(2-proj-2-tuple(v_658),v_649) else fail-any) else fail-any))) in
        {71}let v_661: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_659),(if success?(3-proj-7-tuple(v_646)) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then dhexp(2-proj-2-tuple(v_658),v_649) else fail-any) else fail-any))) in
        {72}let v_662: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_659),(if success?(3-proj-7-tuple(v_646)) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then dhexp(2-proj-2-tuple(v_658),v_649) else fail-any) else fail-any))) in
        {73}let v_663: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_646)) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then dhexp(2-proj-2-tuple(v_658),v_649) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_659))) then (if not-caught-fail(v_660) then (if not-caught-fail(v_661) then (if not-caught-fail(v_662) then (v_660,v_661,v_662) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {74}let v_664: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_646)) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then dhexp(2-proj-2-tuple(v_658),v_649) else fail-any) else fail-any)) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_663)) then cipherstatepack(2-proj-3-tuple(v_663),minnonce) else fail-any),1-proj-3-tuple(v_663),3-proj-3-tuple(v_659)) else fail-any) else fail-any) else fail-any)) in
        {75}let v_665: bitstring = catch-fail(symmetricstateunpack(v_664)) in
        {76}let v_666: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_665))) in
        {77}let v_667: aead = catch-fail(decrypt(1-proj-2-tuple(v_666),2-proj-2-tuple(v_666),3-proj-3-tuple(v_665),3-proj-3-tuple(v_647))) in
        {78}let v_668: bitstring = catch-fail(aeadunpack(v_667)) in
        {79}let v_669: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_665))) in
        {80}let v_670: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_666))) && success?(1-proj-3-tuple(v_665))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then cipherstatepack(1-proj-2-tuple(v_669),increment_nonce(2-proj-2-tuple(v_666))) else fail-any) else fail-any)) in
        {81}let v_671: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_647)) && (success?(3-proj-3-tuple(v_665)) && success?(1-proj-3-tuple(v_665)))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-2-tuple(v_666))))) then (if not-caught-fail(v_667) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then (if not-caught-fail(v_670) then (v_670,3-proj-3-tuple(v_668),1-proj-3-tuple(v_668)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {82}let v_672: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_671),2-proj-3-tuple(v_665),3-proj-3-tuple(v_665)))) in
        {83}let v_673: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_647)) && success?(symmetricstatepack(1-proj-3-tuple(v_671),2-proj-3-tuple(v_665),3-proj-3-tuple(v_665)))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-3-tuple(v_672))))) then symmetricstatepack(1-proj-3-tuple(v_672),2-proj-3-tuple(v_672),hash(3-proj-3-tuple(v_672),3-proj-3-tuple(v_647))) else fail-any) else fail-any)) in
        {84}let v_674: bitstring = catch-fail((if success?(3-proj-3-tuple(v_647)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-3-tuple(v_665))))) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-3-tuple(v_671))))) then (if not-caught-fail(v_673) then (v_673,2-proj-3-tuple(v_671),3-proj-3-tuple(v_671)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {85}let v_675: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_674),2-proj-7-tuple(v_646),3-proj-7-tuple(v_646),4-proj-7-tuple(v_646),v_649,6-proj-7-tuple(v_646),7-proj-7-tuple(v_646))) in
        {86}let (hs_676: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-7-tuple(v_646))))) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then (if not-caught-fail(v_651) then (if not-caught-fail(v_657) then (if not-caught-fail(v_664) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then (if (v_648 && 3-proj-3-tuple(v_674)) then (if not-caught-fail(v_675) then (v_675,2-proj-3-tuple(v_674),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {87}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {88}insert statestore(alice,bob,sid,statepack_c(hs_676))
    ) | (
        {141}get statestore(=alice,=bob,=sid,statepack_c(hs_677: handshakestate)) in
        {90}let v_678: bitstring = catch-fail(handshakestateunpack(hs_677)) in
        {91}let v_679: bitstring = catch-fail((empty,empty,empty)) in
        {92}let v_680: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {93}let v_681: keypair = catch-fail((if not-caught-fail(v_680) then keypairpack(validkey(v_680),key_s(alice)) else fail-any)) in
        {94}let v_682: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_678))) in
        {95}let v_683: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_682))) in
        {96}let v_684: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_683),2-proj-2-tuple(v_683),3-proj-3-tuple(v_682),getpublickey(v_681))) in
        {97}let v_685: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_682))) in
        {98}let v_686: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_683))) && success?(1-proj-3-tuple(v_682))) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-2-tuple(v_685))))) then cipherstatepack(1-proj-2-tuple(v_685),increment_nonce(2-proj-2-tuple(v_683))) else fail-any) else fail-any)) in
        {99}let v_687: bitstring = catch-fail((if (success?(getpublickey(v_681)) && (success?(3-proj-3-tuple(v_682)) && success?(1-proj-3-tuple(v_682)))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-2-tuple(v_683))))) then (if not-caught-fail(v_684) then (if not-caught-fail(v_686) then (v_686,v_684) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {100}let v_688: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_687),2-proj-3-tuple(v_682),3-proj-3-tuple(v_682)))) in
        {101}let v_689: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_687)) && success?(symmetricstatepack(1-proj-2-tuple(v_687),2-proj-3-tuple(v_682),3-proj-3-tuple(v_682)))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-3-tuple(v_688))))) then symmetricstatepack(1-proj-3-tuple(v_688),2-proj-3-tuple(v_688),hash(3-proj-3-tuple(v_688),2-proj-2-tuple(v_687))) else fail-any) else fail-any)) in
        {102}let v_690: bitstring = catch-fail((if (success?(getpublickey(v_681)) && success?(1-proj-7-tuple(v_678))) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-3-tuple(v_682))))) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-2-tuple(v_687))))) then (if not-caught-fail(v_689) then (v_689,2-proj-2-tuple(v_687)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {103}let v_691: bitstring = catch-fail(keypairunpack(v_681)) in
        {104}let v_692: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_690))) in
        {105}let v_693: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_692),(if success?(5-proj-7-tuple(v_678)) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then dhexp(2-proj-2-tuple(v_691),5-proj-7-tuple(v_678)) else fail-any) else fail-any))) in
        {106}let v_694: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_692),(if success?(5-proj-7-tuple(v_678)) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then dhexp(2-proj-2-tuple(v_691),5-proj-7-tuple(v_678)) else fail-any) else fail-any))) in
        {107}let v_695: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_692),(if success?(5-proj-7-tuple(v_678)) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then dhexp(2-proj-2-tuple(v_691),5-proj-7-tuple(v_678)) else fail-any) else fail-any))) in
        {108}let v_696: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_678)) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then dhexp(2-proj-2-tuple(v_691),5-proj-7-tuple(v_678)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_692))) then (if not-caught-fail(v_693) then (if not-caught-fail(v_694) then (if not-caught-fail(v_695) then (v_693,v_694,v_695) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {109}let v_697: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_678)) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then dhexp(2-proj-2-tuple(v_691),5-proj-7-tuple(v_678)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_690))) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-3-tuple(v_692))))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-3-tuple(v_696))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_696)) then cipherstatepack(2-proj-3-tuple(v_696),minnonce) else fail-any),1-proj-3-tuple(v_696),3-proj-3-tuple(v_692)) else fail-any) else fail-any) else fail-any)) in
        {110}let v_698: bitstring = catch-fail(symmetricstateunpack(v_697)) in
        {111}let v_699: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_698),6-proj-7-tuple(v_678))) in
        {112}let v_700: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_698),6-proj-7-tuple(v_678))) in
        {113}let v_701: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_698),6-proj-7-tuple(v_678))) in
        {114}let v_702: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_678)) && success?(2-proj-3-tuple(v_698))) then (if not-caught-fail(v_699) then (if not-caught-fail(v_700) then (if not-caught-fail(v_701) then (v_699,v_700,v_701) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {115}let v_703: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_698),1-proj-3-tuple(v_702),3-proj-3-tuple(v_698)))) in
        {116}let v_704: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_702)) && success?(symmetricstatepack(1-proj-3-tuple(v_698),1-proj-3-tuple(v_702),3-proj-3-tuple(v_698)))) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-3-tuple(v_703))))) then symmetricstatepack(1-proj-3-tuple(v_703),2-proj-3-tuple(v_703),hash(3-proj-3-tuple(v_703),2-proj-3-tuple(v_702))) else fail-any) else fail-any))) in
        {117}let v_705: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_678)) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-3-tuple(v_704))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_702)) then cipherstatepack(3-proj-3-tuple(v_702),minnonce) else fail-any),1-proj-3-tuple(v_702),3-proj-3-tuple(v_704)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {118}let v_706: bitstring = catch-fail(symmetricstateunpack(v_705)) in
        {119}let v_707: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_706))) in
        {120}let v_708: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_707),2-proj-2-tuple(v_707),3-proj-3-tuple(v_706),msg_c(alice,bob,sid))) in
        {121}let v_709: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_706))) in
        {122}let v_710: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_707))) && success?(1-proj-3-tuple(v_706))) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-2-tuple(v_709))))) then cipherstatepack(1-proj-2-tuple(v_709),increment_nonce(2-proj-2-tuple(v_707))) else fail-any) else fail-any)) in
        {123}let v_711: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_706)) && success?(1-proj-3-tuple(v_706))) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then (if not-caught-fail(v_708) then (if not-caught-fail(v_710) then (v_710,v_708) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {124}let v_712: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_711),2-proj-3-tuple(v_706),3-proj-3-tuple(v_706)))) in
        {125}let v_713: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_711)) && success?(symmetricstatepack(1-proj-2-tuple(v_711),2-proj-3-tuple(v_706),3-proj-3-tuple(v_706)))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-3-tuple(v_712))))) then symmetricstatepack(1-proj-3-tuple(v_712),2-proj-3-tuple(v_712),hash(3-proj-3-tuple(v_712),2-proj-2-tuple(v_711))) else fail-any) else fail-any)) in
        {126}let v_714: bitstring = catch-fail((if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-3-tuple(v_706))))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-2-tuple(v_711))))) then (if not-caught-fail(v_713) then (v_713,2-proj-2-tuple(v_711)) else fail-any) else fail-any) else fail-any)) in
        {127}let v_715: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_714),v_681,3-proj-7-tuple(v_678),4-proj-7-tuple(v_678),5-proj-7-tuple(v_678),6-proj-7-tuple(v_678),7-proj-7-tuple(v_678))) in
        {128}let v_716: bitstring = catch-fail(concat3(1-proj-3-tuple(v_679),2-proj-2-tuple(v_690),2-proj-2-tuple(v_714))) in
        {129}let v_717: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_714))) in
        {130}let v_718: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_717),zero)) in
        {131}let v_719: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_717),zero)) in
        {132}let v_720: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_717),zero)) in
        {133}let v_721: bitstring = catch-fail((if success?(2-proj-3-tuple(v_717)) then (if not-caught-fail(v_718) then (if not-caught-fail(v_719) then (if not-caught-fail(v_720) then (v_718,v_719,v_720) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {134}let v_722: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_721)) then cipherstatepack(1-proj-3-tuple(v_721),minnonce) else fail-any)) in
        {135}let v_723: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_721)) then cipherstatepack(2-proj-3-tuple(v_721),minnonce) else fail-any)) in
        {136}let v_724: bitstring = catch-fail((if success?(1-proj-2-tuple(v_714)) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-3-tuple(v_721))))) then (if not-caught-fail(v_722) then (if not-caught-fail(v_723) then (1-proj-2-tuple(v_714),v_722,v_723) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {137}let (hs_725: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-7-tuple(v_678))))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if not-caught-fail(v_681) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-2-tuple(v_690))))) then (if not-caught-fail(v_697) then (if not-caught-fail(v_705) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-2-tuple(v_714))))) then (if not-caught-fail(v_715) then (if not-caught-fail(v_716) then (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-3-tuple(v_724))))) then (v_715,v_716,2-proj-3-tuple(v_724),3-proj-3-tuple(v_724)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {138}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {139}insert statestore(alice,bob,sid,statepack_d(hs_725,cs1,cs2));
        {140}out(pub, message_c)
    ) | (
        {142}!
        {162}get statestore(=alice,=bob,=sid,statepack_d(hs_726: handshakestate,cs1_727: cipherstate,cs2_728: cipherstate)) in
        {143}let hs_729: handshakestate = handshakestatesetcs(hs_726,cs2_728) in
        {144}in(pub, message_d: bitstring);
        {145}let v_730: bitstring = catch-fail(handshakestateunpack(hs_729)) in
        {146}let v_731: bitstring = catch-fail(deconcat3(message_d)) in
        {147}let v_732: bool = catch-fail(true) in
        {148}let v_733: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_730))) in
        {149}let v_734: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_733))) in
        {150}let v_735: aead = catch-fail(decrypt(1-proj-2-tuple(v_734),2-proj-2-tuple(v_734),3-proj-3-tuple(v_733),3-proj-3-tuple(v_731))) in
        {151}let v_736: bitstring = catch-fail(aeadunpack(v_735)) in
        {152}let v_737: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_733))) in
        {153}let v_738: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_734))) && success?(1-proj-3-tuple(v_733))) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-2-tuple(v_737))))) then cipherstatepack(1-proj-2-tuple(v_737),increment_nonce(2-proj-2-tuple(v_734))) else fail-any) else fail-any)) in
        {154}let v_739: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_731)) && (success?(3-proj-3-tuple(v_733)) && success?(1-proj-3-tuple(v_733)))) then (if (not-caught-fail(v_734) && success?(is-true(success?(1-proj-2-tuple(v_734))))) then (if not-caught-fail(v_735) then (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-3-tuple(v_736))))) then (if not-caught-fail(v_738) then (v_738,3-proj-3-tuple(v_736),1-proj-3-tuple(v_736)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {155}let v_740: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_739),2-proj-3-tuple(v_733),3-proj-3-tuple(v_733)))) in
        {156}let v_741: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_731)) && success?(symmetricstatepack(1-proj-3-tuple(v_739),2-proj-3-tuple(v_733),3-proj-3-tuple(v_733)))) then (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-3-tuple(v_740))))) then symmetricstatepack(1-proj-3-tuple(v_740),2-proj-3-tuple(v_740),hash(3-proj-3-tuple(v_740),3-proj-3-tuple(v_731))) else fail-any) else fail-any)) in
        {157}let v_742: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_731)) && success?(1-proj-7-tuple(v_730))) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then (if (not-caught-fail(v_739) && success?(is-true(success?(1-proj-3-tuple(v_739))))) then (if not-caught-fail(v_741) then (v_741,2-proj-3-tuple(v_739),3-proj-3-tuple(v_739)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {158}let v_743: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_742),2-proj-7-tuple(v_730),3-proj-7-tuple(v_730),4-proj-7-tuple(v_730),5-proj-7-tuple(v_730),6-proj-7-tuple(v_730),7-proj-7-tuple(v_730))) in
        {159}let (hs_744: handshakestate,plaintext_d: bitstring,valid_745: bool) = (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-7-tuple(v_730))))) then (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-3-tuple(v_731))))) then (if not-caught-fail(v_732) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if (v_732 && 3-proj-3-tuple(v_742)) then (if not-caught-fail(v_743) then (v_743,2-proj-3-tuple(v_742),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {160}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {161}insert statestore(alice,bob,sid,statepack_e(hs_744,cs1_727,handshakestategetcs(hs_744)))
    ) | (
        {163}!
        {181}get statestore(=alice,=bob,=sid,statepack_e(hs_746: handshakestate,cs1_747: cipherstate,cs2_748: cipherstate)) in
        {164}let hs_749: handshakestate = handshakestatesetcs(hs_746,cs1_747) in
        {165}let v_750: bitstring = catch-fail(handshakestateunpack(hs_749)) in
        {166}let v_751: bitstring = catch-fail((empty,empty,empty)) in
        {167}let v_752: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_750))) in
        {168}let v_753: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_752))) in
        {169}let v_754: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_753),2-proj-2-tuple(v_753),3-proj-3-tuple(v_752),msg_e(alice,bob,sid))) in
        {170}let v_755: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_752))) in
        {171}let v_756: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_753))) && success?(1-proj-3-tuple(v_752))) then (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-2-tuple(v_755))))) then cipherstatepack(1-proj-2-tuple(v_755),increment_nonce(2-proj-2-tuple(v_753))) else fail-any) else fail-any)) in
        {172}let v_757: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_752)) && success?(1-proj-3-tuple(v_752))) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-2-tuple(v_753))))) then (if not-caught-fail(v_754) then (if not-caught-fail(v_756) then (v_756,v_754) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {173}let v_758: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_757),2-proj-3-tuple(v_752),3-proj-3-tuple(v_752)))) in
        {174}let v_759: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_757)) && success?(symmetricstatepack(1-proj-2-tuple(v_757),2-proj-3-tuple(v_752),3-proj-3-tuple(v_752)))) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-3-tuple(v_758))))) then symmetricstatepack(1-proj-3-tuple(v_758),2-proj-3-tuple(v_758),hash(3-proj-3-tuple(v_758),2-proj-2-tuple(v_757))) else fail-any) else fail-any)) in
        {175}let v_760: bitstring = catch-fail((if success?(1-proj-7-tuple(v_750)) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-3-tuple(v_752))))) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-2-tuple(v_757))))) then (if not-caught-fail(v_759) then (v_759,2-proj-2-tuple(v_757)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {176}let v_761: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_760),2-proj-7-tuple(v_750),3-proj-7-tuple(v_750),4-proj-7-tuple(v_750),5-proj-7-tuple(v_750),6-proj-7-tuple(v_750),7-proj-7-tuple(v_750))) in
        {177}let v_762: bitstring = catch-fail(concat3(1-proj-3-tuple(v_751),2-proj-3-tuple(v_751),2-proj-2-tuple(v_760))) in
        {178}let (hs_763: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-7-tuple(v_750))))) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-3-tuple(v_751))))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then (if not-caught-fail(v_761) then (if not-caught-fail(v_762) then (v_761,v_762) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {179}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {180}out(pub, message_e)
    ) | (
        {182}event LeakPsk(phase0,alice,bob);
        {183}out(pub, key_psk(alice,bob))
    ) | (
        {184}phase 1;
        {185}event LeakPsk(phase1,alice,bob);
        {186}out(pub, key_psk(alice,bob))
    ) | (
        {187}event LeakS(phase0,alice);
        {188}out(pub, key_s(alice))
    ) | (
        {189}phase 1;
        {190}event LeakS(phase1,alice);
        {191}out(pub, key_s(alice))
    )
) | (
    {192}let s_764: keypair = keypairpack(empty,empty) in
    {193}out(pub, getpublickey(s_764));
    (
        {194}let e_765: keypair = keypairpack(empty,empty) in
        {195}let v_766: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {196}let rs_767: key = getpublickey((if not-caught-fail(v_766) then keypairpack(validkey(v_766),key_s(charlie)) else fail-any)) in
        {197}let re_768: key = empty in
        {198}let v_769: bitstring = catch-fail(hash(somename,empty)) in
        {199}let v_770: key = catch-fail(v_769) in
        {200}let v_771: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {201}let v_772: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_769) then (if not-caught-fail(v_770) then (if not-caught-fail(v_771) then symmetricstatepack(v_771,v_770,v_769) else fail-any) else fail-any) else fail-any))) in
        {202}let v_773: symmetricstate = catch-fail((if success?((if not-caught-fail(v_769) then (if not-caught-fail(v_770) then (if not-caught-fail(v_771) then symmetricstatepack(v_771,v_770,v_769) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_772),hash(3-proj-3-tuple(v_772),empty)) else fail-any) else fail-any)) in
        {203}let v_774: bitstring = catch-fail(symmetricstateunpack(v_773)) in
        {204}let v_775: symmetricstate = catch-fail((if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-3-tuple(v_774))))) then symmetricstatepack(1-proj-3-tuple(v_774),2-proj-3-tuple(v_774),hash(3-proj-3-tuple(v_774),rs_767)) else fail-any)) in
        {205}let hs_776: handshakestate = (if not-caught-fail(v_773) then (if not-caught-fail(v_775) then handshakestatepack(v_775,s_764,e_765,rs_767,re_768,key_psk(alice,charlie),true) else fail-any) else fail-any) in
        {206}insert statestore(alice,charlie,sid,statepack_a(hs_776))
    ) | (
        {242}get statestore(=alice,=charlie,=sid,statepack_a(hs_777: handshakestate)) in
        {207}let v_778: bitstring = catch-fail(handshakestateunpack(hs_777)) in
        {208}let v_779: bitstring = catch-fail((empty,empty,empty)) in
        {209}let v_780: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {210}let v_781: keypair = catch-fail((if not-caught-fail(v_780) then keypairpack(validkey(v_780),key_e(alice,charlie,sid)) else fail-any)) in
        {211}let v_782: bitstring = catch-fail(getpublickey(v_781)) in
        {212}let v_783: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_778))) in
        {213}let v_784: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_778)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then symmetricstatepack(1-proj-3-tuple(v_783),2-proj-3-tuple(v_783),hash(3-proj-3-tuple(v_783),v_782)) else fail-any) else fail-any)) in
        {214}let v_785: bitstring = catch-fail(symmetricstateunpack(v_784)) in
        {215}let v_786: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_785),getpublickey(v_781))) in
        {216}let v_787: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_785),getpublickey(v_781))) in
        {217}let v_788: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_785),getpublickey(v_781))) in
        {218}let v_789: bitstring = catch-fail((if (success?(getpublickey(v_781)) && success?(2-proj-3-tuple(v_785))) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (if not-caught-fail(v_788) then (v_786,v_787,v_788) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {219}let v_790: symmetricstate = catch-fail((if success?(getpublickey(v_781)) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_789)) then cipherstatepack(2-proj-3-tuple(v_789),minnonce) else fail-any),1-proj-3-tuple(v_789),3-proj-3-tuple(v_785)) else fail-any) else fail-any) else fail-any)) in
        {220}let v_791: bitstring = catch-fail(keypairunpack(v_781)) in
        {221}let v_792: bitstring = catch-fail(symmetricstateunpack(v_790)) in
        {222}let v_793: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_792),(if success?(4-proj-7-tuple(v_778)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then dhexp(2-proj-2-tuple(v_791),4-proj-7-tuple(v_778)) else fail-any) else fail-any))) in
        {223}let v_794: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_792),(if success?(4-proj-7-tuple(v_778)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then dhexp(2-proj-2-tuple(v_791),4-proj-7-tuple(v_778)) else fail-any) else fail-any))) in
        {224}let v_795: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_792),(if success?(4-proj-7-tuple(v_778)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then dhexp(2-proj-2-tuple(v_791),4-proj-7-tuple(v_778)) else fail-any) else fail-any))) in
        {225}let v_796: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_778)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then dhexp(2-proj-2-tuple(v_791),4-proj-7-tuple(v_778)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_792))) then (if not-caught-fail(v_793) then (if not-caught-fail(v_794) then (if not-caught-fail(v_795) then (v_793,v_794,v_795) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_797: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_778)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-2-tuple(v_791))))) then dhexp(2-proj-2-tuple(v_791),4-proj-7-tuple(v_778)) else fail-any) else fail-any)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-3-tuple(v_796))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_796)) then cipherstatepack(2-proj-3-tuple(v_796),minnonce) else fail-any),1-proj-3-tuple(v_796),3-proj-3-tuple(v_792)) else fail-any) else fail-any) else fail-any)) in
        {227}let v_798: bitstring = catch-fail(symmetricstateunpack(v_797)) in
        {228}let v_799: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_798))) in
        {229}let v_800: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_799),2-proj-2-tuple(v_799),3-proj-3-tuple(v_798),msg_a(alice,charlie,sid))) in
        {230}let v_801: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_798))) in
        {231}let v_802: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_799))) && success?(1-proj-3-tuple(v_798))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then cipherstatepack(1-proj-2-tuple(v_801),increment_nonce(2-proj-2-tuple(v_799))) else fail-any) else fail-any)) in
        {232}let v_803: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_798)) && success?(1-proj-3-tuple(v_798))) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-2-tuple(v_799))))) then (if not-caught-fail(v_800) then (if not-caught-fail(v_802) then (v_802,v_800) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {233}let v_804: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_803),2-proj-3-tuple(v_798),3-proj-3-tuple(v_798)))) in
        {234}let v_805: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_803)) && success?(symmetricstatepack(1-proj-2-tuple(v_803),2-proj-3-tuple(v_798),3-proj-3-tuple(v_798)))) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then symmetricstatepack(1-proj-3-tuple(v_804),2-proj-3-tuple(v_804),hash(3-proj-3-tuple(v_804),2-proj-2-tuple(v_803))) else fail-any) else fail-any)) in
        {235}let v_806: bitstring = catch-fail((if (not-caught-fail(v_798) && success?(is-true(success?(1-proj-3-tuple(v_798))))) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then (if not-caught-fail(v_805) then (v_805,2-proj-2-tuple(v_803)) else fail-any) else fail-any) else fail-any)) in
        {236}let v_807: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_806),2-proj-7-tuple(v_778),v_781,4-proj-7-tuple(v_778),5-proj-7-tuple(v_778),6-proj-7-tuple(v_778),7-proj-7-tuple(v_778))) in
        {237}let v_808: bitstring = catch-fail(concat3(v_782,2-proj-3-tuple(v_779),2-proj-2-tuple(v_806))) in
        {238}let (hs_809: handshakestate,message_a_810: bitstring) = (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-7-tuple(v_778))))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then (if not-caught-fail(v_781) then (if not-caught-fail(v_782) then (if not-caught-fail(v_784) then (if not-caught-fail(v_790) then (if not-caught-fail(v_797) then (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-2-tuple(v_806))))) then (if not-caught-fail(v_807) then (if not-caught-fail(v_808) then (v_807,v_808) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {239}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {240}insert statestore(alice,charlie,sid,statepack_b(hs_809));
        {241}out(pub, message_a_810)
    ) | (
        {277}get statestore(=alice,=charlie,=sid,statepack_b(hs_811: handshakestate)) in
        {243}in(pub, message_b_812: bitstring);
        {244}let v_813: bitstring = catch-fail(handshakestateunpack(hs_811)) in
        {245}let v_814: bitstring = catch-fail(deconcat3(message_b_812)) in
        {246}let v_815: bool = catch-fail(true) in
        {247}let v_816: key = catch-fail(1-proj-3-tuple(v_814)) in
        {248}let v_817: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_813))) in
        {249}let v_818: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_813)) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then symmetricstatepack(1-proj-3-tuple(v_817),2-proj-3-tuple(v_817),hash(3-proj-3-tuple(v_817),v_816)) else fail-any) else fail-any)) in
        {250}let v_819: bitstring = catch-fail(symmetricstateunpack(v_818)) in
        {251}let v_820: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_819),v_816)) in
        {252}let v_821: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_819),v_816)) in
        {253}let v_822: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_819),v_816)) in
        {254}let v_823: bitstring = catch-fail((if success?(2-proj-3-tuple(v_819)) then (if not-caught-fail(v_820) then (if not-caught-fail(v_821) then (if not-caught-fail(v_822) then (v_820,v_821,v_822) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {255}let v_824: symmetricstate = catch-fail((if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_823)) then cipherstatepack(2-proj-3-tuple(v_823),minnonce) else fail-any),1-proj-3-tuple(v_823),3-proj-3-tuple(v_819)) else fail-any) else fail-any)) in
        {256}let v_825: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_813))) in
        {257}let v_826: bitstring = catch-fail(symmetricstateunpack(v_824)) in
        {258}let v_827: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_826),(if success?(3-proj-7-tuple(v_813)) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then dhexp(2-proj-2-tuple(v_825),v_816) else fail-any) else fail-any))) in
        {259}let v_828: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_826),(if success?(3-proj-7-tuple(v_813)) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then dhexp(2-proj-2-tuple(v_825),v_816) else fail-any) else fail-any))) in
        {260}let v_829: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_826),(if success?(3-proj-7-tuple(v_813)) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then dhexp(2-proj-2-tuple(v_825),v_816) else fail-any) else fail-any))) in
        {261}let v_830: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_813)) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then dhexp(2-proj-2-tuple(v_825),v_816) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_826))) then (if not-caught-fail(v_827) then (if not-caught-fail(v_828) then (if not-caught-fail(v_829) then (v_827,v_828,v_829) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {262}let v_831: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_813)) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then dhexp(2-proj-2-tuple(v_825),v_816) else fail-any) else fail-any)) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_830)) then cipherstatepack(2-proj-3-tuple(v_830),minnonce) else fail-any),1-proj-3-tuple(v_830),3-proj-3-tuple(v_826)) else fail-any) else fail-any) else fail-any)) in
        {263}let v_832: bitstring = catch-fail(symmetricstateunpack(v_831)) in
        {264}let v_833: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_832))) in
        {265}let v_834: aead = catch-fail(decrypt(1-proj-2-tuple(v_833),2-proj-2-tuple(v_833),3-proj-3-tuple(v_832),3-proj-3-tuple(v_814))) in
        {266}let v_835: bitstring = catch-fail(aeadunpack(v_834)) in
        {267}let v_836: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_832))) in
        {268}let v_837: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_833))) && success?(1-proj-3-tuple(v_832))) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then cipherstatepack(1-proj-2-tuple(v_836),increment_nonce(2-proj-2-tuple(v_833))) else fail-any) else fail-any)) in
        {269}let v_838: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_814)) && (success?(3-proj-3-tuple(v_832)) && success?(1-proj-3-tuple(v_832)))) then (if (not-caught-fail(v_833) && success?(is-true(success?(1-proj-2-tuple(v_833))))) then (if not-caught-fail(v_834) then (if (not-caught-fail(v_835) && success?(is-true(success?(1-proj-3-tuple(v_835))))) then (if not-caught-fail(v_837) then (v_837,3-proj-3-tuple(v_835),1-proj-3-tuple(v_835)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {270}let v_839: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_838),2-proj-3-tuple(v_832),3-proj-3-tuple(v_832)))) in
        {271}let v_840: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_814)) && success?(symmetricstatepack(1-proj-3-tuple(v_838),2-proj-3-tuple(v_832),3-proj-3-tuple(v_832)))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then symmetricstatepack(1-proj-3-tuple(v_839),2-proj-3-tuple(v_839),hash(3-proj-3-tuple(v_839),3-proj-3-tuple(v_814))) else fail-any) else fail-any)) in
        {272}let v_841: bitstring = catch-fail((if success?(3-proj-3-tuple(v_814)) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-3-tuple(v_838))))) then (if not-caught-fail(v_840) then (v_840,2-proj-3-tuple(v_838),3-proj-3-tuple(v_838)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {273}let v_842: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_841),2-proj-7-tuple(v_813),3-proj-7-tuple(v_813),4-proj-7-tuple(v_813),v_816,6-proj-7-tuple(v_813),7-proj-7-tuple(v_813))) in
        {274}let (hs_843: handshakestate,plaintext_b_844: bitstring,valid_845: bool) = (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-7-tuple(v_813))))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-3-tuple(v_814))))) then (if not-caught-fail(v_815) then (if not-caught-fail(v_816) then (if not-caught-fail(v_818) then (if not-caught-fail(v_824) then (if not-caught-fail(v_831) then (if (not-caught-fail(v_841) && success?(is-true(success?(1-proj-3-tuple(v_841))))) then (if (v_815 && 3-proj-3-tuple(v_841)) then (if not-caught-fail(v_842) then (v_842,2-proj-3-tuple(v_841),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {275}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_844);
        {276}insert statestore(alice,charlie,sid,statepack_c(hs_843))
    ) | (
        {329}get statestore(=alice,=charlie,=sid,statepack_c(hs_846: handshakestate)) in
        {278}let v_847: bitstring = catch-fail(handshakestateunpack(hs_846)) in
        {279}let v_848: bitstring = catch-fail((empty,empty,empty)) in
        {280}let v_849: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {281}let v_850: keypair = catch-fail((if not-caught-fail(v_849) then keypairpack(validkey(v_849),key_s(alice)) else fail-any)) in
        {282}let v_851: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_847))) in
        {283}let v_852: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_851))) in
        {284}let v_853: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_852),2-proj-2-tuple(v_852),3-proj-3-tuple(v_851),getpublickey(v_850))) in
        {285}let v_854: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_851))) in
        {286}let v_855: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_852))) && success?(1-proj-3-tuple(v_851))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-2-tuple(v_854))))) then cipherstatepack(1-proj-2-tuple(v_854),increment_nonce(2-proj-2-tuple(v_852))) else fail-any) else fail-any)) in
        {287}let v_856: bitstring = catch-fail((if (success?(getpublickey(v_850)) && (success?(3-proj-3-tuple(v_851)) && success?(1-proj-3-tuple(v_851)))) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then (if not-caught-fail(v_853) then (if not-caught-fail(v_855) then (v_855,v_853) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {288}let v_857: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_856),2-proj-3-tuple(v_851),3-proj-3-tuple(v_851)))) in
        {289}let v_858: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_856)) && success?(symmetricstatepack(1-proj-2-tuple(v_856),2-proj-3-tuple(v_851),3-proj-3-tuple(v_851)))) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-3-tuple(v_857))))) then symmetricstatepack(1-proj-3-tuple(v_857),2-proj-3-tuple(v_857),hash(3-proj-3-tuple(v_857),2-proj-2-tuple(v_856))) else fail-any) else fail-any)) in
        {290}let v_859: bitstring = catch-fail((if (success?(getpublickey(v_850)) && success?(1-proj-7-tuple(v_847))) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-3-tuple(v_851))))) then (if (not-caught-fail(v_856) && success?(is-true(success?(1-proj-2-tuple(v_856))))) then (if not-caught-fail(v_858) then (v_858,2-proj-2-tuple(v_856)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {291}let v_860: bitstring = catch-fail(keypairunpack(v_850)) in
        {292}let v_861: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_859))) in
        {293}let v_862: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_861),(if success?(5-proj-7-tuple(v_847)) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then dhexp(2-proj-2-tuple(v_860),5-proj-7-tuple(v_847)) else fail-any) else fail-any))) in
        {294}let v_863: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_861),(if success?(5-proj-7-tuple(v_847)) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then dhexp(2-proj-2-tuple(v_860),5-proj-7-tuple(v_847)) else fail-any) else fail-any))) in
        {295}let v_864: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_861),(if success?(5-proj-7-tuple(v_847)) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then dhexp(2-proj-2-tuple(v_860),5-proj-7-tuple(v_847)) else fail-any) else fail-any))) in
        {296}let v_865: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_847)) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then dhexp(2-proj-2-tuple(v_860),5-proj-7-tuple(v_847)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_861))) then (if not-caught-fail(v_862) then (if not-caught-fail(v_863) then (if not-caught-fail(v_864) then (v_862,v_863,v_864) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {297}let v_866: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_847)) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then dhexp(2-proj-2-tuple(v_860),5-proj-7-tuple(v_847)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_859))) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-3-tuple(v_861))))) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-3-tuple(v_865))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_865)) then cipherstatepack(2-proj-3-tuple(v_865),minnonce) else fail-any),1-proj-3-tuple(v_865),3-proj-3-tuple(v_861)) else fail-any) else fail-any) else fail-any)) in
        {298}let v_867: bitstring = catch-fail(symmetricstateunpack(v_866)) in
        {299}let v_868: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_867),6-proj-7-tuple(v_847))) in
        {300}let v_869: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_867),6-proj-7-tuple(v_847))) in
        {301}let v_870: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_867),6-proj-7-tuple(v_847))) in
        {302}let v_871: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_847)) && success?(2-proj-3-tuple(v_867))) then (if not-caught-fail(v_868) then (if not-caught-fail(v_869) then (if not-caught-fail(v_870) then (v_868,v_869,v_870) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {303}let v_872: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_867),1-proj-3-tuple(v_871),3-proj-3-tuple(v_867)))) in
        {304}let v_873: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_871)) && success?(symmetricstatepack(1-proj-3-tuple(v_867),1-proj-3-tuple(v_871),3-proj-3-tuple(v_867)))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then symmetricstatepack(1-proj-3-tuple(v_872),2-proj-3-tuple(v_872),hash(3-proj-3-tuple(v_872),2-proj-3-tuple(v_871))) else fail-any) else fail-any))) in
        {305}let v_874: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_847)) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-3-tuple(v_867))))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-3-tuple(v_871))))) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-3-tuple(v_873))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_871)) then cipherstatepack(3-proj-3-tuple(v_871),minnonce) else fail-any),1-proj-3-tuple(v_871),3-proj-3-tuple(v_873)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {306}let v_875: bitstring = catch-fail(symmetricstateunpack(v_874)) in
        {307}let v_876: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_875))) in
        {308}let v_877: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_876),2-proj-2-tuple(v_876),3-proj-3-tuple(v_875),msg_c(alice,charlie,sid))) in
        {309}let v_878: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_875))) in
        {310}let v_879: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_876))) && success?(1-proj-3-tuple(v_875))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then cipherstatepack(1-proj-2-tuple(v_878),increment_nonce(2-proj-2-tuple(v_876))) else fail-any) else fail-any)) in
        {311}let v_880: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_875)) && success?(1-proj-3-tuple(v_875))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-2-tuple(v_876))))) then (if not-caught-fail(v_877) then (if not-caught-fail(v_879) then (v_879,v_877) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {312}let v_881: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_880),2-proj-3-tuple(v_875),3-proj-3-tuple(v_875)))) in
        {313}let v_882: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_880)) && success?(symmetricstatepack(1-proj-2-tuple(v_880),2-proj-3-tuple(v_875),3-proj-3-tuple(v_875)))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-3-tuple(v_881))))) then symmetricstatepack(1-proj-3-tuple(v_881),2-proj-3-tuple(v_881),hash(3-proj-3-tuple(v_881),2-proj-2-tuple(v_880))) else fail-any) else fail-any)) in
        {314}let v_883: bitstring = catch-fail((if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-3-tuple(v_875))))) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-2-tuple(v_880))))) then (if not-caught-fail(v_882) then (v_882,2-proj-2-tuple(v_880)) else fail-any) else fail-any) else fail-any)) in
        {315}let v_884: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_883),v_850,3-proj-7-tuple(v_847),4-proj-7-tuple(v_847),5-proj-7-tuple(v_847),6-proj-7-tuple(v_847),7-proj-7-tuple(v_847))) in
        {316}let v_885: bitstring = catch-fail(concat3(1-proj-3-tuple(v_848),2-proj-2-tuple(v_859),2-proj-2-tuple(v_883))) in
        {317}let v_886: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_883))) in
        {318}let v_887: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_886),zero)) in
        {319}let v_888: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_886),zero)) in
        {320}let v_889: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_886),zero)) in
        {321}let v_890: bitstring = catch-fail((if success?(2-proj-3-tuple(v_886)) then (if not-caught-fail(v_887) then (if not-caught-fail(v_888) then (if not-caught-fail(v_889) then (v_887,v_888,v_889) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {322}let v_891: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_890)) then cipherstatepack(1-proj-3-tuple(v_890),minnonce) else fail-any)) in
        {323}let v_892: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_890)) then cipherstatepack(2-proj-3-tuple(v_890),minnonce) else fail-any)) in
        {324}let v_893: bitstring = catch-fail((if success?(1-proj-2-tuple(v_883)) then (if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-3-tuple(v_890))))) then (if not-caught-fail(v_891) then (if not-caught-fail(v_892) then (1-proj-2-tuple(v_883),v_891,v_892) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {325}let (hs_894: handshakestate,message_c_895: bitstring,cs1_896: cipherstate,cs2_897: cipherstate) = (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-7-tuple(v_847))))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-3-tuple(v_848))))) then (if not-caught-fail(v_850) then (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-2-tuple(v_859))))) then (if not-caught-fail(v_866) then (if not-caught-fail(v_874) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-2-tuple(v_883))))) then (if not-caught-fail(v_884) then (if not-caught-fail(v_885) then (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-3-tuple(v_893))))) then (v_884,v_885,2-proj-3-tuple(v_893),3-proj-3-tuple(v_893)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {326}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {327}insert statestore(alice,charlie,sid,statepack_d(hs_894,cs1_896,cs2_897));
        {328}out(pub, message_c_895)
    ) | (
        {330}!
        {350}get statestore(=alice,=charlie,=sid,statepack_d(hs_898: handshakestate,cs1_899: cipherstate,cs2_900: cipherstate)) in
        {331}let hs_901: handshakestate = handshakestatesetcs(hs_898,cs2_900) in
        {332}in(pub, message_d_902: bitstring);
        {333}let v_903: bitstring = catch-fail(handshakestateunpack(hs_901)) in
        {334}let v_904: bitstring = catch-fail(deconcat3(message_d_902)) in
        {335}let v_905: bool = catch-fail(true) in
        {336}let v_906: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_903))) in
        {337}let v_907: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_906))) in
        {338}let v_908: aead = catch-fail(decrypt(1-proj-2-tuple(v_907),2-proj-2-tuple(v_907),3-proj-3-tuple(v_906),3-proj-3-tuple(v_904))) in
        {339}let v_909: bitstring = catch-fail(aeadunpack(v_908)) in
        {340}let v_910: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_906))) in
        {341}let v_911: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_907))) && success?(1-proj-3-tuple(v_906))) then (if (not-caught-fail(v_910) && success?(is-true(success?(1-proj-2-tuple(v_910))))) then cipherstatepack(1-proj-2-tuple(v_910),increment_nonce(2-proj-2-tuple(v_907))) else fail-any) else fail-any)) in
        {342}let v_912: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_904)) && (success?(3-proj-3-tuple(v_906)) && success?(1-proj-3-tuple(v_906)))) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then (if not-caught-fail(v_908) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-3-tuple(v_909))))) then (if not-caught-fail(v_911) then (v_911,3-proj-3-tuple(v_909),1-proj-3-tuple(v_909)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let v_913: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_912),2-proj-3-tuple(v_906),3-proj-3-tuple(v_906)))) in
        {344}let v_914: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_904)) && success?(symmetricstatepack(1-proj-3-tuple(v_912),2-proj-3-tuple(v_906),3-proj-3-tuple(v_906)))) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then symmetricstatepack(1-proj-3-tuple(v_913),2-proj-3-tuple(v_913),hash(3-proj-3-tuple(v_913),3-proj-3-tuple(v_904))) else fail-any) else fail-any)) in
        {345}let v_915: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_904)) && success?(1-proj-7-tuple(v_903))) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then (if not-caught-fail(v_914) then (v_914,2-proj-3-tuple(v_912),3-proj-3-tuple(v_912)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {346}let v_916: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_915),2-proj-7-tuple(v_903),3-proj-7-tuple(v_903),4-proj-7-tuple(v_903),5-proj-7-tuple(v_903),6-proj-7-tuple(v_903),7-proj-7-tuple(v_903))) in
        {347}let (hs_917: handshakestate,plaintext_d_918: bitstring,valid_919: bool) = (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-7-tuple(v_903))))) then (if (not-caught-fail(v_904) && success?(is-true(success?(1-proj-3-tuple(v_904))))) then (if not-caught-fail(v_905) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then (if (v_905 && 3-proj-3-tuple(v_915)) then (if not-caught-fail(v_916) then (v_916,2-proj-3-tuple(v_915),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {348}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_918);
        {349}insert statestore(alice,charlie,sid,statepack_e(hs_917,cs1_899,handshakestategetcs(hs_917)))
    ) | (
        {351}!
        {369}get statestore(=alice,=charlie,=sid,statepack_e(hs_920: handshakestate,cs1_921: cipherstate,cs2_922: cipherstate)) in
        {352}let hs_923: handshakestate = handshakestatesetcs(hs_920,cs1_921) in
        {353}let v_924: bitstring = catch-fail(handshakestateunpack(hs_923)) in
        {354}let v_925: bitstring = catch-fail((empty,empty,empty)) in
        {355}let v_926: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_924))) in
        {356}let v_927: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_926))) in
        {357}let v_928: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_927),2-proj-2-tuple(v_927),3-proj-3-tuple(v_926),msg_e(alice,charlie,sid))) in
        {358}let v_929: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_926))) in
        {359}let v_930: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_927))) && success?(1-proj-3-tuple(v_926))) then (if (not-caught-fail(v_929) && success?(is-true(success?(1-proj-2-tuple(v_929))))) then cipherstatepack(1-proj-2-tuple(v_929),increment_nonce(2-proj-2-tuple(v_927))) else fail-any) else fail-any)) in
        {360}let v_931: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_926)) && success?(1-proj-3-tuple(v_926))) then (if (not-caught-fail(v_927) && success?(is-true(success?(1-proj-2-tuple(v_927))))) then (if not-caught-fail(v_928) then (if not-caught-fail(v_930) then (v_930,v_928) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {361}let v_932: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_931),2-proj-3-tuple(v_926),3-proj-3-tuple(v_926)))) in
        {362}let v_933: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_931)) && success?(symmetricstatepack(1-proj-2-tuple(v_931),2-proj-3-tuple(v_926),3-proj-3-tuple(v_926)))) then (if (not-caught-fail(v_932) && success?(is-true(success?(1-proj-3-tuple(v_932))))) then symmetricstatepack(1-proj-3-tuple(v_932),2-proj-3-tuple(v_932),hash(3-proj-3-tuple(v_932),2-proj-2-tuple(v_931))) else fail-any) else fail-any)) in
        {363}let v_934: bitstring = catch-fail((if success?(1-proj-7-tuple(v_924)) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then (if (not-caught-fail(v_931) && success?(is-true(success?(1-proj-2-tuple(v_931))))) then (if not-caught-fail(v_933) then (v_933,2-proj-2-tuple(v_931)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {364}let v_935: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_934),2-proj-7-tuple(v_924),3-proj-7-tuple(v_924),4-proj-7-tuple(v_924),5-proj-7-tuple(v_924),6-proj-7-tuple(v_924),7-proj-7-tuple(v_924))) in
        {365}let v_936: bitstring = catch-fail(concat3(1-proj-3-tuple(v_925),2-proj-3-tuple(v_925),2-proj-2-tuple(v_934))) in
        {366}let (hs_937: handshakestate,message_e_938: bitstring) = (if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-7-tuple(v_924))))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-3-tuple(v_925))))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-2-tuple(v_934))))) then (if not-caught-fail(v_935) then (if not-caught-fail(v_936) then (v_935,v_936) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {367}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {368}out(pub, message_e_938)
    ) | (
        {370}event LeakPsk(phase0,alice,charlie);
        {371}out(pub, key_psk(alice,charlie))
    ) | (
        {372}phase 1;
        {373}event LeakPsk(phase1,alice,charlie);
        {374}out(pub, key_psk(alice,charlie))
    ) | (
        {375}event LeakS(phase0,alice);
        {376}out(pub, key_s(alice))
    ) | (
        {377}phase 1;
        {378}event LeakS(phase1,alice);
        {379}out(pub, key_s(alice))
    )
) | (
    {380}let v_939: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {381}let s_940: keypair = (if not-caught-fail(v_939) then keypairpack(validkey(v_939),key_s(bob)) else fail-any) in
    {382}out(pub, getpublickey(s_940));
    (
        {383}let e_941: keypair = keypairpack(empty,empty) in
        {384}let rs_942: key = empty in
        {385}let re_943: key = empty in
        {386}let v_944: bitstring = catch-fail(hash(somename,empty)) in
        {387}let v_945: key = catch-fail(v_944) in
        {388}let v_946: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {389}let v_947: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_944) then (if not-caught-fail(v_945) then (if not-caught-fail(v_946) then symmetricstatepack(v_946,v_945,v_944) else fail-any) else fail-any) else fail-any))) in
        {390}let v_948: symmetricstate = catch-fail((if success?((if not-caught-fail(v_944) then (if not-caught-fail(v_945) then (if not-caught-fail(v_946) then symmetricstatepack(v_946,v_945,v_944) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then symmetricstatepack(1-proj-3-tuple(v_947),2-proj-3-tuple(v_947),hash(3-proj-3-tuple(v_947),empty)) else fail-any) else fail-any)) in
        {391}let v_949: bitstring = catch-fail(symmetricstateunpack(v_948)) in
        {392}let v_950: symmetricstate = catch-fail((if success?(getpublickey(s_940)) then (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-3-tuple(v_949))))) then symmetricstatepack(1-proj-3-tuple(v_949),2-proj-3-tuple(v_949),hash(3-proj-3-tuple(v_949),getpublickey(s_940))) else fail-any) else fail-any)) in
        {393}let hs_951: handshakestate = (if not-caught-fail(v_948) then (if not-caught-fail(v_950) then handshakestatepack(v_950,s_940,e_941,rs_942,re_943,key_psk(alice,bob),false) else fail-any) else fail-any) in
        {394}insert statestore(bob,alice,sid,statepack_a(hs_951))
    ) | (
        {429}get statestore(=bob,=alice,=sid,statepack_a(hs_952: handshakestate)) in
        {395}in(pub, message_a_953: bitstring);
        {396}let v_954: bitstring = catch-fail(handshakestateunpack(hs_952)) in
        {397}let v_955: bitstring = catch-fail(deconcat3(message_a_953)) in
        {398}let v_956: bool = catch-fail(true) in
        {399}let v_957: key = catch-fail(1-proj-3-tuple(v_955)) in
        {400}let v_958: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_954))) in
        {401}let v_959: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_954)) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then symmetricstatepack(1-proj-3-tuple(v_958),2-proj-3-tuple(v_958),hash(3-proj-3-tuple(v_958),v_957)) else fail-any) else fail-any)) in
        {402}let v_960: bitstring = catch-fail(symmetricstateunpack(v_959)) in
        {403}let v_961: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_960),v_957)) in
        {404}let v_962: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_960),v_957)) in
        {405}let v_963: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_960),v_957)) in
        {406}let v_964: bitstring = catch-fail((if success?(2-proj-3-tuple(v_960)) then (if not-caught-fail(v_961) then (if not-caught-fail(v_962) then (if not-caught-fail(v_963) then (v_961,v_962,v_963) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_965: symmetricstate = catch-fail((if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-3-tuple(v_960))))) then (if (not-caught-fail(v_964) && success?(is-true(success?(1-proj-3-tuple(v_964))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_964)) then cipherstatepack(2-proj-3-tuple(v_964),minnonce) else fail-any),1-proj-3-tuple(v_964),3-proj-3-tuple(v_960)) else fail-any) else fail-any)) in
        {408}let v_966: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_954))) in
        {409}let v_967: bitstring = catch-fail(symmetricstateunpack(v_965)) in
        {410}let v_968: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_967),(if success?(2-proj-7-tuple(v_954)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-2-tuple(v_966))))) then dhexp(2-proj-2-tuple(v_966),v_957) else fail-any) else fail-any))) in
        {411}let v_969: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_967),(if success?(2-proj-7-tuple(v_954)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-2-tuple(v_966))))) then dhexp(2-proj-2-tuple(v_966),v_957) else fail-any) else fail-any))) in
        {412}let v_970: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_967),(if success?(2-proj-7-tuple(v_954)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-2-tuple(v_966))))) then dhexp(2-proj-2-tuple(v_966),v_957) else fail-any) else fail-any))) in
        {413}let v_971: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_954)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-2-tuple(v_966))))) then dhexp(2-proj-2-tuple(v_966),v_957) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_967))) then (if not-caught-fail(v_968) then (if not-caught-fail(v_969) then (if not-caught-fail(v_970) then (v_968,v_969,v_970) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {414}let v_972: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_954)) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-2-tuple(v_966))))) then dhexp(2-proj-2-tuple(v_966),v_957) else fail-any) else fail-any)) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-3-tuple(v_967))))) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-3-tuple(v_971))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_971)) then cipherstatepack(2-proj-3-tuple(v_971),minnonce) else fail-any),1-proj-3-tuple(v_971),3-proj-3-tuple(v_967)) else fail-any) else fail-any) else fail-any)) in
        {415}let v_973: bitstring = catch-fail(symmetricstateunpack(v_972)) in
        {416}let v_974: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_973))) in
        {417}let v_975: aead = catch-fail(decrypt(1-proj-2-tuple(v_974),2-proj-2-tuple(v_974),3-proj-3-tuple(v_973),3-proj-3-tuple(v_955))) in
        {418}let v_976: bitstring = catch-fail(aeadunpack(v_975)) in
        {419}let v_977: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_973))) in
        {420}let v_978: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_974))) && success?(1-proj-3-tuple(v_973))) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then cipherstatepack(1-proj-2-tuple(v_977),increment_nonce(2-proj-2-tuple(v_974))) else fail-any) else fail-any)) in
        {421}let v_979: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_955)) && (success?(3-proj-3-tuple(v_973)) && success?(1-proj-3-tuple(v_973)))) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-2-tuple(v_974))))) then (if not-caught-fail(v_975) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then (if not-caught-fail(v_978) then (v_978,3-proj-3-tuple(v_976),1-proj-3-tuple(v_976)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {422}let v_980: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_979),2-proj-3-tuple(v_973),3-proj-3-tuple(v_973)))) in
        {423}let v_981: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_955)) && success?(symmetricstatepack(1-proj-3-tuple(v_979),2-proj-3-tuple(v_973),3-proj-3-tuple(v_973)))) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-3-tuple(v_980))))) then symmetricstatepack(1-proj-3-tuple(v_980),2-proj-3-tuple(v_980),hash(3-proj-3-tuple(v_980),3-proj-3-tuple(v_955))) else fail-any) else fail-any)) in
        {424}let v_982: bitstring = catch-fail((if success?(3-proj-3-tuple(v_955)) then (if (not-caught-fail(v_973) && success?(is-true(success?(1-proj-3-tuple(v_973))))) then (if (not-caught-fail(v_979) && success?(is-true(success?(1-proj-3-tuple(v_979))))) then (if not-caught-fail(v_981) then (v_981,2-proj-3-tuple(v_979),3-proj-3-tuple(v_979)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {425}let v_983: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_982),2-proj-7-tuple(v_954),3-proj-7-tuple(v_954),4-proj-7-tuple(v_954),v_957,6-proj-7-tuple(v_954),7-proj-7-tuple(v_954))) in
        {426}let (hs_984: handshakestate,plaintext_a: bitstring,valid_985: bool) = (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-7-tuple(v_954))))) then (if (not-caught-fail(v_955) && success?(is-true(success?(1-proj-3-tuple(v_955))))) then (if not-caught-fail(v_956) then (if not-caught-fail(v_957) then (if not-caught-fail(v_959) then (if not-caught-fail(v_965) then (if not-caught-fail(v_972) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then (if (v_956 && 3-proj-3-tuple(v_982)) then (if not-caught-fail(v_983) then (v_983,2-proj-3-tuple(v_982),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {427}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {428}insert statestore(bob,alice,sid,statepack_b(hs_984))
    ) | (
        {465}get statestore(=bob,=alice,=sid,statepack_b(hs_986: handshakestate)) in
        {430}let v_987: bitstring = catch-fail(handshakestateunpack(hs_986)) in
        {431}let v_988: bitstring = catch-fail((empty,empty,empty)) in
        {432}let v_989: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {433}let v_990: keypair = catch-fail((if not-caught-fail(v_989) then keypairpack(validkey(v_989),key_e(bob,alice,sid)) else fail-any)) in
        {434}let v_991: bitstring = catch-fail(getpublickey(v_990)) in
        {435}let v_992: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_987))) in
        {436}let v_993: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_987)) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-3-tuple(v_992))))) then symmetricstatepack(1-proj-3-tuple(v_992),2-proj-3-tuple(v_992),hash(3-proj-3-tuple(v_992),v_991)) else fail-any) else fail-any)) in
        {437}let v_994: bitstring = catch-fail(symmetricstateunpack(v_993)) in
        {438}let v_995: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_994),getpublickey(v_990))) in
        {439}let v_996: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_994),getpublickey(v_990))) in
        {440}let v_997: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_994),getpublickey(v_990))) in
        {441}let v_998: bitstring = catch-fail((if (success?(getpublickey(v_990)) && success?(2-proj-3-tuple(v_994))) then (if not-caught-fail(v_995) then (if not-caught-fail(v_996) then (if not-caught-fail(v_997) then (v_995,v_996,v_997) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {442}let v_999: symmetricstate = catch-fail((if success?(getpublickey(v_990)) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-3-tuple(v_998))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_998)) then cipherstatepack(2-proj-3-tuple(v_998),minnonce) else fail-any),1-proj-3-tuple(v_998),3-proj-3-tuple(v_994)) else fail-any) else fail-any) else fail-any)) in
        {443}let v_1000: bitstring = catch-fail(keypairunpack(v_990)) in
        {444}let v_1001: bitstring = catch-fail(symmetricstateunpack(v_999)) in
        {445}let v_1002: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1001),(if success?(5-proj-7-tuple(v_987)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-2-tuple(v_1000))))) then dhexp(2-proj-2-tuple(v_1000),5-proj-7-tuple(v_987)) else fail-any) else fail-any))) in
        {446}let v_1003: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1001),(if success?(5-proj-7-tuple(v_987)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-2-tuple(v_1000))))) then dhexp(2-proj-2-tuple(v_1000),5-proj-7-tuple(v_987)) else fail-any) else fail-any))) in
        {447}let v_1004: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1001),(if success?(5-proj-7-tuple(v_987)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-2-tuple(v_1000))))) then dhexp(2-proj-2-tuple(v_1000),5-proj-7-tuple(v_987)) else fail-any) else fail-any))) in
        {448}let v_1005: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_987)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-2-tuple(v_1000))))) then dhexp(2-proj-2-tuple(v_1000),5-proj-7-tuple(v_987)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1001))) then (if not-caught-fail(v_1002) then (if not-caught-fail(v_1003) then (if not-caught-fail(v_1004) then (v_1002,v_1003,v_1004) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_1006: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_987)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-2-tuple(v_1000))))) then dhexp(2-proj-2-tuple(v_1000),5-proj-7-tuple(v_987)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-3-tuple(v_1001))))) then (if (not-caught-fail(v_1005) && success?(is-true(success?(1-proj-3-tuple(v_1005))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1005)) then cipherstatepack(2-proj-3-tuple(v_1005),minnonce) else fail-any),1-proj-3-tuple(v_1005),3-proj-3-tuple(v_1001)) else fail-any) else fail-any) else fail-any)) in
        {450}let v_1007: bitstring = catch-fail(symmetricstateunpack(v_1006)) in
        {451}let v_1008: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1007))) in
        {452}let v_1009: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1008),2-proj-2-tuple(v_1008),3-proj-3-tuple(v_1007),msg_b(bob,alice,sid))) in
        {453}let v_1010: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1007))) in
        {454}let v_1011: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1008))) && success?(1-proj-3-tuple(v_1007))) then (if (not-caught-fail(v_1010) && success?(is-true(success?(1-proj-2-tuple(v_1010))))) then cipherstatepack(1-proj-2-tuple(v_1010),increment_nonce(2-proj-2-tuple(v_1008))) else fail-any) else fail-any)) in
        {455}let v_1012: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1007)) && success?(1-proj-3-tuple(v_1007))) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-2-tuple(v_1008))))) then (if not-caught-fail(v_1009) then (if not-caught-fail(v_1011) then (v_1011,v_1009) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_1013: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1012),2-proj-3-tuple(v_1007),3-proj-3-tuple(v_1007)))) in
        {457}let v_1014: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1012)) && success?(symmetricstatepack(1-proj-2-tuple(v_1012),2-proj-3-tuple(v_1007),3-proj-3-tuple(v_1007)))) then (if (not-caught-fail(v_1013) && success?(is-true(success?(1-proj-3-tuple(v_1013))))) then symmetricstatepack(1-proj-3-tuple(v_1013),2-proj-3-tuple(v_1013),hash(3-proj-3-tuple(v_1013),2-proj-2-tuple(v_1012))) else fail-any) else fail-any)) in
        {458}let v_1015: bitstring = catch-fail((if (not-caught-fail(v_1007) && success?(is-true(success?(1-proj-3-tuple(v_1007))))) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-2-tuple(v_1012))))) then (if not-caught-fail(v_1014) then (v_1014,2-proj-2-tuple(v_1012)) else fail-any) else fail-any) else fail-any)) in
        {459}let v_1016: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1015),2-proj-7-tuple(v_987),v_990,4-proj-7-tuple(v_987),5-proj-7-tuple(v_987),6-proj-7-tuple(v_987),7-proj-7-tuple(v_987))) in
        {460}let v_1017: bitstring = catch-fail(concat3(v_991,2-proj-3-tuple(v_988),2-proj-2-tuple(v_1015))) in
        {461}let (hs_1018: handshakestate,message_b_1019: bitstring) = (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-7-tuple(v_987))))) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-3-tuple(v_988))))) then (if not-caught-fail(v_990) then (if not-caught-fail(v_991) then (if not-caught-fail(v_993) then (if not-caught-fail(v_999) then (if not-caught-fail(v_1006) then (if (not-caught-fail(v_1015) && success?(is-true(success?(1-proj-2-tuple(v_1015))))) then (if not-caught-fail(v_1016) then (if not-caught-fail(v_1017) then (v_1016,v_1017) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {462}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {463}insert statestore(bob,alice,sid,statepack_c(hs_1018));
        {464}out(pub, message_b_1019)
    ) | (
        {519}get statestore(=bob,=alice,=sid,statepack_c(hs_1020: handshakestate)) in
        {466}in(pub, message_c_1021: bitstring);
        {467}let v_1022: bitstring = catch-fail(handshakestateunpack(hs_1020)) in
        {468}let v_1023: bitstring = catch-fail(deconcat3(message_c_1021)) in
        {469}let v_1024: bool = catch-fail(true) in
        {470}let v_1025: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1022))) in
        {471}let v_1026: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1025))) in
        {472}let v_1027: aead = catch-fail(decrypt(1-proj-2-tuple(v_1026),2-proj-2-tuple(v_1026),3-proj-3-tuple(v_1025),2-proj-3-tuple(v_1023))) in
        {473}let v_1028: bitstring = catch-fail(aeadunpack(v_1027)) in
        {474}let v_1029: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1025))) in
        {475}let v_1030: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1026))) && success?(1-proj-3-tuple(v_1025))) then (if (not-caught-fail(v_1029) && success?(is-true(success?(1-proj-2-tuple(v_1029))))) then cipherstatepack(1-proj-2-tuple(v_1029),increment_nonce(2-proj-2-tuple(v_1026))) else fail-any) else fail-any)) in
        {476}let v_1031: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1023)) && (success?(3-proj-3-tuple(v_1025)) && success?(1-proj-3-tuple(v_1025)))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-2-tuple(v_1026))))) then (if not-caught-fail(v_1027) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-3-tuple(v_1028))))) then (if not-caught-fail(v_1030) then (v_1030,3-proj-3-tuple(v_1028),1-proj-3-tuple(v_1028)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {477}let v_1032: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1031),2-proj-3-tuple(v_1025),3-proj-3-tuple(v_1025)))) in
        {478}let v_1033: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1023)) && success?(symmetricstatepack(1-proj-3-tuple(v_1031),2-proj-3-tuple(v_1025),3-proj-3-tuple(v_1025)))) then (if (not-caught-fail(v_1032) && success?(is-true(success?(1-proj-3-tuple(v_1032))))) then symmetricstatepack(1-proj-3-tuple(v_1032),2-proj-3-tuple(v_1032),hash(3-proj-3-tuple(v_1032),2-proj-3-tuple(v_1023))) else fail-any) else fail-any)) in
        {479}let v_1034: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1023)) && success?(1-proj-7-tuple(v_1022))) then (if (not-caught-fail(v_1025) && success?(is-true(success?(1-proj-3-tuple(v_1025))))) then (if (not-caught-fail(v_1031) && success?(is-true(success?(1-proj-3-tuple(v_1031))))) then (if not-caught-fail(v_1033) then (v_1033,2-proj-3-tuple(v_1031),3-proj-3-tuple(v_1031)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {480}let v_1035: key = catch-fail(2-proj-3-tuple(v_1034)) in
        {481}let v_1036: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1022))) in
        {482}let v_1037: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1034))) in
        {483}let v_1038: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1037),(if success?(3-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then dhexp(2-proj-2-tuple(v_1036),v_1035) else fail-any) else fail-any))) in
        {484}let v_1039: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1037),(if success?(3-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then dhexp(2-proj-2-tuple(v_1036),v_1035) else fail-any) else fail-any))) in
        {485}let v_1040: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1037),(if success?(3-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then dhexp(2-proj-2-tuple(v_1036),v_1035) else fail-any) else fail-any))) in
        {486}let v_1041: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then dhexp(2-proj-2-tuple(v_1036),v_1035) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1037))) then (if not-caught-fail(v_1038) then (if not-caught-fail(v_1039) then (if not-caught-fail(v_1040) then (v_1038,v_1039,v_1040) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {487}let v_1042: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-2-tuple(v_1036))))) then dhexp(2-proj-2-tuple(v_1036),v_1035) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1034))) then (if (not-caught-fail(v_1037) && success?(is-true(success?(1-proj-3-tuple(v_1037))))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-3-tuple(v_1041))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1041)) then cipherstatepack(2-proj-3-tuple(v_1041),minnonce) else fail-any),1-proj-3-tuple(v_1041),3-proj-3-tuple(v_1037)) else fail-any) else fail-any) else fail-any)) in
        {488}let v_1043: bitstring = catch-fail(symmetricstateunpack(v_1042)) in
        {489}let v_1044: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1043),6-proj-7-tuple(v_1022))) in
        {490}let v_1045: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1043),6-proj-7-tuple(v_1022))) in
        {491}let v_1046: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1043),6-proj-7-tuple(v_1022))) in
        {492}let v_1047: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1022)) && success?(2-proj-3-tuple(v_1043))) then (if not-caught-fail(v_1044) then (if not-caught-fail(v_1045) then (if not-caught-fail(v_1046) then (v_1044,v_1045,v_1046) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {493}let v_1048: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1043),1-proj-3-tuple(v_1047),3-proj-3-tuple(v_1043)))) in
        {494}let v_1049: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1047)) && success?(symmetricstatepack(1-proj-3-tuple(v_1043),1-proj-3-tuple(v_1047),3-proj-3-tuple(v_1043)))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then symmetricstatepack(1-proj-3-tuple(v_1048),2-proj-3-tuple(v_1048),hash(3-proj-3-tuple(v_1048),2-proj-3-tuple(v_1047))) else fail-any) else fail-any))) in
        {495}let v_1050: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1022)) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-3-tuple(v_1043))))) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-3-tuple(v_1047))))) then (if (not-caught-fail(v_1049) && success?(is-true(success?(1-proj-3-tuple(v_1049))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1047)) then cipherstatepack(3-proj-3-tuple(v_1047),minnonce) else fail-any),1-proj-3-tuple(v_1047),3-proj-3-tuple(v_1049)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {496}let v_1051: bitstring = catch-fail(symmetricstateunpack(v_1050)) in
        {497}let v_1052: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1051))) in
        {498}let v_1053: aead = catch-fail(decrypt(1-proj-2-tuple(v_1052),2-proj-2-tuple(v_1052),3-proj-3-tuple(v_1051),3-proj-3-tuple(v_1023))) in
        {499}let v_1054: bitstring = catch-fail(aeadunpack(v_1053)) in
        {500}let v_1055: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1051))) in
        {501}let v_1056: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1052))) && success?(1-proj-3-tuple(v_1051))) then (if (not-caught-fail(v_1055) && success?(is-true(success?(1-proj-2-tuple(v_1055))))) then cipherstatepack(1-proj-2-tuple(v_1055),increment_nonce(2-proj-2-tuple(v_1052))) else fail-any) else fail-any)) in
        {502}let v_1057: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1023)) && (success?(3-proj-3-tuple(v_1051)) && success?(1-proj-3-tuple(v_1051)))) then (if (not-caught-fail(v_1052) && success?(is-true(success?(1-proj-2-tuple(v_1052))))) then (if not-caught-fail(v_1053) then (if (not-caught-fail(v_1054) && success?(is-true(success?(1-proj-3-tuple(v_1054))))) then (if not-caught-fail(v_1056) then (v_1056,3-proj-3-tuple(v_1054),1-proj-3-tuple(v_1054)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {503}let v_1058: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1057),2-proj-3-tuple(v_1051),3-proj-3-tuple(v_1051)))) in
        {504}let v_1059: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1023)) && success?(symmetricstatepack(1-proj-3-tuple(v_1057),2-proj-3-tuple(v_1051),3-proj-3-tuple(v_1051)))) then (if (not-caught-fail(v_1058) && success?(is-true(success?(1-proj-3-tuple(v_1058))))) then symmetricstatepack(1-proj-3-tuple(v_1058),2-proj-3-tuple(v_1058),hash(3-proj-3-tuple(v_1058),3-proj-3-tuple(v_1023))) else fail-any) else fail-any)) in
        {505}let v_1060: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1023)) then (if (not-caught-fail(v_1051) && success?(is-true(success?(1-proj-3-tuple(v_1051))))) then (if (not-caught-fail(v_1057) && success?(is-true(success?(1-proj-3-tuple(v_1057))))) then (if not-caught-fail(v_1059) then (v_1059,2-proj-3-tuple(v_1057),3-proj-3-tuple(v_1057)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {506}let v_1061: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {507}let v_1062: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1060),2-proj-7-tuple(v_1022),3-proj-7-tuple(v_1022),v_1035,5-proj-7-tuple(v_1022),6-proj-7-tuple(v_1022),7-proj-7-tuple(v_1022))) in
        {508}let v_1063: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1060))) in
        {509}let v_1064: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1063),zero)) in
        {510}let v_1065: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1063),zero)) in
        {511}let v_1066: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1063),zero)) in
        {512}let v_1067: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1063)) then (if not-caught-fail(v_1064) then (if not-caught-fail(v_1065) then (if not-caught-fail(v_1066) then (v_1064,v_1065,v_1066) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {513}let v_1068: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1067)) then cipherstatepack(1-proj-3-tuple(v_1067),minnonce) else fail-any)) in
        {514}let v_1069: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1067)) then cipherstatepack(2-proj-3-tuple(v_1067),minnonce) else fail-any)) in
        {515}let v_1070: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1060)) then (if (not-caught-fail(v_1063) && success?(is-true(success?(1-proj-3-tuple(v_1063))))) then (if (not-caught-fail(v_1067) && success?(is-true(success?(1-proj-3-tuple(v_1067))))) then (if not-caught-fail(v_1068) then (if not-caught-fail(v_1069) then (1-proj-3-tuple(v_1060),v_1068,v_1069) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {516}let (hs_1071: handshakestate,plaintext_c: bitstring,valid_1072: bool,cs1_1073: cipherstate,cs2_1074: cipherstate) = (if (not-caught-fail(v_1022) && success?(is-true(success?(1-proj-7-tuple(v_1022))))) then (if (not-caught-fail(v_1023) && success?(is-true(success?(1-proj-3-tuple(v_1023))))) then (if not-caught-fail(v_1024) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-3-tuple(v_1034))))) then (if not-caught-fail(v_1035) then (if not-caught-fail(v_1042) then (if not-caught-fail(v_1050) then (if (not-caught-fail(v_1060) && success?(is-true(success?(1-proj-3-tuple(v_1060))))) then (if ((3-proj-3-tuple(v_1034) && 3-proj-3-tuple(v_1060)) && (v_1035 = getpublickey((if not-caught-fail(v_1061) then keypairpack(validkey(v_1061),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_1062) then (if (not-caught-fail(v_1070) && success?(is-true(success?(1-proj-3-tuple(v_1070))))) then (v_1062,2-proj-3-tuple(v_1060),true,2-proj-3-tuple(v_1070),3-proj-3-tuple(v_1070)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {517}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {518}insert statestore(bob,alice,sid,statepack_d(hs_1071,cs1_1073,cs2_1074))
    ) | (
        {520}!
        {539}get statestore(=bob,=alice,=sid,statepack_d(hs_1075: handshakestate,cs1_1076: cipherstate,cs2_1077: cipherstate)) in
        {521}let hs_1078: handshakestate = handshakestatesetcs(hs_1075,cs2_1077) in
        {522}let v_1079: bitstring = catch-fail(handshakestateunpack(hs_1078)) in
        {523}let v_1080: bitstring = catch-fail((empty,empty,empty)) in
        {524}let v_1081: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1079))) in
        {525}let v_1082: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1081))) in
        {526}let v_1083: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1082),2-proj-2-tuple(v_1082),3-proj-3-tuple(v_1081),msg_d(bob,alice,sid))) in
        {527}let v_1084: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1081))) in
        {528}let v_1085: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1082))) && success?(1-proj-3-tuple(v_1081))) then (if (not-caught-fail(v_1084) && success?(is-true(success?(1-proj-2-tuple(v_1084))))) then cipherstatepack(1-proj-2-tuple(v_1084),increment_nonce(2-proj-2-tuple(v_1082))) else fail-any) else fail-any)) in
        {529}let v_1086: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1081)) && success?(1-proj-3-tuple(v_1081))) then (if (not-caught-fail(v_1082) && success?(is-true(success?(1-proj-2-tuple(v_1082))))) then (if not-caught-fail(v_1083) then (if not-caught-fail(v_1085) then (v_1085,v_1083) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {530}let v_1087: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1086),2-proj-3-tuple(v_1081),3-proj-3-tuple(v_1081)))) in
        {531}let v_1088: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1086)) && success?(symmetricstatepack(1-proj-2-tuple(v_1086),2-proj-3-tuple(v_1081),3-proj-3-tuple(v_1081)))) then (if (not-caught-fail(v_1087) && success?(is-true(success?(1-proj-3-tuple(v_1087))))) then symmetricstatepack(1-proj-3-tuple(v_1087),2-proj-3-tuple(v_1087),hash(3-proj-3-tuple(v_1087),2-proj-2-tuple(v_1086))) else fail-any) else fail-any)) in
        {532}let v_1089: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1079)) then (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-3-tuple(v_1081))))) then (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-2-tuple(v_1086))))) then (if not-caught-fail(v_1088) then (v_1088,2-proj-2-tuple(v_1086)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {533}let v_1090: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1089),2-proj-7-tuple(v_1079),3-proj-7-tuple(v_1079),4-proj-7-tuple(v_1079),5-proj-7-tuple(v_1079),6-proj-7-tuple(v_1079),7-proj-7-tuple(v_1079))) in
        {534}let v_1091: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1080),2-proj-3-tuple(v_1080),2-proj-2-tuple(v_1089))) in
        {535}let (hs_1092: handshakestate,message_d_1093: bitstring) = (if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-7-tuple(v_1079))))) then (if (not-caught-fail(v_1080) && success?(is-true(success?(1-proj-3-tuple(v_1080))))) then (if (not-caught-fail(v_1089) && success?(is-true(success?(1-proj-2-tuple(v_1089))))) then (if not-caught-fail(v_1090) then (if not-caught-fail(v_1091) then (v_1090,v_1091) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {536}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {537}insert statestore(bob,alice,sid,statepack_e(hs_1092,cs1_1076,handshakestategetcs(hs_1092)));
        {538}out(pub, message_d_1093)
    ) | (
        {540}!
        {560}get statestore(=bob,=alice,=sid,statepack_e(hs_1094: handshakestate,cs1_1095: cipherstate,cs2_1096: cipherstate)) in
        {541}let hs_1097: handshakestate = handshakestatesetcs(hs_1094,cs1_1095) in
        {542}in(pub, message_e_1098: bitstring);
        {543}let v_1099: bitstring = catch-fail(handshakestateunpack(hs_1097)) in
        {544}let v_1100: bitstring = catch-fail(deconcat3(message_e_1098)) in
        {545}let v_1101: bool = catch-fail(true) in
        {546}let v_1102: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1099))) in
        {547}let v_1103: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1102))) in
        {548}let v_1104: aead = catch-fail(decrypt(1-proj-2-tuple(v_1103),2-proj-2-tuple(v_1103),3-proj-3-tuple(v_1102),3-proj-3-tuple(v_1100))) in
        {549}let v_1105: bitstring = catch-fail(aeadunpack(v_1104)) in
        {550}let v_1106: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1102))) in
        {551}let v_1107: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1103))) && success?(1-proj-3-tuple(v_1102))) then (if (not-caught-fail(v_1106) && success?(is-true(success?(1-proj-2-tuple(v_1106))))) then cipherstatepack(1-proj-2-tuple(v_1106),increment_nonce(2-proj-2-tuple(v_1103))) else fail-any) else fail-any)) in
        {552}let v_1108: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1100)) && (success?(3-proj-3-tuple(v_1102)) && success?(1-proj-3-tuple(v_1102)))) then (if (not-caught-fail(v_1103) && success?(is-true(success?(1-proj-2-tuple(v_1103))))) then (if not-caught-fail(v_1104) then (if (not-caught-fail(v_1105) && success?(is-true(success?(1-proj-3-tuple(v_1105))))) then (if not-caught-fail(v_1107) then (v_1107,3-proj-3-tuple(v_1105),1-proj-3-tuple(v_1105)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {553}let v_1109: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1108),2-proj-3-tuple(v_1102),3-proj-3-tuple(v_1102)))) in
        {554}let v_1110: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1100)) && success?(symmetricstatepack(1-proj-3-tuple(v_1108),2-proj-3-tuple(v_1102),3-proj-3-tuple(v_1102)))) then (if (not-caught-fail(v_1109) && success?(is-true(success?(1-proj-3-tuple(v_1109))))) then symmetricstatepack(1-proj-3-tuple(v_1109),2-proj-3-tuple(v_1109),hash(3-proj-3-tuple(v_1109),3-proj-3-tuple(v_1100))) else fail-any) else fail-any)) in
        {555}let v_1111: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1100)) && success?(1-proj-7-tuple(v_1099))) then (if (not-caught-fail(v_1102) && success?(is-true(success?(1-proj-3-tuple(v_1102))))) then (if (not-caught-fail(v_1108) && success?(is-true(success?(1-proj-3-tuple(v_1108))))) then (if not-caught-fail(v_1110) then (v_1110,2-proj-3-tuple(v_1108),3-proj-3-tuple(v_1108)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {556}let v_1112: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1111),2-proj-7-tuple(v_1099),3-proj-7-tuple(v_1099),4-proj-7-tuple(v_1099),5-proj-7-tuple(v_1099),6-proj-7-tuple(v_1099),7-proj-7-tuple(v_1099))) in
        {557}let (hs_1113: handshakestate,plaintext_e: bitstring,valid_1114: bool) = (if (not-caught-fail(v_1099) && success?(is-true(success?(1-proj-7-tuple(v_1099))))) then (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-3-tuple(v_1100))))) then (if not-caught-fail(v_1101) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-3-tuple(v_1111))))) then (if (v_1101 && 3-proj-3-tuple(v_1111)) then (if not-caught-fail(v_1112) then (v_1112,2-proj-3-tuple(v_1111),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {558}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {559}event RecvEnd(valid_1114)
    ) | (
        {561}event LeakPsk(phase0,alice,bob);
        {562}out(pub, key_psk(alice,bob))
    ) | (
        {563}phase 1;
        {564}event LeakPsk(phase1,alice,bob);
        {565}out(pub, key_psk(alice,bob))
    ) | (
        {566}event LeakS(phase0,bob);
        {567}out(pub, key_s(bob))
    ) | (
        {568}phase 1;
        {569}event LeakS(phase1,bob);
        {570}out(pub, key_s(bob))
    )
) | (
    {571}let v_1115: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {572}let s_1116: keypair = (if not-caught-fail(v_1115) then keypairpack(validkey(v_1115),key_s(bob)) else fail-any) in
    {573}out(pub, getpublickey(s_1116));
    (
        {574}let e_1117: keypair = keypairpack(empty,empty) in
        {575}let rs_1118: key = empty in
        {576}let re_1119: key = empty in
        {577}let v_1120: bitstring = catch-fail(hash(somename,empty)) in
        {578}let v_1121: key = catch-fail(v_1120) in
        {579}let v_1122: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {580}let v_1123: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1120) then (if not-caught-fail(v_1121) then (if not-caught-fail(v_1122) then symmetricstatepack(v_1122,v_1121,v_1120) else fail-any) else fail-any) else fail-any))) in
        {581}let v_1124: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1120) then (if not-caught-fail(v_1121) then (if not-caught-fail(v_1122) then symmetricstatepack(v_1122,v_1121,v_1120) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1123) && success?(is-true(success?(1-proj-3-tuple(v_1123))))) then symmetricstatepack(1-proj-3-tuple(v_1123),2-proj-3-tuple(v_1123),hash(3-proj-3-tuple(v_1123),empty)) else fail-any) else fail-any)) in
        {582}let v_1125: bitstring = catch-fail(symmetricstateunpack(v_1124)) in
        {583}let v_1126: symmetricstate = catch-fail((if success?(getpublickey(s_1116)) then (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-3-tuple(v_1125))))) then symmetricstatepack(1-proj-3-tuple(v_1125),2-proj-3-tuple(v_1125),hash(3-proj-3-tuple(v_1125),getpublickey(s_1116))) else fail-any) else fail-any)) in
        {584}let hs_1127: handshakestate = (if not-caught-fail(v_1124) then (if not-caught-fail(v_1126) then handshakestatepack(v_1126,s_1116,e_1117,rs_1118,re_1119,key_psk(charlie,bob),false) else fail-any) else fail-any) in
        {585}insert statestore(bob,charlie,sid,statepack_a(hs_1127))
    ) | (
        {620}get statestore(=bob,=charlie,=sid,statepack_a(hs_1128: handshakestate)) in
        {586}in(pub, message_a_1129: bitstring);
        {587}let v_1130: bitstring = catch-fail(handshakestateunpack(hs_1128)) in
        {588}let v_1131: bitstring = catch-fail(deconcat3(message_a_1129)) in
        {589}let v_1132: bool = catch-fail(true) in
        {590}let v_1133: key = catch-fail(1-proj-3-tuple(v_1131)) in
        {591}let v_1134: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1130))) in
        {592}let v_1135: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-3-tuple(v_1134))))) then symmetricstatepack(1-proj-3-tuple(v_1134),2-proj-3-tuple(v_1134),hash(3-proj-3-tuple(v_1134),v_1133)) else fail-any) else fail-any)) in
        {593}let v_1136: bitstring = catch-fail(symmetricstateunpack(v_1135)) in
        {594}let v_1137: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1136),v_1133)) in
        {595}let v_1138: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1136),v_1133)) in
        {596}let v_1139: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1136),v_1133)) in
        {597}let v_1140: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1136)) then (if not-caught-fail(v_1137) then (if not-caught-fail(v_1138) then (if not-caught-fail(v_1139) then (v_1137,v_1138,v_1139) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {598}let v_1141: symmetricstate = catch-fail((if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-3-tuple(v_1136))))) then (if (not-caught-fail(v_1140) && success?(is-true(success?(1-proj-3-tuple(v_1140))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1140)) then cipherstatepack(2-proj-3-tuple(v_1140),minnonce) else fail-any),1-proj-3-tuple(v_1140),3-proj-3-tuple(v_1136)) else fail-any) else fail-any)) in
        {599}let v_1142: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1130))) in
        {600}let v_1143: bitstring = catch-fail(symmetricstateunpack(v_1141)) in
        {601}let v_1144: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1143),(if success?(2-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then dhexp(2-proj-2-tuple(v_1142),v_1133) else fail-any) else fail-any))) in
        {602}let v_1145: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1143),(if success?(2-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then dhexp(2-proj-2-tuple(v_1142),v_1133) else fail-any) else fail-any))) in
        {603}let v_1146: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1143),(if success?(2-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then dhexp(2-proj-2-tuple(v_1142),v_1133) else fail-any) else fail-any))) in
        {604}let v_1147: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then dhexp(2-proj-2-tuple(v_1142),v_1133) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1143))) then (if not-caught-fail(v_1144) then (if not-caught-fail(v_1145) then (if not-caught-fail(v_1146) then (v_1144,v_1145,v_1146) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {605}let v_1148: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_1130)) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then dhexp(2-proj-2-tuple(v_1142),v_1133) else fail-any) else fail-any)) then (if (not-caught-fail(v_1143) && success?(is-true(success?(1-proj-3-tuple(v_1143))))) then (if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1147)) then cipherstatepack(2-proj-3-tuple(v_1147),minnonce) else fail-any),1-proj-3-tuple(v_1147),3-proj-3-tuple(v_1143)) else fail-any) else fail-any) else fail-any)) in
        {606}let v_1149: bitstring = catch-fail(symmetricstateunpack(v_1148)) in
        {607}let v_1150: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1149))) in
        {608}let v_1151: aead = catch-fail(decrypt(1-proj-2-tuple(v_1150),2-proj-2-tuple(v_1150),3-proj-3-tuple(v_1149),3-proj-3-tuple(v_1131))) in
        {609}let v_1152: bitstring = catch-fail(aeadunpack(v_1151)) in
        {610}let v_1153: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1149))) in
        {611}let v_1154: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1150))) && success?(1-proj-3-tuple(v_1149))) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then cipherstatepack(1-proj-2-tuple(v_1153),increment_nonce(2-proj-2-tuple(v_1150))) else fail-any) else fail-any)) in
        {612}let v_1155: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1131)) && (success?(3-proj-3-tuple(v_1149)) && success?(1-proj-3-tuple(v_1149)))) then (if (not-caught-fail(v_1150) && success?(is-true(success?(1-proj-2-tuple(v_1150))))) then (if not-caught-fail(v_1151) then (if (not-caught-fail(v_1152) && success?(is-true(success?(1-proj-3-tuple(v_1152))))) then (if not-caught-fail(v_1154) then (v_1154,3-proj-3-tuple(v_1152),1-proj-3-tuple(v_1152)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {613}let v_1156: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1155),2-proj-3-tuple(v_1149),3-proj-3-tuple(v_1149)))) in
        {614}let v_1157: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1131)) && success?(symmetricstatepack(1-proj-3-tuple(v_1155),2-proj-3-tuple(v_1149),3-proj-3-tuple(v_1149)))) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-3-tuple(v_1156))))) then symmetricstatepack(1-proj-3-tuple(v_1156),2-proj-3-tuple(v_1156),hash(3-proj-3-tuple(v_1156),3-proj-3-tuple(v_1131))) else fail-any) else fail-any)) in
        {615}let v_1158: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1131)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-3-tuple(v_1149))))) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-3-tuple(v_1155))))) then (if not-caught-fail(v_1157) then (v_1157,2-proj-3-tuple(v_1155),3-proj-3-tuple(v_1155)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {616}let v_1159: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1158),2-proj-7-tuple(v_1130),3-proj-7-tuple(v_1130),4-proj-7-tuple(v_1130),v_1133,6-proj-7-tuple(v_1130),7-proj-7-tuple(v_1130))) in
        {617}let (hs_1160: handshakestate,plaintext_a_1161: bitstring,valid_1162: bool) = (if (not-caught-fail(v_1130) && success?(is-true(success?(1-proj-7-tuple(v_1130))))) then (if (not-caught-fail(v_1131) && success?(is-true(success?(1-proj-3-tuple(v_1131))))) then (if not-caught-fail(v_1132) then (if not-caught-fail(v_1133) then (if not-caught-fail(v_1135) then (if not-caught-fail(v_1141) then (if not-caught-fail(v_1148) then (if (not-caught-fail(v_1158) && success?(is-true(success?(1-proj-3-tuple(v_1158))))) then (if (v_1132 && 3-proj-3-tuple(v_1158)) then (if not-caught-fail(v_1159) then (v_1159,2-proj-3-tuple(v_1158),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {618}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1161);
        {619}insert statestore(bob,charlie,sid,statepack_b(hs_1160))
    ) | (
        {656}get statestore(=bob,=charlie,=sid,statepack_b(hs_1163: handshakestate)) in
        {621}let v_1164: bitstring = catch-fail(handshakestateunpack(hs_1163)) in
        {622}let v_1165: bitstring = catch-fail((empty,empty,empty)) in
        {623}let v_1166: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {624}let v_1167: keypair = catch-fail((if not-caught-fail(v_1166) then keypairpack(validkey(v_1166),key_e(bob,charlie,sid)) else fail-any)) in
        {625}let v_1168: bitstring = catch-fail(getpublickey(v_1167)) in
        {626}let v_1169: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1164))) in
        {627}let v_1170: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1169) && success?(is-true(success?(1-proj-3-tuple(v_1169))))) then symmetricstatepack(1-proj-3-tuple(v_1169),2-proj-3-tuple(v_1169),hash(3-proj-3-tuple(v_1169),v_1168)) else fail-any) else fail-any)) in
        {628}let v_1171: bitstring = catch-fail(symmetricstateunpack(v_1170)) in
        {629}let v_1172: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1171),getpublickey(v_1167))) in
        {630}let v_1173: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1171),getpublickey(v_1167))) in
        {631}let v_1174: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1171),getpublickey(v_1167))) in
        {632}let v_1175: bitstring = catch-fail((if (success?(getpublickey(v_1167)) && success?(2-proj-3-tuple(v_1171))) then (if not-caught-fail(v_1172) then (if not-caught-fail(v_1173) then (if not-caught-fail(v_1174) then (v_1172,v_1173,v_1174) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {633}let v_1176: symmetricstate = catch-fail((if success?(getpublickey(v_1167)) then (if (not-caught-fail(v_1171) && success?(is-true(success?(1-proj-3-tuple(v_1171))))) then (if (not-caught-fail(v_1175) && success?(is-true(success?(1-proj-3-tuple(v_1175))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1175)) then cipherstatepack(2-proj-3-tuple(v_1175),minnonce) else fail-any),1-proj-3-tuple(v_1175),3-proj-3-tuple(v_1171)) else fail-any) else fail-any) else fail-any)) in
        {634}let v_1177: bitstring = catch-fail(keypairunpack(v_1167)) in
        {635}let v_1178: bitstring = catch-fail(symmetricstateunpack(v_1176)) in
        {636}let v_1179: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1178),(if success?(5-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then dhexp(2-proj-2-tuple(v_1177),5-proj-7-tuple(v_1164)) else fail-any) else fail-any))) in
        {637}let v_1180: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1178),(if success?(5-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then dhexp(2-proj-2-tuple(v_1177),5-proj-7-tuple(v_1164)) else fail-any) else fail-any))) in
        {638}let v_1181: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1178),(if success?(5-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then dhexp(2-proj-2-tuple(v_1177),5-proj-7-tuple(v_1164)) else fail-any) else fail-any))) in
        {639}let v_1182: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then dhexp(2-proj-2-tuple(v_1177),5-proj-7-tuple(v_1164)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1178))) then (if not-caught-fail(v_1179) then (if not-caught-fail(v_1180) then (if not-caught-fail(v_1181) then (v_1179,v_1180,v_1181) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {640}let v_1183: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1164)) then (if (not-caught-fail(v_1177) && success?(is-true(success?(1-proj-2-tuple(v_1177))))) then dhexp(2-proj-2-tuple(v_1177),5-proj-7-tuple(v_1164)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1178) && success?(is-true(success?(1-proj-3-tuple(v_1178))))) then (if (not-caught-fail(v_1182) && success?(is-true(success?(1-proj-3-tuple(v_1182))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1182)) then cipherstatepack(2-proj-3-tuple(v_1182),minnonce) else fail-any),1-proj-3-tuple(v_1182),3-proj-3-tuple(v_1178)) else fail-any) else fail-any) else fail-any)) in
        {641}let v_1184: bitstring = catch-fail(symmetricstateunpack(v_1183)) in
        {642}let v_1185: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1184))) in
        {643}let v_1186: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1185),2-proj-2-tuple(v_1185),3-proj-3-tuple(v_1184),msg_b(bob,charlie,sid))) in
        {644}let v_1187: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1184))) in
        {645}let v_1188: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1185))) && success?(1-proj-3-tuple(v_1184))) then (if (not-caught-fail(v_1187) && success?(is-true(success?(1-proj-2-tuple(v_1187))))) then cipherstatepack(1-proj-2-tuple(v_1187),increment_nonce(2-proj-2-tuple(v_1185))) else fail-any) else fail-any)) in
        {646}let v_1189: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1184)) && success?(1-proj-3-tuple(v_1184))) then (if (not-caught-fail(v_1185) && success?(is-true(success?(1-proj-2-tuple(v_1185))))) then (if not-caught-fail(v_1186) then (if not-caught-fail(v_1188) then (v_1188,v_1186) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {647}let v_1190: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1189),2-proj-3-tuple(v_1184),3-proj-3-tuple(v_1184)))) in
        {648}let v_1191: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1189)) && success?(symmetricstatepack(1-proj-2-tuple(v_1189),2-proj-3-tuple(v_1184),3-proj-3-tuple(v_1184)))) then (if (not-caught-fail(v_1190) && success?(is-true(success?(1-proj-3-tuple(v_1190))))) then symmetricstatepack(1-proj-3-tuple(v_1190),2-proj-3-tuple(v_1190),hash(3-proj-3-tuple(v_1190),2-proj-2-tuple(v_1189))) else fail-any) else fail-any)) in
        {649}let v_1192: bitstring = catch-fail((if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-3-tuple(v_1184))))) then (if (not-caught-fail(v_1189) && success?(is-true(success?(1-proj-2-tuple(v_1189))))) then (if not-caught-fail(v_1191) then (v_1191,2-proj-2-tuple(v_1189)) else fail-any) else fail-any) else fail-any)) in
        {650}let v_1193: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1192),2-proj-7-tuple(v_1164),v_1167,4-proj-7-tuple(v_1164),5-proj-7-tuple(v_1164),6-proj-7-tuple(v_1164),7-proj-7-tuple(v_1164))) in
        {651}let v_1194: bitstring = catch-fail(concat3(v_1168,2-proj-3-tuple(v_1165),2-proj-2-tuple(v_1192))) in
        {652}let (hs_1195: handshakestate,message_b_1196: bitstring) = (if (not-caught-fail(v_1164) && success?(is-true(success?(1-proj-7-tuple(v_1164))))) then (if (not-caught-fail(v_1165) && success?(is-true(success?(1-proj-3-tuple(v_1165))))) then (if not-caught-fail(v_1167) then (if not-caught-fail(v_1168) then (if not-caught-fail(v_1170) then (if not-caught-fail(v_1176) then (if not-caught-fail(v_1183) then (if (not-caught-fail(v_1192) && success?(is-true(success?(1-proj-2-tuple(v_1192))))) then (if not-caught-fail(v_1193) then (if not-caught-fail(v_1194) then (v_1193,v_1194) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {653}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {654}insert statestore(bob,charlie,sid,statepack_c(hs_1195));
        {655}out(pub, message_b_1196)
    ) | (
        {710}get statestore(=bob,=charlie,=sid,statepack_c(hs_1197: handshakestate)) in
        {657}in(pub, message_c_1198: bitstring);
        {658}let v_1199: bitstring = catch-fail(handshakestateunpack(hs_1197)) in
        {659}let v_1200: bitstring = catch-fail(deconcat3(message_c_1198)) in
        {660}let v_1201: bool = catch-fail(true) in
        {661}let v_1202: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1199))) in
        {662}let v_1203: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1202))) in
        {663}let v_1204: aead = catch-fail(decrypt(1-proj-2-tuple(v_1203),2-proj-2-tuple(v_1203),3-proj-3-tuple(v_1202),2-proj-3-tuple(v_1200))) in
        {664}let v_1205: bitstring = catch-fail(aeadunpack(v_1204)) in
        {665}let v_1206: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1202))) in
        {666}let v_1207: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1203))) && success?(1-proj-3-tuple(v_1202))) then (if (not-caught-fail(v_1206) && success?(is-true(success?(1-proj-2-tuple(v_1206))))) then cipherstatepack(1-proj-2-tuple(v_1206),increment_nonce(2-proj-2-tuple(v_1203))) else fail-any) else fail-any)) in
        {667}let v_1208: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1200)) && (success?(3-proj-3-tuple(v_1202)) && success?(1-proj-3-tuple(v_1202)))) then (if (not-caught-fail(v_1203) && success?(is-true(success?(1-proj-2-tuple(v_1203))))) then (if not-caught-fail(v_1204) then (if (not-caught-fail(v_1205) && success?(is-true(success?(1-proj-3-tuple(v_1205))))) then (if not-caught-fail(v_1207) then (v_1207,3-proj-3-tuple(v_1205),1-proj-3-tuple(v_1205)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {668}let v_1209: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1208),2-proj-3-tuple(v_1202),3-proj-3-tuple(v_1202)))) in
        {669}let v_1210: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1200)) && success?(symmetricstatepack(1-proj-3-tuple(v_1208),2-proj-3-tuple(v_1202),3-proj-3-tuple(v_1202)))) then (if (not-caught-fail(v_1209) && success?(is-true(success?(1-proj-3-tuple(v_1209))))) then symmetricstatepack(1-proj-3-tuple(v_1209),2-proj-3-tuple(v_1209),hash(3-proj-3-tuple(v_1209),2-proj-3-tuple(v_1200))) else fail-any) else fail-any)) in
        {670}let v_1211: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1200)) && success?(1-proj-7-tuple(v_1199))) then (if (not-caught-fail(v_1202) && success?(is-true(success?(1-proj-3-tuple(v_1202))))) then (if (not-caught-fail(v_1208) && success?(is-true(success?(1-proj-3-tuple(v_1208))))) then (if not-caught-fail(v_1210) then (v_1210,2-proj-3-tuple(v_1208),3-proj-3-tuple(v_1208)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {671}let v_1212: key = catch-fail(2-proj-3-tuple(v_1211)) in
        {672}let v_1213: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1199))) in
        {673}let v_1214: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1211))) in
        {674}let v_1215: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1214),(if success?(3-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then dhexp(2-proj-2-tuple(v_1213),v_1212) else fail-any) else fail-any))) in
        {675}let v_1216: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1214),(if success?(3-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then dhexp(2-proj-2-tuple(v_1213),v_1212) else fail-any) else fail-any))) in
        {676}let v_1217: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1214),(if success?(3-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then dhexp(2-proj-2-tuple(v_1213),v_1212) else fail-any) else fail-any))) in
        {677}let v_1218: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then dhexp(2-proj-2-tuple(v_1213),v_1212) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1214))) then (if not-caught-fail(v_1215) then (if not-caught-fail(v_1216) then (if not-caught-fail(v_1217) then (v_1215,v_1216,v_1217) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {678}let v_1219: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-2-tuple(v_1213))))) then dhexp(2-proj-2-tuple(v_1213),v_1212) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1211))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-3-tuple(v_1214))))) then (if (not-caught-fail(v_1218) && success?(is-true(success?(1-proj-3-tuple(v_1218))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1218)) then cipherstatepack(2-proj-3-tuple(v_1218),minnonce) else fail-any),1-proj-3-tuple(v_1218),3-proj-3-tuple(v_1214)) else fail-any) else fail-any) else fail-any)) in
        {679}let v_1220: bitstring = catch-fail(symmetricstateunpack(v_1219)) in
        {680}let v_1221: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1220),6-proj-7-tuple(v_1199))) in
        {681}let v_1222: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1220),6-proj-7-tuple(v_1199))) in
        {682}let v_1223: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1220),6-proj-7-tuple(v_1199))) in
        {683}let v_1224: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1199)) && success?(2-proj-3-tuple(v_1220))) then (if not-caught-fail(v_1221) then (if not-caught-fail(v_1222) then (if not-caught-fail(v_1223) then (v_1221,v_1222,v_1223) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {684}let v_1225: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1220),1-proj-3-tuple(v_1224),3-proj-3-tuple(v_1220)))) in
        {685}let v_1226: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1224)) && success?(symmetricstatepack(1-proj-3-tuple(v_1220),1-proj-3-tuple(v_1224),3-proj-3-tuple(v_1220)))) then (if (not-caught-fail(v_1225) && success?(is-true(success?(1-proj-3-tuple(v_1225))))) then symmetricstatepack(1-proj-3-tuple(v_1225),2-proj-3-tuple(v_1225),hash(3-proj-3-tuple(v_1225),2-proj-3-tuple(v_1224))) else fail-any) else fail-any))) in
        {686}let v_1227: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1199)) then (if (not-caught-fail(v_1220) && success?(is-true(success?(1-proj-3-tuple(v_1220))))) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-3-tuple(v_1224))))) then (if (not-caught-fail(v_1226) && success?(is-true(success?(1-proj-3-tuple(v_1226))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1224)) then cipherstatepack(3-proj-3-tuple(v_1224),minnonce) else fail-any),1-proj-3-tuple(v_1224),3-proj-3-tuple(v_1226)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {687}let v_1228: bitstring = catch-fail(symmetricstateunpack(v_1227)) in
        {688}let v_1229: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1228))) in
        {689}let v_1230: aead = catch-fail(decrypt(1-proj-2-tuple(v_1229),2-proj-2-tuple(v_1229),3-proj-3-tuple(v_1228),3-proj-3-tuple(v_1200))) in
        {690}let v_1231: bitstring = catch-fail(aeadunpack(v_1230)) in
        {691}let v_1232: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1228))) in
        {692}let v_1233: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1229))) && success?(1-proj-3-tuple(v_1228))) then (if (not-caught-fail(v_1232) && success?(is-true(success?(1-proj-2-tuple(v_1232))))) then cipherstatepack(1-proj-2-tuple(v_1232),increment_nonce(2-proj-2-tuple(v_1229))) else fail-any) else fail-any)) in
        {693}let v_1234: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1200)) && (success?(3-proj-3-tuple(v_1228)) && success?(1-proj-3-tuple(v_1228)))) then (if (not-caught-fail(v_1229) && success?(is-true(success?(1-proj-2-tuple(v_1229))))) then (if not-caught-fail(v_1230) then (if (not-caught-fail(v_1231) && success?(is-true(success?(1-proj-3-tuple(v_1231))))) then (if not-caught-fail(v_1233) then (v_1233,3-proj-3-tuple(v_1231),1-proj-3-tuple(v_1231)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {694}let v_1235: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1234),2-proj-3-tuple(v_1228),3-proj-3-tuple(v_1228)))) in
        {695}let v_1236: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1200)) && success?(symmetricstatepack(1-proj-3-tuple(v_1234),2-proj-3-tuple(v_1228),3-proj-3-tuple(v_1228)))) then (if (not-caught-fail(v_1235) && success?(is-true(success?(1-proj-3-tuple(v_1235))))) then symmetricstatepack(1-proj-3-tuple(v_1235),2-proj-3-tuple(v_1235),hash(3-proj-3-tuple(v_1235),3-proj-3-tuple(v_1200))) else fail-any) else fail-any)) in
        {696}let v_1237: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1200)) then (if (not-caught-fail(v_1228) && success?(is-true(success?(1-proj-3-tuple(v_1228))))) then (if (not-caught-fail(v_1234) && success?(is-true(success?(1-proj-3-tuple(v_1234))))) then (if not-caught-fail(v_1236) then (v_1236,2-proj-3-tuple(v_1234),3-proj-3-tuple(v_1234)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {697}let v_1238: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {698}let v_1239: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1237),2-proj-7-tuple(v_1199),3-proj-7-tuple(v_1199),v_1212,5-proj-7-tuple(v_1199),6-proj-7-tuple(v_1199),7-proj-7-tuple(v_1199))) in
        {699}let v_1240: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1237))) in
        {700}let v_1241: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1240),zero)) in
        {701}let v_1242: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1240),zero)) in
        {702}let v_1243: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1240),zero)) in
        {703}let v_1244: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1240)) then (if not-caught-fail(v_1241) then (if not-caught-fail(v_1242) then (if not-caught-fail(v_1243) then (v_1241,v_1242,v_1243) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {704}let v_1245: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1244)) then cipherstatepack(1-proj-3-tuple(v_1244),minnonce) else fail-any)) in
        {705}let v_1246: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1244)) then cipherstatepack(2-proj-3-tuple(v_1244),minnonce) else fail-any)) in
        {706}let v_1247: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1237)) then (if (not-caught-fail(v_1240) && success?(is-true(success?(1-proj-3-tuple(v_1240))))) then (if (not-caught-fail(v_1244) && success?(is-true(success?(1-proj-3-tuple(v_1244))))) then (if not-caught-fail(v_1245) then (if not-caught-fail(v_1246) then (1-proj-3-tuple(v_1237),v_1245,v_1246) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {707}let (hs_1248: handshakestate,plaintext_c_1249: bitstring,valid_1250: bool,cs1_1251: cipherstate,cs2_1252: cipherstate) = (if (not-caught-fail(v_1199) && success?(is-true(success?(1-proj-7-tuple(v_1199))))) then (if (not-caught-fail(v_1200) && success?(is-true(success?(1-proj-3-tuple(v_1200))))) then (if not-caught-fail(v_1201) then (if (not-caught-fail(v_1211) && success?(is-true(success?(1-proj-3-tuple(v_1211))))) then (if not-caught-fail(v_1212) then (if not-caught-fail(v_1219) then (if not-caught-fail(v_1227) then (if (not-caught-fail(v_1237) && success?(is-true(success?(1-proj-3-tuple(v_1237))))) then (if ((3-proj-3-tuple(v_1211) && 3-proj-3-tuple(v_1237)) && (v_1212 = getpublickey((if not-caught-fail(v_1238) then keypairpack(validkey(v_1238),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1239) then (if (not-caught-fail(v_1247) && success?(is-true(success?(1-proj-3-tuple(v_1247))))) then (v_1239,2-proj-3-tuple(v_1237),true,2-proj-3-tuple(v_1247),3-proj-3-tuple(v_1247)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {708}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1249);
        {709}insert statestore(bob,charlie,sid,statepack_d(hs_1248,cs1_1251,cs2_1252))
    ) | (
        {711}!
        {730}get statestore(=bob,=charlie,=sid,statepack_d(hs_1253: handshakestate,cs1_1254: cipherstate,cs2_1255: cipherstate)) in
        {712}let hs_1256: handshakestate = handshakestatesetcs(hs_1253,cs2_1255) in
        {713}let v_1257: bitstring = catch-fail(handshakestateunpack(hs_1256)) in
        {714}let v_1258: bitstring = catch-fail((empty,empty,empty)) in
        {715}let v_1259: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1257))) in
        {716}let v_1260: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1259))) in
        {717}let v_1261: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1260),2-proj-2-tuple(v_1260),3-proj-3-tuple(v_1259),msg_d(bob,charlie,sid))) in
        {718}let v_1262: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1259))) in
        {719}let v_1263: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1260))) && success?(1-proj-3-tuple(v_1259))) then (if (not-caught-fail(v_1262) && success?(is-true(success?(1-proj-2-tuple(v_1262))))) then cipherstatepack(1-proj-2-tuple(v_1262),increment_nonce(2-proj-2-tuple(v_1260))) else fail-any) else fail-any)) in
        {720}let v_1264: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1259)) && success?(1-proj-3-tuple(v_1259))) then (if (not-caught-fail(v_1260) && success?(is-true(success?(1-proj-2-tuple(v_1260))))) then (if not-caught-fail(v_1261) then (if not-caught-fail(v_1263) then (v_1263,v_1261) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {721}let v_1265: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1264),2-proj-3-tuple(v_1259),3-proj-3-tuple(v_1259)))) in
        {722}let v_1266: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1264)) && success?(symmetricstatepack(1-proj-2-tuple(v_1264),2-proj-3-tuple(v_1259),3-proj-3-tuple(v_1259)))) then (if (not-caught-fail(v_1265) && success?(is-true(success?(1-proj-3-tuple(v_1265))))) then symmetricstatepack(1-proj-3-tuple(v_1265),2-proj-3-tuple(v_1265),hash(3-proj-3-tuple(v_1265),2-proj-2-tuple(v_1264))) else fail-any) else fail-any)) in
        {723}let v_1267: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1257)) then (if (not-caught-fail(v_1259) && success?(is-true(success?(1-proj-3-tuple(v_1259))))) then (if (not-caught-fail(v_1264) && success?(is-true(success?(1-proj-2-tuple(v_1264))))) then (if not-caught-fail(v_1266) then (v_1266,2-proj-2-tuple(v_1264)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {724}let v_1268: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1267),2-proj-7-tuple(v_1257),3-proj-7-tuple(v_1257),4-proj-7-tuple(v_1257),5-proj-7-tuple(v_1257),6-proj-7-tuple(v_1257),7-proj-7-tuple(v_1257))) in
        {725}let v_1269: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1258),2-proj-3-tuple(v_1258),2-proj-2-tuple(v_1267))) in
        {726}let (hs_1270: handshakestate,message_d_1271: bitstring) = (if (not-caught-fail(v_1257) && success?(is-true(success?(1-proj-7-tuple(v_1257))))) then (if (not-caught-fail(v_1258) && success?(is-true(success?(1-proj-3-tuple(v_1258))))) then (if (not-caught-fail(v_1267) && success?(is-true(success?(1-proj-2-tuple(v_1267))))) then (if not-caught-fail(v_1268) then (if not-caught-fail(v_1269) then (v_1268,v_1269) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {727}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {728}insert statestore(bob,charlie,sid,statepack_e(hs_1270,cs1_1254,handshakestategetcs(hs_1270)));
        {729}out(pub, message_d_1271)
    ) | (
        {731}!
        {751}get statestore(=bob,=charlie,=sid,statepack_e(hs_1272: handshakestate,cs1_1273: cipherstate,cs2_1274: cipherstate)) in
        {732}let hs_1275: handshakestate = handshakestatesetcs(hs_1272,cs1_1273) in
        {733}in(pub, message_e_1276: bitstring);
        {734}let v_1277: bitstring = catch-fail(handshakestateunpack(hs_1275)) in
        {735}let v_1278: bitstring = catch-fail(deconcat3(message_e_1276)) in
        {736}let v_1279: bool = catch-fail(true) in
        {737}let v_1280: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1277))) in
        {738}let v_1281: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1280))) in
        {739}let v_1282: aead = catch-fail(decrypt(1-proj-2-tuple(v_1281),2-proj-2-tuple(v_1281),3-proj-3-tuple(v_1280),3-proj-3-tuple(v_1278))) in
        {740}let v_1283: bitstring = catch-fail(aeadunpack(v_1282)) in
        {741}let v_1284: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1280))) in
        {742}let v_1285: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1281))) && success?(1-proj-3-tuple(v_1280))) then (if (not-caught-fail(v_1284) && success?(is-true(success?(1-proj-2-tuple(v_1284))))) then cipherstatepack(1-proj-2-tuple(v_1284),increment_nonce(2-proj-2-tuple(v_1281))) else fail-any) else fail-any)) in
        {743}let v_1286: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1278)) && (success?(3-proj-3-tuple(v_1280)) && success?(1-proj-3-tuple(v_1280)))) then (if (not-caught-fail(v_1281) && success?(is-true(success?(1-proj-2-tuple(v_1281))))) then (if not-caught-fail(v_1282) then (if (not-caught-fail(v_1283) && success?(is-true(success?(1-proj-3-tuple(v_1283))))) then (if not-caught-fail(v_1285) then (v_1285,3-proj-3-tuple(v_1283),1-proj-3-tuple(v_1283)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {744}let v_1287: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1286),2-proj-3-tuple(v_1280),3-proj-3-tuple(v_1280)))) in
        {745}let v_1288: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1278)) && success?(symmetricstatepack(1-proj-3-tuple(v_1286),2-proj-3-tuple(v_1280),3-proj-3-tuple(v_1280)))) then (if (not-caught-fail(v_1287) && success?(is-true(success?(1-proj-3-tuple(v_1287))))) then symmetricstatepack(1-proj-3-tuple(v_1287),2-proj-3-tuple(v_1287),hash(3-proj-3-tuple(v_1287),3-proj-3-tuple(v_1278))) else fail-any) else fail-any)) in
        {746}let v_1289: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1278)) && success?(1-proj-7-tuple(v_1277))) then (if (not-caught-fail(v_1280) && success?(is-true(success?(1-proj-3-tuple(v_1280))))) then (if (not-caught-fail(v_1286) && success?(is-true(success?(1-proj-3-tuple(v_1286))))) then (if not-caught-fail(v_1288) then (v_1288,2-proj-3-tuple(v_1286),3-proj-3-tuple(v_1286)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {747}let v_1290: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1289),2-proj-7-tuple(v_1277),3-proj-7-tuple(v_1277),4-proj-7-tuple(v_1277),5-proj-7-tuple(v_1277),6-proj-7-tuple(v_1277),7-proj-7-tuple(v_1277))) in
        {748}let (hs_1291: handshakestate,plaintext_e_1292: bitstring,valid_1293: bool) = (if (not-caught-fail(v_1277) && success?(is-true(success?(1-proj-7-tuple(v_1277))))) then (if (not-caught-fail(v_1278) && success?(is-true(success?(1-proj-3-tuple(v_1278))))) then (if not-caught-fail(v_1279) then (if (not-caught-fail(v_1289) && success?(is-true(success?(1-proj-3-tuple(v_1289))))) then (if (v_1279 && 3-proj-3-tuple(v_1289)) then (if not-caught-fail(v_1290) then (v_1290,2-proj-3-tuple(v_1289),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {749}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1292);
        {750}event RecvEnd(valid_1293)
    ) | (
        {752}event LeakPsk(phase0,charlie,bob);
        {753}out(pub, key_psk(charlie,bob))
    ) | (
        {754}phase 1;
        {755}event LeakPsk(phase1,charlie,bob);
        {756}out(pub, key_psk(charlie,bob))
    ) | (
        {757}event LeakS(phase0,bob);
        {758}out(pub, key_s(bob))
    ) | (
        {759}phase 1;
        {760}event LeakS(phase1,bob);
        {761}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 133 rules in the queue.
400 rules inserted. The rule base contains 381 rules. 48 rules in the queue.
600 rules inserted. The rule base contains 570 rules. 168 rules in the queue.
800 rules inserted. The rule base contains 759 rules. 204 rules in the queue.
1000 rules inserted. The rule base contains 959 rules. 416 rules in the queue.
1200 rules inserted. The rule base contains 1128 rules. 350 rules in the queue.
1400 rules inserted. The rule base contains 1291 rules. 239 rules in the queue.
1600 rules inserted. The rule base contains 1469 rules. 301 rules in the queue.
1800 rules inserted. The rule base contains 1636 rules. 395 rules in the queue.
2000 rules inserted. The rule base contains 1814 rules. 484 rules in the queue.
2200 rules inserted. The rule base contains 1983 rules. 515 rules in the queue.
2400 rules inserted. The rule base contains 2146 rules. 533 rules in the queue.
2600 rules inserted. The rule base contains 2287 rules. 549 rules in the queue.
2800 rules inserted. The rule base contains 2426 rules. 567 rules in the queue.
3000 rules inserted. The rule base contains 2546 rules. 573 rules in the queue.
3200 rules inserted. The rule base contains 2640 rules. 551 rules in the queue.
3400 rules inserted. The rule base contains 2705 rules. 527 rules in the queue.
3600 rules inserted. The rule base contains 2831 rules. 515 rules in the queue.
3800 rules inserted. The rule base contains 2997 rules. 528 rules in the queue.
4000 rules inserted. The rule base contains 3136 rules. 545 rules in the queue.
4200 rules inserted. The rule base contains 3266 rules. 558 rules in the queue.
4400 rules inserted. The rule base contains 3378 rules. 567 rules in the queue.
4600 rules inserted. The rule base contains 3496 rules. 525 rules in the queue.
4800 rules inserted. The rule base contains 3622 rules. 491 rules in the queue.
5000 rules inserted. The rule base contains 3722 rules. 536 rules in the queue.
5200 rules inserted. The rule base contains 3854 rules. 548 rules in the queue.
5400 rules inserted. The rule base contains 3984 rules. 582 rules in the queue.
5600 rules inserted. The rule base contains 4134 rules. 628 rules in the queue.
5800 rules inserted. The rule base contains 4284 rules. 691 rules in the queue.
6000 rules inserted. The rule base contains 4433 rules. 688 rules in the queue.
6200 rules inserted. The rule base contains 4545 rules. 679 rules in the queue.
6400 rules inserted. The rule base contains 4661 rules. 664 rules in the queue.
6600 rules inserted. The rule base contains 4756 rules. 654 rules in the queue.
6800 rules inserted. The rule base contains 4862 rules. 630 rules in the queue.
7000 rules inserted. The rule base contains 4986 rules. 616 rules in the queue.
7200 rules inserted. The rule base contains 5115 rules. 622 rules in the queue.
7400 rules inserted. The rule base contains 5245 rules. 634 rules in the queue.
7600 rules inserted. The rule base contains 5395 rules. 666 rules in the queue.
7800 rules inserted. The rule base contains 5494 rules. 675 rules in the queue.
8000 rules inserted. The rule base contains 5597 rules. 695 rules in the queue.
8200 rules inserted. The rule base contains 5680 rules. 700 rules in the queue.
8400 rules inserted. The rule base contains 5771 rules. 696 rules in the queue.
8600 rules inserted. The rule base contains 5897 rules. 715 rules in the queue.
8800 rules inserted. The rule base contains 6025 rules. 729 rules in the queue.
9000 rules inserted. The rule base contains 6139 rules. 718 rules in the queue.
9200 rules inserted. The rule base contains 6224 rules. 689 rules in the queue.
9400 rules inserted. The rule base contains 6314 rules. 686 rules in the queue.
9600 rules inserted. The rule base contains 6427 rules. 663 rules in the queue.
9800 rules inserted. The rule base contains 6576 rules. 644 rules in the queue.
10000 rules inserted. The rule base contains 6728 rules. 637 rules in the queue.
10200 rules inserted. The rule base contains 6856 rules. 595 rules in the queue.
10400 rules inserted. The rule base contains 7004 rules. 562 rules in the queue.
10600 rules inserted. The rule base contains 7137 rules. 549 rules in the queue.
10800 rules inserted. The rule base contains 7275 rules. 529 rules in the queue.
11000 rules inserted. The rule base contains 7386 rules. 504 rules in the queue.
11200 rules inserted. The rule base contains 7521 rules. 500 rules in the queue.
11400 rules inserted. The rule base contains 7683 rules. 508 rules in the queue.
11600 rules inserted. The rule base contains 7803 rules. 538 rules in the queue.
11800 rules inserted. The rule base contains 7966 rules. 608 rules in the queue.
12000 rules inserted. The rule base contains 8112 rules. 652 rules in the queue.
12200 rules inserted. The rule base contains 8242 rules. 658 rules in the queue.
12400 rules inserted. The rule base contains 8378 rules. 647 rules in the queue.
12600 rules inserted. The rule base contains 8489 rules. 685 rules in the queue.
12800 rules inserted. The rule base contains 8603 rules. 716 rules in the queue.
13000 rules inserted. The rule base contains 8742 rules. 693 rules in the queue.
13200 rules inserted. The rule base contains 8824 rules. 704 rules in the queue.
13400 rules inserted. The rule base contains 8925 rules. 666 rules in the queue.
13600 rules inserted. The rule base contains 9047 rules. 641 rules in the queue.
13800 rules inserted. The rule base contains 9148 rules. 642 rules in the queue.
14000 rules inserted. The rule base contains 9246 rules. 643 rules in the queue.
14200 rules inserted. The rule base contains 9393 rules. 626 rules in the queue.
14400 rules inserted. The rule base contains 9485 rules. 623 rules in the queue.
14600 rules inserted. The rule base contains 9564 rules. 610 rules in the queue.
14800 rules inserted. The rule base contains 9691 rules. 604 rules in the queue.
15000 rules inserted. The rule base contains 9761 rules. 576 rules in the queue.
15200 rules inserted. The rule base contains 9834 rules. 529 rules in the queue.
15400 rules inserted. The rule base contains 9945 rules. 525 rules in the queue.
15600 rules inserted. The rule base contains 10026 rules. 537 rules in the queue.
15800 rules inserted. The rule base contains 10160 rules. 549 rules in the queue.
16000 rules inserted. The rule base contains 10199 rules. 504 rules in the queue.
16200 rules inserted. The rule base contains 10319 rules. 481 rules in the queue.
16400 rules inserted. The rule base contains 10405 rules. 469 rules in the queue.
16600 rules inserted. The rule base contains 10546 rules. 459 rules in the queue.
16800 rules inserted. The rule base contains 10613 rules. 430 rules in the queue.
17000 rules inserted. The rule base contains 10729 rules. 405 rules in the queue.
17200 rules inserted. The rule base contains 10809 rules. 369 rules in the queue.
17400 rules inserted. The rule base contains 10943 rules. 353 rules in the queue.
17600 rules inserted. The rule base contains 11007 rules. 335 rules in the queue.
17800 rules inserted. The rule base contains 11124 rules. 333 rules in the queue.
18000 rules inserted. The rule base contains 11247 rules. 330 rules in the queue.
18200 rules inserted. The rule base contains 11325 rules. 348 rules in the queue.
18400 rules inserted. The rule base contains 11395 rules. 325 rules in the queue.
18600 rules inserted. The rule base contains 11470 rules. 268 rules in the queue.
18800 rules inserted. The rule base contains 11543 rules. 256 rules in the queue.
19000 rules inserted. The rule base contains 11584 rules. 221 rules in the queue.
19200 rules inserted. The rule base contains 11615 rules. 146 rules in the queue.
19400 rules inserted. The rule base contains 11640 rules. 54 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766337]),msg_a(alice,bob,sid[!1 = @sid_79766337]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766338]),msg_a(alice,bob,sid[!1 = @sid_79766337])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766346]),msg_a(alice,bob,sid[!1 = @sid_79766346]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766347]),msg_a(alice,bob,sid[!1 = @sid_79766346])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766356]),msg_a(alice,bob,sid[!1 = @sid_79766356]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766357]),msg_a(alice,bob,sid[!1 = @sid_79766356])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766366]),msg_a(alice,bob,sid[!1 = @sid_79766366]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766367]),msg_a(alice,bob,sid[!1 = @sid_79766366])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766375]),msg_a(alice,bob,sid[!1 = @sid_79766375]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766376]),msg_a(alice,bob,sid[!1 = @sid_79766375])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766383]),msg_a(alice,bob,sid[!1 = @sid_79766383]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766383]))
Abbreviations:
sid_79766471 = sid[!1 = @sid_79766447]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766471,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766471,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766471,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766471),msg_a(alice,bob,sid_79766471)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766471),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766471),g))),msg_a(alice,bob,sid_79766471)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766471) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766471)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766473]),msg_a(alice,bob,sid[!1 = @sid_79766473]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766473]))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766476]),msg_a(alice,bob,sid[!1 = @sid_79766476]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766476]))
RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766483]),msg_a(alice,bob,sid[!1 = @sid_79766483]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766483]))
Abbreviations:
sid_79766573 = sid[!1 = @sid_79766549]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766573,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766573,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766573,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766573),msg_a(alice,bob,sid_79766573)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766573),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766573),g))),msg_a(alice,bob,sid_79766573)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766573) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766573)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766575]),msg_a(alice,bob,sid[!1 = @sid_79766575]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766575]))
Abbreviations:
sid_79766663 = sid[!1 = @sid_79766639]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766663,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766663,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766663,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766663),msg_a(alice,bob,sid_79766663)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766663),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766663),g))),msg_a(alice,bob,sid_79766663)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766663) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766663)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79766670]),msg_b(bob,charlie,sid[!1 = @sid_79766670]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766671]),msg_a(alice,bob,sid[!1 = @sid_79766671]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766671]),msg_b(bob,charlie,sid[!1 = @sid_79766670])))
Abbreviations:
sid_79766740 = sid[!1 = @sid_79766690]
sid_79766741 = sid[!1 = @sid_79766714]

1. The entry statestore(alice,bob,sid_79766740,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766740,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79766740,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766740),msg_a(alice,bob,sid_79766740)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79766740,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_e(alice,bob,sid_79766740)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79766740,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_e(alice,bob,sid_79766740)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79766741,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79766741,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79766740,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766740),msg_a(alice,bob,sid_79766740)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))).

5. The entry statestore(bob,charlie,sid_79766741,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79766741,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79766741,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79766741,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79766741),msg_b(bob,charlie,sid_79766741)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),dhexp_real(key_e(bob,charlie,sid_79766741),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),msg_b(bob,charlie,sid_79766741))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),dhexp_real(key_e(bob,charlie,sid_79766741),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),msg_b(bob,charlie,sid_79766741)))).

7. The entry statestore(alice,bob,sid_79766740,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766740),g)),key_e(alice,bob,sid_79766740)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),dhexp_real(key_e(bob,charlie,sid_79766741),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766740),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766740),g))),msg_a(alice,bob,sid_79766740))),validkey(dhexp_real(key_e(bob,charlie,sid_79766741),g))),msg_b(bob,charlie,sid_79766741))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79766740),msg_b(bob,charlie,sid_79766741)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79766740),msg_b(bob,charlie,sid_79766741))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766744]),msg_b(bob,alice,sid[!1 = @sid_79766744]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766745]),msg_a(alice,bob,sid[!1 = @sid_79766745]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766745]),msg_b(bob,alice,sid[!1 = @sid_79766744])))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79766748]),msg_b(bob,charlie,sid[!1 = @sid_79766748]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766749]),msg_a(alice,bob,sid[!1 = @sid_79766749]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766749]),msg_b(bob,charlie,sid[!1 = @sid_79766748])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766758]),msg_b(bob,alice,sid[!1 = @sid_79766758]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766759]),msg_a(alice,bob,sid[!1 = @sid_79766759]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766759]),msg_b(bob,alice,sid[!1 = @sid_79766758])))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79766762]),msg_b(bob,charlie,sid[!1 = @sid_79766762]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766763]),msg_a(alice,bob,sid[!1 = @sid_79766763]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766763]),msg_b(bob,charlie,sid[!1 = @sid_79766762])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79766776]),msg_b(bob,charlie,sid[!1 = @sid_79766776]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766777]),msg_a(alice,bob,sid[!1 = @sid_79766777]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766777]),msg_b(bob,charlie,sid[!1 = @sid_79766776])))
Abbreviations:
sid_79766846 = sid[!1 = @sid_79766796]
sid_79766847 = sid[!1 = @sid_79766820]

1. The entry statestore(alice,bob,sid_79766846,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766846,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79766846,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766846),msg_a(alice,bob,sid_79766846)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79766846,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_e(alice,bob,sid_79766846)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79766846,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_e(alice,bob,sid_79766846)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79766847,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79766847,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79766846,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766846),msg_a(alice,bob,sid_79766846)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))).

5. The entry statestore(bob,charlie,sid_79766847,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79766847,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79766847,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79766847,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79766847),msg_b(bob,charlie,sid_79766847)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),dhexp_real(key_e(bob,charlie,sid_79766847),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),msg_b(bob,charlie,sid_79766847))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),dhexp_real(key_e(bob,charlie,sid_79766847),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),msg_b(bob,charlie,sid_79766847)))).

7. The entry statestore(alice,bob,sid_79766846,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766846),g)),key_e(alice,bob,sid_79766846)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),dhexp_real(key_e(bob,charlie,sid_79766847),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766846),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766846),g))),msg_a(alice,bob,sid_79766846))),validkey(dhexp_real(key_e(bob,charlie,sid_79766847),g))),msg_b(bob,charlie,sid_79766847))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79766846),msg_b(bob,charlie,sid_79766847)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79766846),msg_b(bob,charlie,sid_79766847))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79766854]),msg_b(bob,charlie,sid[!1 = @sid_79766854]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766855]),msg_a(alice,bob,sid[!1 = @sid_79766855]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79766855]),msg_b(bob,charlie,sid[!1 = @sid_79766854])))
Abbreviations:
sid_79766924 = sid[!1 = @sid_79766874]
sid_79766925 = sid[!1 = @sid_79766898]

1. The entry statestore(alice,bob,sid_79766924,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766924,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79766924,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766924),msg_a(alice,bob,sid_79766924)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79766924,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_e(alice,bob,sid_79766924)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79766924,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_e(alice,bob,sid_79766924)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79766925,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79766925,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79766924,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766924),msg_a(alice,bob,sid_79766924)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))).

5. The entry statestore(bob,charlie,sid_79766925,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79766925,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79766925,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79766925,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79766925),msg_b(bob,charlie,sid_79766925)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),dhexp_real(key_e(bob,charlie,sid_79766925),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),msg_b(bob,charlie,sid_79766925))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),dhexp_real(key_e(bob,charlie,sid_79766925),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),msg_b(bob,charlie,sid_79766925)))).

7. The entry statestore(alice,bob,sid_79766924,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79766924),g)),key_e(alice,bob,sid_79766924)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),dhexp_real(key_e(bob,charlie,sid_79766925),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766924),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766924),g))),msg_a(alice,bob,sid_79766924))),validkey(dhexp_real(key_e(bob,charlie,sid_79766925),g))),msg_b(bob,charlie,sid_79766925))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79766924),msg_b(bob,charlie,sid_79766925)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79766924),msg_b(bob,charlie,sid_79766925))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79766943]),msg_c(alice,bob,sid[!1 = @sid_79766943]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766944]),msg_b(bob,alice,sid[!1 = @sid_79766944]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766943]),msg_a(alice,bob,sid[!1 = @sid_79766943]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79766944]),msg_c(alice,bob,sid[!1 = @sid_79766943])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79766952]),msg_c(alice,bob,sid[!1 = @sid_79766952]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766953]),msg_b(bob,alice,sid[!1 = @sid_79766953]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766952]),msg_a(alice,bob,sid[!1 = @sid_79766952]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79766953]),msg_c(alice,bob,sid[!1 = @sid_79766952])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79766962]),msg_c(alice,bob,sid[!1 = @sid_79766962]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766963]),msg_b(bob,alice,sid[!1 = @sid_79766963]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766962]),msg_a(alice,bob,sid[!1 = @sid_79766962]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79766963]),msg_c(alice,bob,sid[!1 = @sid_79766962])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79766972]),msg_c(alice,bob,sid[!1 = @sid_79766972]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766973]),msg_b(bob,alice,sid[!1 = @sid_79766973]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766972]),msg_a(alice,bob,sid[!1 = @sid_79766972]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79766973]),msg_c(alice,bob,sid[!1 = @sid_79766972])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79766981]),msg_c(alice,bob,sid[!1 = @sid_79766981]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79766982]),msg_b(bob,alice,sid[!1 = @sid_79766982]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766981]),msg_a(alice,bob,sid[!1 = @sid_79766981]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79766982]),msg_c(alice,bob,sid[!1 = @sid_79766981])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767007]),msg_d(bob,alice,sid[!1 = @sid_79767007]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767008]),msg_c(alice,bob,sid[!1 = @sid_79767008]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767007]),msg_b(bob,alice,sid[!1 = @sid_79767007]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767008]),msg_a(alice,bob,sid[!1 = @sid_79767008]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767008]),msg_d(bob,alice,sid[!1 = @sid_79767007])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767016]),msg_d(bob,alice,sid[!1 = @sid_79767016]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767017]),msg_c(alice,bob,sid[!1 = @sid_79767017]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767016]),msg_b(bob,alice,sid[!1 = @sid_79767016]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767017]),msg_a(alice,bob,sid[!1 = @sid_79767017]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767017]),msg_d(bob,alice,sid[!1 = @sid_79767016])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767026]),msg_d(bob,alice,sid[!1 = @sid_79767026]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767027]),msg_c(alice,bob,sid[!1 = @sid_79767027]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767026]),msg_b(bob,alice,sid[!1 = @sid_79767026]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767027]),msg_a(alice,bob,sid[!1 = @sid_79767027]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767027]),msg_d(bob,alice,sid[!1 = @sid_79767026])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1403,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767036]),msg_d(bob,alice,sid[!1 = @sid_79767036]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767037]),msg_c(alice,bob,sid[!1 = @sid_79767037]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767036]),msg_b(bob,alice,sid[!1 = @sid_79767036]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767037]),msg_a(alice,bob,sid[!1 = @sid_79767037]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767037]),msg_d(bob,alice,sid[!1 = @sid_79767036])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767045]),msg_d(bob,alice,sid[!1 = @sid_79767045]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767046]),msg_c(alice,bob,sid[!1 = @sid_79767046]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767045]),msg_b(bob,alice,sid[!1 = @sid_79767045]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767046]),msg_a(alice,bob,sid[!1 = @sid_79767046]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767046]),msg_d(bob,alice,sid[!1 = @sid_79767045])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767071]),msg_e(alice,bob,sid[!1 = @sid_79767071]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767072]),msg_d(bob,alice,sid[!1 = @sid_79767072]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767071]),msg_c(alice,bob,sid[!1 = @sid_79767071]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767072]),msg_b(bob,alice,sid[!1 = @sid_79767072]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767071]),msg_a(alice,bob,sid[!1 = @sid_79767071]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767072]),msg_e(alice,bob,sid[!1 = @sid_79767071])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767080]),msg_e(alice,bob,sid[!1 = @sid_79767080]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767081]),msg_d(bob,alice,sid[!1 = @sid_79767081]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767080]),msg_c(alice,bob,sid[!1 = @sid_79767080]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767081]),msg_b(bob,alice,sid[!1 = @sid_79767081]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767080]),msg_a(alice,bob,sid[!1 = @sid_79767080]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767081]),msg_e(alice,bob,sid[!1 = @sid_79767080])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767090]),msg_e(alice,bob,sid[!1 = @sid_79767090]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767091]),msg_d(bob,alice,sid[!1 = @sid_79767091]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767090]),msg_c(alice,bob,sid[!1 = @sid_79767090]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767091]),msg_b(bob,alice,sid[!1 = @sid_79767091]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767090]),msg_a(alice,bob,sid[!1 = @sid_79767090]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767091]),msg_e(alice,bob,sid[!1 = @sid_79767090])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1403,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767100]),msg_e(alice,bob,sid[!1 = @sid_79767100]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767101]),msg_d(bob,alice,sid[!1 = @sid_79767101]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767100]),msg_c(alice,bob,sid[!1 = @sid_79767100]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767101]),msg_b(bob,alice,sid[!1 = @sid_79767101]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767100]),msg_a(alice,bob,sid[!1 = @sid_79767100]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767101]),msg_e(alice,bob,sid[!1 = @sid_79767100])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767109]),msg_e(alice,bob,sid[!1 = @sid_79767109]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767110]),msg_d(bob,alice,sid[!1 = @sid_79767110]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767109]),msg_c(alice,bob,sid[!1 = @sid_79767109]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767110]),msg_b(bob,alice,sid[!1 = @sid_79767110]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767109]),msg_a(alice,bob,sid[!1 = @sid_79767109]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767110]),msg_e(alice,bob,sid[!1 = @sid_79767109])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767133]),msg_e(alice,bob,sid[!1 = @sid_79767133]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767134]),msg_d(bob,alice,sid[!1 = @sid_79767134]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767133]),msg_c(alice,bob,sid[!1 = @sid_79767133]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767134]),msg_b(bob,alice,sid[!1 = @sid_79767134]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767133]),msg_a(alice,bob,sid[!1 = @sid_79767133]))) -> end(RecvEnd(true))
Abbreviations:
sid_79767529 = sid[!1 = @sid_79767473]
sid_79767530 = sid[!1 = @sid_79767518]

1. The entry statestore(bob,alice,sid_79767530,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {394}.
table(statestore(bob,alice,sid_79767530,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,bob,sid_79767529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79767529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767529),msg_a(alice,bob,sid_79767529)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))).

4. The entry statestore(bob,alice,sid_79767530,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {429}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))) that may be sent on channel pub by 3 may be received at input {395}.
So the entry statestore(bob,alice,sid_79767530,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {428}.
table(statestore(bob,alice,sid_79767530,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false)))).

5. The entry statestore(bob,alice,sid_79767530,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {465}.
The event SendMsg(bob,alice,stagepack_b(sid_79767530),msg_b(bob,alice,sid_79767530)) may be executed at {462}.
So the entry statestore(bob,alice,sid_79767530,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {463}.
table(statestore(bob,alice,sid_79767530,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false)))).

6. The entry statestore(alice,bob,sid_79767529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767529),msg_a(alice,bob,sid_79767529)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79767529,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79767529,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

7. The entry statestore(bob,alice,sid_79767530,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {465}.
The event SendMsg(bob,alice,stagepack_b(sid_79767530),msg_b(bob,alice,sid_79767530)) may be executed at {462}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))) may be sent on channel pub at output {464}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))).

8. The entry statestore(alice,bob,sid_79767529,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 6 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))) that may be sent on channel pub by 7 may be received at input {55}.
So the entry statestore(alice,bob,sid_79767529,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,sid_79767529,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true)))).

9. The entry statestore(alice,bob,sid_79767529,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {141}.
The event SendMsg(alice,bob,stagepack_c(sid_79767529),msg_c(alice,bob,sid_79767529)) may be executed at {138}.
So the message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))) may be sent on channel pub at output {140}.
mess(pub,concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))).

10. The entry statestore(bob,alice,sid_79767530,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {519}.
The message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))) that may be sent on channel pub by 9 may be received at input {466}.
So the entry statestore(bob,alice,sid_79767530,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {518}.
table(statestore(bob,alice,sid_79767530,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_79767530,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {539}.
The event SendMsg(bob,alice,stagepack_d(sid_79767530),msg_d(bob,alice,sid_79767530)) may be executed at {536}.
So the entry statestore(bob,alice,sid_79767530,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {537}.
table(statestore(bob,alice,sid_79767530,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_79767529,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {141}.
The event SendMsg(alice,bob,stagepack_c(sid_79767529),msg_c(alice,bob,sid_79767529)) may be executed at {138}.
So the entry statestore(alice,bob,sid_79767529,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {139}.
table(statestore(alice,bob,sid_79767529,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_79767530,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {539}.
The event SendMsg(bob,alice,stagepack_d(sid_79767530),msg_d(bob,alice,sid_79767530)) may be executed at {536}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530))) may be sent on channel pub at output {538}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))).

14. The entry statestore(alice,bob,sid_79767529,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 12 may be read at get {162}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530))) that may be sent on channel pub by 13 may be received at input {144}.
So the entry statestore(alice,bob,sid_79767529,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {161}.
table(statestore(alice,bob,sid_79767529,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_79767529,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_e(alice,bob,sid_79767529)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {181}.
The event SendMsg(alice,bob,stagepack_e(sid_79767529),msg_e(alice,bob,sid_79767529)) may be executed at {179}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530))),msg_e(alice,bob,sid_79767529))) may be sent on channel pub at output {180}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530))),msg_e(alice,bob,sid_79767529)))).

16. The entry statestore(bob,alice,sid_79767530,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767530),g)),key_e(bob,alice,sid_79767530)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {560}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(bob,alice,sid_79767530),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),msg_a(alice,bob,sid_79767529))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),msg_b(bob,alice,sid_79767530))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767529),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767529),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_e(alice,bob,sid_79767529),dhexp_real(key_e(bob,alice,sid_79767530),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767530),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767529))),msg_d(bob,alice,sid_79767530))),msg_e(alice,bob,sid_79767529))) that may be sent on channel pub by 15 may be received at input {542}.
So event RecvEnd(true) may be executed at {559}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
