File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 270, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 274, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 274, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 275, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 282, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 287, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 287, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 288, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 295, character 6:
Warning: identifier s rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 26-27:
Warning: identifier ns rebound.
File "XNpsk3.noise.passive.pv", line 297, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 298, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 299, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 299, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 300, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 325, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 326, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 327, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 328, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 330, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 338, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 342, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 344, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 26-27:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 40-45:
Warning: identifier valid1 rebound.
File "XNpsk3.noise.passive.pv", line 353, characters 6-7:
Warning: identifier rs rebound.
File "XNpsk3.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 355, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 358, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 367, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 369, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 377, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 379, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 563, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 564, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 555, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 557, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 367, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 369, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 549, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 295, character 6:
Warning: identifier s rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 26-27:
Warning: identifier ns rebound.
File "XNpsk3.noise.passive.pv", line 297, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 298, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 299, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 299, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 300, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 543, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 338, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 342, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 344, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 536, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 270, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 271, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 274, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 274, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 275, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 622, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 624, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 377, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 379, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 615, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 616, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 609, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 26-27:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 40-45:
Warning: identifier valid1 rebound.
File "XNpsk3.noise.passive.pv", line 353, characters 6-7:
Warning: identifier rs rebound.
File "XNpsk3.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 355, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 358, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 230, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 231, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 231, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 602, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 282, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 287, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 287, characters 26-35:
Warning: identifier ciphertext rebound.
File "XNpsk3.noise.passive.pv", line 288, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 596, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 325, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 326, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 327, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 328, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 330, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 221, characters 7-8:
Warning: identifier ck rebound.
Linear part:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Completing equations...
Completed equations:
dhexp_real(b_65,dhexp_real(a_64,g)) = dhexp_real(a_64,dhexp_real(b_65,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_576: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_576));
    (
        {6}let e_577: keypair = keypairpack(empty,empty) in
        {7}let rs_578: key = empty in
        {8}let re_579: key = empty in
        {9}let v_580: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_581: key = catch-fail(v_580) in
        {11}let v_582: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_583: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_580) then (if not-caught-fail(v_581) then (if not-caught-fail(v_582) then symmetricstatepack(v_582,v_581,v_580) else fail-any) else fail-any) else fail-any))) in
        {13}let v_584: symmetricstate = catch-fail((if success?((if not-caught-fail(v_580) then (if not-caught-fail(v_581) then (if not-caught-fail(v_582) then symmetricstatepack(v_582,v_581,v_580) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_583) && success?(is-true(success?(1-proj-3-tuple(v_583))))) then symmetricstatepack(1-proj-3-tuple(v_583),2-proj-3-tuple(v_583),hash(3-proj-3-tuple(v_583),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_584) then handshakestatepack(v_584,s_576,e_577,rs_578,re_579,key_psk(alice,bob),true) else fail-any) in
        {15}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {44}get statestore(=alice,=bob,=sid,statepack_a(hs_585: handshakestate)) in
        {16}let v_586: bitstring = catch-fail(handshakestateunpack(hs_585)) in
        {17}let v_587: bitstring = catch-fail((empty,empty,empty)) in
        {18}let v_588: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {19}let v_589: keypair = catch-fail((if not-caught-fail(v_588) then keypairpack(validkey(v_588),key_e(alice,bob,sid)) else fail-any)) in
        {20}let v_590: bitstring = catch-fail(getpublickey(v_589)) in
        {21}let v_591: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_586))) in
        {22}let v_592: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_586)) then (if (not-caught-fail(v_591) && success?(is-true(success?(1-proj-3-tuple(v_591))))) then symmetricstatepack(1-proj-3-tuple(v_591),2-proj-3-tuple(v_591),hash(3-proj-3-tuple(v_591),v_590)) else fail-any) else fail-any)) in
        {23}let v_593: bitstring = catch-fail(symmetricstateunpack(v_592)) in
        {24}let v_594: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_593),getpublickey(v_589))) in
        {25}let v_595: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_593),getpublickey(v_589))) in
        {26}let v_596: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_593),getpublickey(v_589))) in
        {27}let v_597: bitstring = catch-fail((if (success?(getpublickey(v_589)) && success?(2-proj-3-tuple(v_593))) then (if not-caught-fail(v_594) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (v_594,v_595,v_596) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {28}let v_598: symmetricstate = catch-fail((if success?(getpublickey(v_589)) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-3-tuple(v_593))))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-3-tuple(v_597))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_597)) then cipherstatepack(2-proj-3-tuple(v_597),minnonce) else fail-any),1-proj-3-tuple(v_597),3-proj-3-tuple(v_593)) else fail-any) else fail-any) else fail-any)) in
        {29}let v_599: bitstring = catch-fail(symmetricstateunpack(v_598)) in
        {30}let v_600: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_599))) in
        {31}let v_601: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_600),2-proj-2-tuple(v_600),3-proj-3-tuple(v_599),msg_a(alice,bob,sid))) in
        {32}let v_602: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_599))) in
        {33}let v_603: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_600))) && success?(1-proj-3-tuple(v_599))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then cipherstatepack(1-proj-2-tuple(v_602),increment_nonce(2-proj-2-tuple(v_600))) else fail-any) else fail-any)) in
        {34}let v_604: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_599)) && success?(1-proj-3-tuple(v_599))) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-2-tuple(v_600))))) then (if not-caught-fail(v_601) then (if not-caught-fail(v_603) then (v_603,v_601) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {35}let v_605: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_604),2-proj-3-tuple(v_599),3-proj-3-tuple(v_599)))) in
        {36}let v_606: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_604)) && success?(symmetricstatepack(1-proj-2-tuple(v_604),2-proj-3-tuple(v_599),3-proj-3-tuple(v_599)))) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then symmetricstatepack(1-proj-3-tuple(v_605),2-proj-3-tuple(v_605),hash(3-proj-3-tuple(v_605),2-proj-2-tuple(v_604))) else fail-any) else fail-any)) in
        {37}let v_607: bitstring = catch-fail((if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-2-tuple(v_604))))) then (if not-caught-fail(v_606) then (v_606,2-proj-2-tuple(v_604)) else fail-any) else fail-any) else fail-any)) in
        {38}let v_608: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_607),2-proj-7-tuple(v_586),v_589,4-proj-7-tuple(v_586),5-proj-7-tuple(v_586),6-proj-7-tuple(v_586),7-proj-7-tuple(v_586))) in
        {39}let v_609: bitstring = catch-fail(concat3(v_590,2-proj-3-tuple(v_587),2-proj-2-tuple(v_607))) in
        {40}let (hs_610: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_586) && success?(is-true(success?(1-proj-7-tuple(v_586))))) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-3-tuple(v_587))))) then (if not-caught-fail(v_589) then (if not-caught-fail(v_590) then (if not-caught-fail(v_592) then (if not-caught-fail(v_598) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-2-tuple(v_607))))) then (if not-caught-fail(v_608) then (if not-caught-fail(v_609) then (v_608,v_609) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {41}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {42}insert statestore(alice,bob,sid,statepack_b(hs_610));
        {43}out(pub, message_a)
    ) | (
        {79}get statestore(=alice,=bob,=sid,statepack_b(hs_611: handshakestate)) in
        {45}in(pub, message_b: bitstring);
        {46}let v_612: bitstring = catch-fail(handshakestateunpack(hs_611)) in
        {47}let v_613: bitstring = catch-fail(deconcat3(message_b)) in
        {48}let v_614: bool = catch-fail(true) in
        {49}let v_615: key = catch-fail(1-proj-3-tuple(v_613)) in
        {50}let v_616: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_612))) in
        {51}let v_617: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_612)) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-3-tuple(v_616))))) then symmetricstatepack(1-proj-3-tuple(v_616),2-proj-3-tuple(v_616),hash(3-proj-3-tuple(v_616),v_615)) else fail-any) else fail-any)) in
        {52}let v_618: bitstring = catch-fail(symmetricstateunpack(v_617)) in
        {53}let v_619: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_618),v_615)) in
        {54}let v_620: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_618),v_615)) in
        {55}let v_621: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_618),v_615)) in
        {56}let v_622: bitstring = catch-fail((if success?(2-proj-3-tuple(v_618)) then (if not-caught-fail(v_619) then (if not-caught-fail(v_620) then (if not-caught-fail(v_621) then (v_619,v_620,v_621) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {57}let v_623: symmetricstate = catch-fail((if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-3-tuple(v_622))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_622)) then cipherstatepack(2-proj-3-tuple(v_622),minnonce) else fail-any),1-proj-3-tuple(v_622),3-proj-3-tuple(v_618)) else fail-any) else fail-any)) in
        {58}let v_624: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_612))) in
        {59}let v_625: bitstring = catch-fail(symmetricstateunpack(v_623)) in
        {60}let v_626: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_625),(if success?(3-proj-7-tuple(v_612)) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then dhexp(2-proj-2-tuple(v_624),v_615) else fail-any) else fail-any))) in
        {61}let v_627: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_625),(if success?(3-proj-7-tuple(v_612)) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then dhexp(2-proj-2-tuple(v_624),v_615) else fail-any) else fail-any))) in
        {62}let v_628: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_625),(if success?(3-proj-7-tuple(v_612)) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then dhexp(2-proj-2-tuple(v_624),v_615) else fail-any) else fail-any))) in
        {63}let v_629: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_612)) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then dhexp(2-proj-2-tuple(v_624),v_615) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_625))) then (if not-caught-fail(v_626) then (if not-caught-fail(v_627) then (if not-caught-fail(v_628) then (v_626,v_627,v_628) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {64}let v_630: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_612)) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then dhexp(2-proj-2-tuple(v_624),v_615) else fail-any) else fail-any)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-3-tuple(v_629))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_629)) then cipherstatepack(2-proj-3-tuple(v_629),minnonce) else fail-any),1-proj-3-tuple(v_629),3-proj-3-tuple(v_625)) else fail-any) else fail-any) else fail-any)) in
        {65}let v_631: bitstring = catch-fail(symmetricstateunpack(v_630)) in
        {66}let v_632: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_631))) in
        {67}let v_633: aead = catch-fail(decrypt(1-proj-2-tuple(v_632),2-proj-2-tuple(v_632),3-proj-3-tuple(v_631),3-proj-3-tuple(v_613))) in
        {68}let v_634: bitstring = catch-fail(aeadunpack(v_633)) in
        {69}let v_635: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_631))) in
        {70}let v_636: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_632))) && success?(1-proj-3-tuple(v_631))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then cipherstatepack(1-proj-2-tuple(v_635),increment_nonce(2-proj-2-tuple(v_632))) else fail-any) else fail-any)) in
        {71}let v_637: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_613)) && (success?(3-proj-3-tuple(v_631)) && success?(1-proj-3-tuple(v_631)))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-2-tuple(v_632))))) then (if not-caught-fail(v_633) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if not-caught-fail(v_636) then (v_636,3-proj-3-tuple(v_634),1-proj-3-tuple(v_634)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {72}let v_638: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_637),2-proj-3-tuple(v_631),3-proj-3-tuple(v_631)))) in
        {73}let v_639: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_613)) && success?(symmetricstatepack(1-proj-3-tuple(v_637),2-proj-3-tuple(v_631),3-proj-3-tuple(v_631)))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then symmetricstatepack(1-proj-3-tuple(v_638),2-proj-3-tuple(v_638),hash(3-proj-3-tuple(v_638),3-proj-3-tuple(v_613))) else fail-any) else fail-any)) in
        {74}let v_640: bitstring = catch-fail((if success?(3-proj-3-tuple(v_613)) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-3-tuple(v_637))))) then (if not-caught-fail(v_639) then (v_639,2-proj-3-tuple(v_637),3-proj-3-tuple(v_637)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {75}let v_641: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_640),2-proj-7-tuple(v_612),3-proj-7-tuple(v_612),4-proj-7-tuple(v_612),v_615,6-proj-7-tuple(v_612),7-proj-7-tuple(v_612))) in
        {76}let (hs_642: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-7-tuple(v_612))))) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-3-tuple(v_613))))) then (if not-caught-fail(v_614) then (if not-caught-fail(v_615) then (if not-caught-fail(v_617) then (if not-caught-fail(v_623) then (if not-caught-fail(v_630) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-3-tuple(v_640))))) then (if (v_614 && 3-proj-3-tuple(v_640)) then (if not-caught-fail(v_641) then (v_641,2-proj-3-tuple(v_640),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {77}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {78}insert statestore(alice,bob,sid,statepack_c(hs_642))
    ) | (
        {131}get statestore(=alice,=bob,=sid,statepack_c(hs_643: handshakestate)) in
        {80}let v_644: bitstring = catch-fail(handshakestateunpack(hs_643)) in
        {81}let v_645: bitstring = catch-fail((empty,empty,empty)) in
        {82}let v_646: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {83}let v_647: keypair = catch-fail((if not-caught-fail(v_646) then keypairpack(validkey(v_646),key_s(alice)) else fail-any)) in
        {84}let v_648: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_644))) in
        {85}let v_649: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_648))) in
        {86}let v_650: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_649),2-proj-2-tuple(v_649),3-proj-3-tuple(v_648),getpublickey(v_647))) in
        {87}let v_651: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_648))) in
        {88}let v_652: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_649))) && success?(1-proj-3-tuple(v_648))) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-2-tuple(v_651))))) then cipherstatepack(1-proj-2-tuple(v_651),increment_nonce(2-proj-2-tuple(v_649))) else fail-any) else fail-any)) in
        {89}let v_653: bitstring = catch-fail((if (success?(getpublickey(v_647)) && (success?(3-proj-3-tuple(v_648)) && success?(1-proj-3-tuple(v_648)))) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-2-tuple(v_649))))) then (if not-caught-fail(v_650) then (if not-caught-fail(v_652) then (v_652,v_650) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_654: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_653),2-proj-3-tuple(v_648),3-proj-3-tuple(v_648)))) in
        {91}let v_655: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_653)) && success?(symmetricstatepack(1-proj-2-tuple(v_653),2-proj-3-tuple(v_648),3-proj-3-tuple(v_648)))) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then symmetricstatepack(1-proj-3-tuple(v_654),2-proj-3-tuple(v_654),hash(3-proj-3-tuple(v_654),2-proj-2-tuple(v_653))) else fail-any) else fail-any)) in
        {92}let v_656: bitstring = catch-fail((if (success?(getpublickey(v_647)) && success?(1-proj-7-tuple(v_644))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then (if not-caught-fail(v_655) then (v_655,2-proj-2-tuple(v_653)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {93}let v_657: bitstring = catch-fail(keypairunpack(v_647)) in
        {94}let v_658: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_656))) in
        {95}let v_659: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_658),(if success?(5-proj-7-tuple(v_644)) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then dhexp(2-proj-2-tuple(v_657),5-proj-7-tuple(v_644)) else fail-any) else fail-any))) in
        {96}let v_660: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_658),(if success?(5-proj-7-tuple(v_644)) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then dhexp(2-proj-2-tuple(v_657),5-proj-7-tuple(v_644)) else fail-any) else fail-any))) in
        {97}let v_661: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_658),(if success?(5-proj-7-tuple(v_644)) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then dhexp(2-proj-2-tuple(v_657),5-proj-7-tuple(v_644)) else fail-any) else fail-any))) in
        {98}let v_662: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_644)) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then dhexp(2-proj-2-tuple(v_657),5-proj-7-tuple(v_644)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_658))) then (if not-caught-fail(v_659) then (if not-caught-fail(v_660) then (if not-caught-fail(v_661) then (v_659,v_660,v_661) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {99}let v_663: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_644)) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then dhexp(2-proj-2-tuple(v_657),5-proj-7-tuple(v_644)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_656))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_662)) then cipherstatepack(2-proj-3-tuple(v_662),minnonce) else fail-any),1-proj-3-tuple(v_662),3-proj-3-tuple(v_658)) else fail-any) else fail-any) else fail-any)) in
        {100}let v_664: bitstring = catch-fail(symmetricstateunpack(v_663)) in
        {101}let v_665: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_664),6-proj-7-tuple(v_644))) in
        {102}let v_666: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_664),6-proj-7-tuple(v_644))) in
        {103}let v_667: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_664),6-proj-7-tuple(v_644))) in
        {104}let v_668: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_644)) && success?(2-proj-3-tuple(v_664))) then (if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (if not-caught-fail(v_667) then (v_665,v_666,v_667) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {105}let v_669: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_664),1-proj-3-tuple(v_668),3-proj-3-tuple(v_664)))) in
        {106}let v_670: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_668)) && success?(symmetricstatepack(1-proj-3-tuple(v_664),1-proj-3-tuple(v_668),3-proj-3-tuple(v_664)))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-3-tuple(v_669))))) then symmetricstatepack(1-proj-3-tuple(v_669),2-proj-3-tuple(v_669),hash(3-proj-3-tuple(v_669),2-proj-3-tuple(v_668))) else fail-any) else fail-any))) in
        {107}let v_671: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_644)) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-3-tuple(v_664))))) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_668)) then cipherstatepack(3-proj-3-tuple(v_668),minnonce) else fail-any),1-proj-3-tuple(v_668),3-proj-3-tuple(v_670)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_672: bitstring = catch-fail(symmetricstateunpack(v_671)) in
        {109}let v_673: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_672))) in
        {110}let v_674: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_673),2-proj-2-tuple(v_673),3-proj-3-tuple(v_672),msg_c(alice,bob,sid))) in
        {111}let v_675: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_672))) in
        {112}let v_676: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_673))) && success?(1-proj-3-tuple(v_672))) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then cipherstatepack(1-proj-2-tuple(v_675),increment_nonce(2-proj-2-tuple(v_673))) else fail-any) else fail-any)) in
        {113}let v_677: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_672)) && success?(1-proj-3-tuple(v_672))) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-2-tuple(v_673))))) then (if not-caught-fail(v_674) then (if not-caught-fail(v_676) then (v_676,v_674) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {114}let v_678: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_677),2-proj-3-tuple(v_672),3-proj-3-tuple(v_672)))) in
        {115}let v_679: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_677)) && success?(symmetricstatepack(1-proj-2-tuple(v_677),2-proj-3-tuple(v_672),3-proj-3-tuple(v_672)))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-3-tuple(v_678))))) then symmetricstatepack(1-proj-3-tuple(v_678),2-proj-3-tuple(v_678),hash(3-proj-3-tuple(v_678),2-proj-2-tuple(v_677))) else fail-any) else fail-any)) in
        {116}let v_680: bitstring = catch-fail((if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-3-tuple(v_672))))) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-2-tuple(v_677))))) then (if not-caught-fail(v_679) then (v_679,2-proj-2-tuple(v_677)) else fail-any) else fail-any) else fail-any)) in
        {117}let v_681: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_680),v_647,3-proj-7-tuple(v_644),4-proj-7-tuple(v_644),5-proj-7-tuple(v_644),6-proj-7-tuple(v_644),7-proj-7-tuple(v_644))) in
        {118}let v_682: bitstring = catch-fail(concat3(1-proj-3-tuple(v_645),2-proj-2-tuple(v_656),2-proj-2-tuple(v_680))) in
        {119}let v_683: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_680))) in
        {120}let v_684: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_683),zero)) in
        {121}let v_685: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_683),zero)) in
        {122}let v_686: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_683),zero)) in
        {123}let v_687: bitstring = catch-fail((if success?(2-proj-3-tuple(v_683)) then (if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (if not-caught-fail(v_686) then (v_684,v_685,v_686) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {124}let v_688: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_687)) then cipherstatepack(1-proj-3-tuple(v_687),minnonce) else fail-any)) in
        {125}let v_689: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_687)) then cipherstatepack(2-proj-3-tuple(v_687),minnonce) else fail-any)) in
        {126}let v_690: bitstring = catch-fail((if success?(1-proj-2-tuple(v_680)) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then (if not-caught-fail(v_688) then (if not-caught-fail(v_689) then (1-proj-2-tuple(v_680),v_688,v_689) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {127}let (hs_691: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-7-tuple(v_644))))) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if not-caught-fail(v_647) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-2-tuple(v_656))))) then (if not-caught-fail(v_663) then (if not-caught-fail(v_671) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-2-tuple(v_680))))) then (if not-caught-fail(v_681) then (if not-caught-fail(v_682) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-3-tuple(v_690))))) then (v_681,v_682,2-proj-3-tuple(v_690),3-proj-3-tuple(v_690)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {128}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {129}insert statestore(alice,bob,sid,statepack_d(hs_691,cs1,cs2));
        {130}out(pub, message_c)
    ) | (
        {132}!
        {152}get statestore(=alice,=bob,=sid,statepack_d(hs_692: handshakestate,cs1_693: cipherstate,cs2_694: cipherstate)) in
        {133}let hs_695: handshakestate = handshakestatesetcs(hs_692,cs2_694) in
        {134}in(pub, message_d: bitstring);
        {135}let v_696: bitstring = catch-fail(handshakestateunpack(hs_695)) in
        {136}let v_697: bitstring = catch-fail(deconcat3(message_d)) in
        {137}let v_698: bool = catch-fail(true) in
        {138}let v_699: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_696))) in
        {139}let v_700: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_699))) in
        {140}let v_701: aead = catch-fail(decrypt(1-proj-2-tuple(v_700),2-proj-2-tuple(v_700),3-proj-3-tuple(v_699),3-proj-3-tuple(v_697))) in
        {141}let v_702: bitstring = catch-fail(aeadunpack(v_701)) in
        {142}let v_703: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_699))) in
        {143}let v_704: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_700))) && success?(1-proj-3-tuple(v_699))) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-2-tuple(v_703))))) then cipherstatepack(1-proj-2-tuple(v_703),increment_nonce(2-proj-2-tuple(v_700))) else fail-any) else fail-any)) in
        {144}let v_705: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_697)) && (success?(3-proj-3-tuple(v_699)) && success?(1-proj-3-tuple(v_699)))) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then (if not-caught-fail(v_701) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if not-caught-fail(v_704) then (v_704,3-proj-3-tuple(v_702),1-proj-3-tuple(v_702)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {145}let v_706: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_705),2-proj-3-tuple(v_699),3-proj-3-tuple(v_699)))) in
        {146}let v_707: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_697)) && success?(symmetricstatepack(1-proj-3-tuple(v_705),2-proj-3-tuple(v_699),3-proj-3-tuple(v_699)))) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-3-tuple(v_706))))) then symmetricstatepack(1-proj-3-tuple(v_706),2-proj-3-tuple(v_706),hash(3-proj-3-tuple(v_706),3-proj-3-tuple(v_697))) else fail-any) else fail-any)) in
        {147}let v_708: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_697)) && success?(1-proj-7-tuple(v_696))) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-3-tuple(v_699))))) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then (if not-caught-fail(v_707) then (v_707,2-proj-3-tuple(v_705),3-proj-3-tuple(v_705)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {148}let v_709: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_708),2-proj-7-tuple(v_696),3-proj-7-tuple(v_696),4-proj-7-tuple(v_696),5-proj-7-tuple(v_696),6-proj-7-tuple(v_696),7-proj-7-tuple(v_696))) in
        {149}let (hs_710: handshakestate,plaintext_d: bitstring,valid_711: bool) = (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-7-tuple(v_696))))) then (if (not-caught-fail(v_697) && success?(is-true(success?(1-proj-3-tuple(v_697))))) then (if not-caught-fail(v_698) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if (v_698 && 3-proj-3-tuple(v_708)) then (if not-caught-fail(v_709) then (v_709,2-proj-3-tuple(v_708),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {150}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {151}insert statestore(alice,bob,sid,statepack_e(hs_710,cs1_693,handshakestategetcs(hs_710)))
    ) | (
        {153}!
        {171}get statestore(=alice,=bob,=sid,statepack_e(hs_712: handshakestate,cs1_713: cipherstate,cs2_714: cipherstate)) in
        {154}let hs_715: handshakestate = handshakestatesetcs(hs_712,cs1_713) in
        {155}let v_716: bitstring = catch-fail(handshakestateunpack(hs_715)) in
        {156}let v_717: bitstring = catch-fail((empty,empty,empty)) in
        {157}let v_718: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_716))) in
        {158}let v_719: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_718))) in
        {159}let v_720: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_719),2-proj-2-tuple(v_719),3-proj-3-tuple(v_718),msg_e(alice,bob,sid))) in
        {160}let v_721: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_718))) in
        {161}let v_722: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_719))) && success?(1-proj-3-tuple(v_718))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-2-tuple(v_721))))) then cipherstatepack(1-proj-2-tuple(v_721),increment_nonce(2-proj-2-tuple(v_719))) else fail-any) else fail-any)) in
        {162}let v_723: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_718)) && success?(1-proj-3-tuple(v_718))) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-2-tuple(v_719))))) then (if not-caught-fail(v_720) then (if not-caught-fail(v_722) then (v_722,v_720) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {163}let v_724: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_723),2-proj-3-tuple(v_718),3-proj-3-tuple(v_718)))) in
        {164}let v_725: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_723)) && success?(symmetricstatepack(1-proj-2-tuple(v_723),2-proj-3-tuple(v_718),3-proj-3-tuple(v_718)))) then (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-3-tuple(v_724))))) then symmetricstatepack(1-proj-3-tuple(v_724),2-proj-3-tuple(v_724),hash(3-proj-3-tuple(v_724),2-proj-2-tuple(v_723))) else fail-any) else fail-any)) in
        {165}let v_726: bitstring = catch-fail((if success?(1-proj-7-tuple(v_716)) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-3-tuple(v_718))))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-2-tuple(v_723))))) then (if not-caught-fail(v_725) then (v_725,2-proj-2-tuple(v_723)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {166}let v_727: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_726),2-proj-7-tuple(v_716),3-proj-7-tuple(v_716),4-proj-7-tuple(v_716),5-proj-7-tuple(v_716),6-proj-7-tuple(v_716),7-proj-7-tuple(v_716))) in
        {167}let v_728: bitstring = catch-fail(concat3(1-proj-3-tuple(v_717),2-proj-3-tuple(v_717),2-proj-2-tuple(v_726))) in
        {168}let (hs_729: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_716) && success?(is-true(success?(1-proj-7-tuple(v_716))))) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-2-tuple(v_726))))) then (if not-caught-fail(v_727) then (if not-caught-fail(v_728) then (v_727,v_728) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {169}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {170}out(pub, message_e)
    ) | (
        {172}event LeakPsk(phase0,alice,bob);
        {173}out(pub, key_psk(alice,bob))
    ) | (
        {174}phase 1;
        {175}event LeakPsk(phase1,alice,bob);
        {176}out(pub, key_psk(alice,bob))
    ) | (
        {177}event LeakS(phase0,alice);
        {178}out(pub, key_s(alice))
    ) | (
        {179}phase 1;
        {180}event LeakS(phase1,alice);
        {181}out(pub, key_s(alice))
    )
) | (
    {182}let s_730: keypair = keypairpack(empty,empty) in
    {183}out(pub, getpublickey(s_730));
    (
        {184}let e_731: keypair = keypairpack(empty,empty) in
        {185}let rs_732: key = empty in
        {186}let re_733: key = empty in
        {187}let v_734: bitstring = catch-fail(hash(somename,empty)) in
        {188}let v_735: key = catch-fail(v_734) in
        {189}let v_736: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {190}let v_737: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_734) then (if not-caught-fail(v_735) then (if not-caught-fail(v_736) then symmetricstatepack(v_736,v_735,v_734) else fail-any) else fail-any) else fail-any))) in
        {191}let v_738: symmetricstate = catch-fail((if success?((if not-caught-fail(v_734) then (if not-caught-fail(v_735) then (if not-caught-fail(v_736) then symmetricstatepack(v_736,v_735,v_734) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then symmetricstatepack(1-proj-3-tuple(v_737),2-proj-3-tuple(v_737),hash(3-proj-3-tuple(v_737),empty)) else fail-any) else fail-any)) in
        {192}let hs_739: handshakestate = (if not-caught-fail(v_738) then handshakestatepack(v_738,s_730,e_731,rs_732,re_733,key_psk(alice,charlie),true) else fail-any) in
        {193}insert statestore(alice,charlie,sid,statepack_a(hs_739))
    ) | (
        {222}get statestore(=alice,=charlie,=sid,statepack_a(hs_740: handshakestate)) in
        {194}let v_741: bitstring = catch-fail(handshakestateunpack(hs_740)) in
        {195}let v_742: bitstring = catch-fail((empty,empty,empty)) in
        {196}let v_743: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {197}let v_744: keypair = catch-fail((if not-caught-fail(v_743) then keypairpack(validkey(v_743),key_e(alice,charlie,sid)) else fail-any)) in
        {198}let v_745: bitstring = catch-fail(getpublickey(v_744)) in
        {199}let v_746: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_741))) in
        {200}let v_747: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_741)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-3-tuple(v_746))))) then symmetricstatepack(1-proj-3-tuple(v_746),2-proj-3-tuple(v_746),hash(3-proj-3-tuple(v_746),v_745)) else fail-any) else fail-any)) in
        {201}let v_748: bitstring = catch-fail(symmetricstateunpack(v_747)) in
        {202}let v_749: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_748),getpublickey(v_744))) in
        {203}let v_750: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_748),getpublickey(v_744))) in
        {204}let v_751: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_748),getpublickey(v_744))) in
        {205}let v_752: bitstring = catch-fail((if (success?(getpublickey(v_744)) && success?(2-proj-3-tuple(v_748))) then (if not-caught-fail(v_749) then (if not-caught-fail(v_750) then (if not-caught-fail(v_751) then (v_749,v_750,v_751) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {206}let v_753: symmetricstate = catch-fail((if success?(getpublickey(v_744)) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-3-tuple(v_748))))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-3-tuple(v_752))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_752)) then cipherstatepack(2-proj-3-tuple(v_752),minnonce) else fail-any),1-proj-3-tuple(v_752),3-proj-3-tuple(v_748)) else fail-any) else fail-any) else fail-any)) in
        {207}let v_754: bitstring = catch-fail(symmetricstateunpack(v_753)) in
        {208}let v_755: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_754))) in
        {209}let v_756: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_755),2-proj-2-tuple(v_755),3-proj-3-tuple(v_754),msg_a(alice,charlie,sid))) in
        {210}let v_757: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_754))) in
        {211}let v_758: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_755))) && success?(1-proj-3-tuple(v_754))) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-2-tuple(v_757))))) then cipherstatepack(1-proj-2-tuple(v_757),increment_nonce(2-proj-2-tuple(v_755))) else fail-any) else fail-any)) in
        {212}let v_759: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_754)) && success?(1-proj-3-tuple(v_754))) then (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-2-tuple(v_755))))) then (if not-caught-fail(v_756) then (if not-caught-fail(v_758) then (v_758,v_756) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {213}let v_760: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_759),2-proj-3-tuple(v_754),3-proj-3-tuple(v_754)))) in
        {214}let v_761: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_759)) && success?(symmetricstatepack(1-proj-2-tuple(v_759),2-proj-3-tuple(v_754),3-proj-3-tuple(v_754)))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then symmetricstatepack(1-proj-3-tuple(v_760),2-proj-3-tuple(v_760),hash(3-proj-3-tuple(v_760),2-proj-2-tuple(v_759))) else fail-any) else fail-any)) in
        {215}let v_762: bitstring = catch-fail((if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-3-tuple(v_754))))) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-2-tuple(v_759))))) then (if not-caught-fail(v_761) then (v_761,2-proj-2-tuple(v_759)) else fail-any) else fail-any) else fail-any)) in
        {216}let v_763: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_762),2-proj-7-tuple(v_741),v_744,4-proj-7-tuple(v_741),5-proj-7-tuple(v_741),6-proj-7-tuple(v_741),7-proj-7-tuple(v_741))) in
        {217}let v_764: bitstring = catch-fail(concat3(v_745,2-proj-3-tuple(v_742),2-proj-2-tuple(v_762))) in
        {218}let (hs_765: handshakestate,message_a_766: bitstring) = (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-7-tuple(v_741))))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if not-caught-fail(v_744) then (if not-caught-fail(v_745) then (if not-caught-fail(v_747) then (if not-caught-fail(v_753) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then (if not-caught-fail(v_763) then (if not-caught-fail(v_764) then (v_763,v_764) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {219}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {220}insert statestore(alice,charlie,sid,statepack_b(hs_765));
        {221}out(pub, message_a_766)
    ) | (
        {257}get statestore(=alice,=charlie,=sid,statepack_b(hs_767: handshakestate)) in
        {223}in(pub, message_b_768: bitstring);
        {224}let v_769: bitstring = catch-fail(handshakestateunpack(hs_767)) in
        {225}let v_770: bitstring = catch-fail(deconcat3(message_b_768)) in
        {226}let v_771: bool = catch-fail(true) in
        {227}let v_772: key = catch-fail(1-proj-3-tuple(v_770)) in
        {228}let v_773: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_769))) in
        {229}let v_774: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_769)) then (if (not-caught-fail(v_773) && success?(is-true(success?(1-proj-3-tuple(v_773))))) then symmetricstatepack(1-proj-3-tuple(v_773),2-proj-3-tuple(v_773),hash(3-proj-3-tuple(v_773),v_772)) else fail-any) else fail-any)) in
        {230}let v_775: bitstring = catch-fail(symmetricstateunpack(v_774)) in
        {231}let v_776: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_775),v_772)) in
        {232}let v_777: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_775),v_772)) in
        {233}let v_778: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_775),v_772)) in
        {234}let v_779: bitstring = catch-fail((if success?(2-proj-3-tuple(v_775)) then (if not-caught-fail(v_776) then (if not-caught-fail(v_777) then (if not-caught-fail(v_778) then (v_776,v_777,v_778) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_780: symmetricstate = catch-fail((if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_779)) then cipherstatepack(2-proj-3-tuple(v_779),minnonce) else fail-any),1-proj-3-tuple(v_779),3-proj-3-tuple(v_775)) else fail-any) else fail-any)) in
        {236}let v_781: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_769))) in
        {237}let v_782: bitstring = catch-fail(symmetricstateunpack(v_780)) in
        {238}let v_783: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_782),(if success?(3-proj-7-tuple(v_769)) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then dhexp(2-proj-2-tuple(v_781),v_772) else fail-any) else fail-any))) in
        {239}let v_784: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_782),(if success?(3-proj-7-tuple(v_769)) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then dhexp(2-proj-2-tuple(v_781),v_772) else fail-any) else fail-any))) in
        {240}let v_785: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_782),(if success?(3-proj-7-tuple(v_769)) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then dhexp(2-proj-2-tuple(v_781),v_772) else fail-any) else fail-any))) in
        {241}let v_786: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_769)) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then dhexp(2-proj-2-tuple(v_781),v_772) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_782))) then (if not-caught-fail(v_783) then (if not-caught-fail(v_784) then (if not-caught-fail(v_785) then (v_783,v_784,v_785) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {242}let v_787: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_769)) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then dhexp(2-proj-2-tuple(v_781),v_772) else fail-any) else fail-any)) then (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-3-tuple(v_782))))) then (if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-3-tuple(v_786))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_786)) then cipherstatepack(2-proj-3-tuple(v_786),minnonce) else fail-any),1-proj-3-tuple(v_786),3-proj-3-tuple(v_782)) else fail-any) else fail-any) else fail-any)) in
        {243}let v_788: bitstring = catch-fail(symmetricstateunpack(v_787)) in
        {244}let v_789: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_788))) in
        {245}let v_790: aead = catch-fail(decrypt(1-proj-2-tuple(v_789),2-proj-2-tuple(v_789),3-proj-3-tuple(v_788),3-proj-3-tuple(v_770))) in
        {246}let v_791: bitstring = catch-fail(aeadunpack(v_790)) in
        {247}let v_792: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_788))) in
        {248}let v_793: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_789))) && success?(1-proj-3-tuple(v_788))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then cipherstatepack(1-proj-2-tuple(v_792),increment_nonce(2-proj-2-tuple(v_789))) else fail-any) else fail-any)) in
        {249}let v_794: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_770)) && (success?(3-proj-3-tuple(v_788)) && success?(1-proj-3-tuple(v_788)))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-2-tuple(v_789))))) then (if not-caught-fail(v_790) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if not-caught-fail(v_793) then (v_793,3-proj-3-tuple(v_791),1-proj-3-tuple(v_791)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {250}let v_795: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_788),3-proj-3-tuple(v_788)))) in
        {251}let v_796: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_770)) && success?(symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_788),3-proj-3-tuple(v_788)))) then (if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-3-tuple(v_795))))) then symmetricstatepack(1-proj-3-tuple(v_795),2-proj-3-tuple(v_795),hash(3-proj-3-tuple(v_795),3-proj-3-tuple(v_770))) else fail-any) else fail-any)) in
        {252}let v_797: bitstring = catch-fail((if success?(3-proj-3-tuple(v_770)) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then (if not-caught-fail(v_796) then (v_796,2-proj-3-tuple(v_794),3-proj-3-tuple(v_794)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_798: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_797),2-proj-7-tuple(v_769),3-proj-7-tuple(v_769),4-proj-7-tuple(v_769),v_772,6-proj-7-tuple(v_769),7-proj-7-tuple(v_769))) in
        {254}let (hs_799: handshakestate,plaintext_b_800: bitstring,valid_801: bool) = (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-7-tuple(v_769))))) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-3-tuple(v_770))))) then (if not-caught-fail(v_771) then (if not-caught-fail(v_772) then (if not-caught-fail(v_774) then (if not-caught-fail(v_780) then (if not-caught-fail(v_787) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then (if (v_771 && 3-proj-3-tuple(v_797)) then (if not-caught-fail(v_798) then (v_798,2-proj-3-tuple(v_797),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {255}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_800);
        {256}insert statestore(alice,charlie,sid,statepack_c(hs_799))
    ) | (
        {309}get statestore(=alice,=charlie,=sid,statepack_c(hs_802: handshakestate)) in
        {258}let v_803: bitstring = catch-fail(handshakestateunpack(hs_802)) in
        {259}let v_804: bitstring = catch-fail((empty,empty,empty)) in
        {260}let v_805: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {261}let v_806: keypair = catch-fail((if not-caught-fail(v_805) then keypairpack(validkey(v_805),key_s(alice)) else fail-any)) in
        {262}let v_807: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_803))) in
        {263}let v_808: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_807))) in
        {264}let v_809: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_808),2-proj-2-tuple(v_808),3-proj-3-tuple(v_807),getpublickey(v_806))) in
        {265}let v_810: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_807))) in
        {266}let v_811: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_808))) && success?(1-proj-3-tuple(v_807))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then cipherstatepack(1-proj-2-tuple(v_810),increment_nonce(2-proj-2-tuple(v_808))) else fail-any) else fail-any)) in
        {267}let v_812: bitstring = catch-fail((if (success?(getpublickey(v_806)) && (success?(3-proj-3-tuple(v_807)) && success?(1-proj-3-tuple(v_807)))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-2-tuple(v_808))))) then (if not-caught-fail(v_809) then (if not-caught-fail(v_811) then (v_811,v_809) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {268}let v_813: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_812),2-proj-3-tuple(v_807),3-proj-3-tuple(v_807)))) in
        {269}let v_814: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_812)) && success?(symmetricstatepack(1-proj-2-tuple(v_812),2-proj-3-tuple(v_807),3-proj-3-tuple(v_807)))) then (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-3-tuple(v_813))))) then symmetricstatepack(1-proj-3-tuple(v_813),2-proj-3-tuple(v_813),hash(3-proj-3-tuple(v_813),2-proj-2-tuple(v_812))) else fail-any) else fail-any)) in
        {270}let v_815: bitstring = catch-fail((if (success?(getpublickey(v_806)) && success?(1-proj-7-tuple(v_803))) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then (if (not-caught-fail(v_812) && success?(is-true(success?(1-proj-2-tuple(v_812))))) then (if not-caught-fail(v_814) then (v_814,2-proj-2-tuple(v_812)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {271}let v_816: bitstring = catch-fail(keypairunpack(v_806)) in
        {272}let v_817: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_815))) in
        {273}let v_818: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_817),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then dhexp(2-proj-2-tuple(v_816),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {274}let v_819: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_817),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then dhexp(2-proj-2-tuple(v_816),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {275}let v_820: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_817),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then dhexp(2-proj-2-tuple(v_816),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {276}let v_821: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then dhexp(2-proj-2-tuple(v_816),5-proj-7-tuple(v_803)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_817))) then (if not-caught-fail(v_818) then (if not-caught-fail(v_819) then (if not-caught-fail(v_820) then (v_818,v_819,v_820) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {277}let v_822: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then dhexp(2-proj-2-tuple(v_816),5-proj-7-tuple(v_803)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_815))) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-3-tuple(v_821))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_821)) then cipherstatepack(2-proj-3-tuple(v_821),minnonce) else fail-any),1-proj-3-tuple(v_821),3-proj-3-tuple(v_817)) else fail-any) else fail-any) else fail-any)) in
        {278}let v_823: bitstring = catch-fail(symmetricstateunpack(v_822)) in
        {279}let v_824: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_823),6-proj-7-tuple(v_803))) in
        {280}let v_825: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_823),6-proj-7-tuple(v_803))) in
        {281}let v_826: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_823),6-proj-7-tuple(v_803))) in
        {282}let v_827: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_803)) && success?(2-proj-3-tuple(v_823))) then (if not-caught-fail(v_824) then (if not-caught-fail(v_825) then (if not-caught-fail(v_826) then (v_824,v_825,v_826) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {283}let v_828: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_823),1-proj-3-tuple(v_827),3-proj-3-tuple(v_823)))) in
        {284}let v_829: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_827)) && success?(symmetricstatepack(1-proj-3-tuple(v_823),1-proj-3-tuple(v_827),3-proj-3-tuple(v_823)))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then symmetricstatepack(1-proj-3-tuple(v_828),2-proj-3-tuple(v_828),hash(3-proj-3-tuple(v_828),2-proj-3-tuple(v_827))) else fail-any) else fail-any))) in
        {285}let v_830: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_803)) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-3-tuple(v_829))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_827)) then cipherstatepack(3-proj-3-tuple(v_827),minnonce) else fail-any),1-proj-3-tuple(v_827),3-proj-3-tuple(v_829)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {286}let v_831: bitstring = catch-fail(symmetricstateunpack(v_830)) in
        {287}let v_832: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {288}let v_833: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_832),2-proj-2-tuple(v_832),3-proj-3-tuple(v_831),msg_c(alice,charlie,sid))) in
        {289}let v_834: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {290}let v_835: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_832))) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-2-tuple(v_834))))) then cipherstatepack(1-proj-2-tuple(v_834),increment_nonce(2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {291}let v_836: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_831)) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_833) then (if not-caught-fail(v_835) then (v_835,v_833) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {292}let v_837: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) in
        {293}let v_838: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_836)) && success?(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then symmetricstatepack(1-proj-3-tuple(v_837),2-proj-3-tuple(v_837),hash(3-proj-3-tuple(v_837),2-proj-2-tuple(v_836))) else fail-any) else fail-any)) in
        {294}let v_839: bitstring = catch-fail((if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-3-tuple(v_831))))) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then (if not-caught-fail(v_838) then (v_838,2-proj-2-tuple(v_836)) else fail-any) else fail-any) else fail-any)) in
        {295}let v_840: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_839),v_806,3-proj-7-tuple(v_803),4-proj-7-tuple(v_803),5-proj-7-tuple(v_803),6-proj-7-tuple(v_803),7-proj-7-tuple(v_803))) in
        {296}let v_841: bitstring = catch-fail(concat3(1-proj-3-tuple(v_804),2-proj-2-tuple(v_815),2-proj-2-tuple(v_839))) in
        {297}let v_842: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_839))) in
        {298}let v_843: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_842),zero)) in
        {299}let v_844: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_842),zero)) in
        {300}let v_845: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_842),zero)) in
        {301}let v_846: bitstring = catch-fail((if success?(2-proj-3-tuple(v_842)) then (if not-caught-fail(v_843) then (if not-caught-fail(v_844) then (if not-caught-fail(v_845) then (v_843,v_844,v_845) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {302}let v_847: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_846)) then cipherstatepack(1-proj-3-tuple(v_846),minnonce) else fail-any)) in
        {303}let v_848: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_846)) then cipherstatepack(2-proj-3-tuple(v_846),minnonce) else fail-any)) in
        {304}let v_849: bitstring = catch-fail((if success?(1-proj-2-tuple(v_839)) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if not-caught-fail(v_847) then (if not-caught-fail(v_848) then (1-proj-2-tuple(v_839),v_847,v_848) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {305}let (hs_850: handshakestate,message_c_851: bitstring,cs1_852: cipherstate,cs2_853: cipherstate) = (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-7-tuple(v_803))))) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then (if not-caught-fail(v_806) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-2-tuple(v_815))))) then (if not-caught-fail(v_822) then (if not-caught-fail(v_830) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-2-tuple(v_839))))) then (if not-caught-fail(v_840) then (if not-caught-fail(v_841) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-3-tuple(v_849))))) then (v_840,v_841,2-proj-3-tuple(v_849),3-proj-3-tuple(v_849)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {306}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {307}insert statestore(alice,charlie,sid,statepack_d(hs_850,cs1_852,cs2_853));
        {308}out(pub, message_c_851)
    ) | (
        {310}!
        {330}get statestore(=alice,=charlie,=sid,statepack_d(hs_854: handshakestate,cs1_855: cipherstate,cs2_856: cipherstate)) in
        {311}let hs_857: handshakestate = handshakestatesetcs(hs_854,cs2_856) in
        {312}in(pub, message_d_858: bitstring);
        {313}let v_859: bitstring = catch-fail(handshakestateunpack(hs_857)) in
        {314}let v_860: bitstring = catch-fail(deconcat3(message_d_858)) in
        {315}let v_861: bool = catch-fail(true) in
        {316}let v_862: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_859))) in
        {317}let v_863: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_862))) in
        {318}let v_864: aead = catch-fail(decrypt(1-proj-2-tuple(v_863),2-proj-2-tuple(v_863),3-proj-3-tuple(v_862),3-proj-3-tuple(v_860))) in
        {319}let v_865: bitstring = catch-fail(aeadunpack(v_864)) in
        {320}let v_866: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_862))) in
        {321}let v_867: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_863))) && success?(1-proj-3-tuple(v_862))) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-2-tuple(v_866))))) then cipherstatepack(1-proj-2-tuple(v_866),increment_nonce(2-proj-2-tuple(v_863))) else fail-any) else fail-any)) in
        {322}let v_868: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_860)) && (success?(3-proj-3-tuple(v_862)) && success?(1-proj-3-tuple(v_862)))) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-2-tuple(v_863))))) then (if not-caught-fail(v_864) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-3-tuple(v_865))))) then (if not-caught-fail(v_867) then (v_867,3-proj-3-tuple(v_865),1-proj-3-tuple(v_865)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {323}let v_869: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_868),2-proj-3-tuple(v_862),3-proj-3-tuple(v_862)))) in
        {324}let v_870: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_860)) && success?(symmetricstatepack(1-proj-3-tuple(v_868),2-proj-3-tuple(v_862),3-proj-3-tuple(v_862)))) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-3-tuple(v_869))))) then symmetricstatepack(1-proj-3-tuple(v_869),2-proj-3-tuple(v_869),hash(3-proj-3-tuple(v_869),3-proj-3-tuple(v_860))) else fail-any) else fail-any)) in
        {325}let v_871: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_860)) && success?(1-proj-7-tuple(v_859))) then (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-3-tuple(v_862))))) then (if (not-caught-fail(v_868) && success?(is-true(success?(1-proj-3-tuple(v_868))))) then (if not-caught-fail(v_870) then (v_870,2-proj-3-tuple(v_868),3-proj-3-tuple(v_868)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {326}let v_872: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_871),2-proj-7-tuple(v_859),3-proj-7-tuple(v_859),4-proj-7-tuple(v_859),5-proj-7-tuple(v_859),6-proj-7-tuple(v_859),7-proj-7-tuple(v_859))) in
        {327}let (hs_873: handshakestate,plaintext_d_874: bitstring,valid_875: bool) = (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-7-tuple(v_859))))) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-3-tuple(v_860))))) then (if not-caught-fail(v_861) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-3-tuple(v_871))))) then (if (v_861 && 3-proj-3-tuple(v_871)) then (if not-caught-fail(v_872) then (v_872,2-proj-3-tuple(v_871),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {328}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_874);
        {329}insert statestore(alice,charlie,sid,statepack_e(hs_873,cs1_855,handshakestategetcs(hs_873)))
    ) | (
        {331}!
        {349}get statestore(=alice,=charlie,=sid,statepack_e(hs_876: handshakestate,cs1_877: cipherstate,cs2_878: cipherstate)) in
        {332}let hs_879: handshakestate = handshakestatesetcs(hs_876,cs1_877) in
        {333}let v_880: bitstring = catch-fail(handshakestateunpack(hs_879)) in
        {334}let v_881: bitstring = catch-fail((empty,empty,empty)) in
        {335}let v_882: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_880))) in
        {336}let v_883: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_882))) in
        {337}let v_884: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_883),2-proj-2-tuple(v_883),3-proj-3-tuple(v_882),msg_e(alice,charlie,sid))) in
        {338}let v_885: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_882))) in
        {339}let v_886: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_883))) && success?(1-proj-3-tuple(v_882))) then (if (not-caught-fail(v_885) && success?(is-true(success?(1-proj-2-tuple(v_885))))) then cipherstatepack(1-proj-2-tuple(v_885),increment_nonce(2-proj-2-tuple(v_883))) else fail-any) else fail-any)) in
        {340}let v_887: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_882)) && success?(1-proj-3-tuple(v_882))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-2-tuple(v_883))))) then (if not-caught-fail(v_884) then (if not-caught-fail(v_886) then (v_886,v_884) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {341}let v_888: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_887),2-proj-3-tuple(v_882),3-proj-3-tuple(v_882)))) in
        {342}let v_889: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_887)) && success?(symmetricstatepack(1-proj-2-tuple(v_887),2-proj-3-tuple(v_882),3-proj-3-tuple(v_882)))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-3-tuple(v_888))))) then symmetricstatepack(1-proj-3-tuple(v_888),2-proj-3-tuple(v_888),hash(3-proj-3-tuple(v_888),2-proj-2-tuple(v_887))) else fail-any) else fail-any)) in
        {343}let v_890: bitstring = catch-fail((if success?(1-proj-7-tuple(v_880)) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-2-tuple(v_887))))) then (if not-caught-fail(v_889) then (v_889,2-proj-2-tuple(v_887)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {344}let v_891: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_890),2-proj-7-tuple(v_880),3-proj-7-tuple(v_880),4-proj-7-tuple(v_880),5-proj-7-tuple(v_880),6-proj-7-tuple(v_880),7-proj-7-tuple(v_880))) in
        {345}let v_892: bitstring = catch-fail(concat3(1-proj-3-tuple(v_881),2-proj-3-tuple(v_881),2-proj-2-tuple(v_890))) in
        {346}let (hs_893: handshakestate,message_e_894: bitstring) = (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-7-tuple(v_880))))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-3-tuple(v_881))))) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-2-tuple(v_890))))) then (if not-caught-fail(v_891) then (if not-caught-fail(v_892) then (v_891,v_892) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {347}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {348}out(pub, message_e_894)
    ) | (
        {350}event LeakPsk(phase0,alice,charlie);
        {351}out(pub, key_psk(alice,charlie))
    ) | (
        {352}phase 1;
        {353}event LeakPsk(phase1,alice,charlie);
        {354}out(pub, key_psk(alice,charlie))
    ) | (
        {355}event LeakS(phase0,alice);
        {356}out(pub, key_s(alice))
    ) | (
        {357}phase 1;
        {358}event LeakS(phase1,alice);
        {359}out(pub, key_s(alice))
    )
) | (
    {360}let s_895: keypair = keypairpack(empty,empty) in
    (
        {361}let e_896: keypair = keypairpack(empty,empty) in
        {362}let rs_897: key = empty in
        {363}let re_898: key = empty in
        {364}let v_899: bitstring = catch-fail(hash(somename,empty)) in
        {365}let v_900: key = catch-fail(v_899) in
        {366}let v_901: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {367}let v_902: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_899) then (if not-caught-fail(v_900) then (if not-caught-fail(v_901) then symmetricstatepack(v_901,v_900,v_899) else fail-any) else fail-any) else fail-any))) in
        {368}let v_903: symmetricstate = catch-fail((if success?((if not-caught-fail(v_899) then (if not-caught-fail(v_900) then (if not-caught-fail(v_901) then symmetricstatepack(v_901,v_900,v_899) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-3-tuple(v_902))))) then symmetricstatepack(1-proj-3-tuple(v_902),2-proj-3-tuple(v_902),hash(3-proj-3-tuple(v_902),empty)) else fail-any) else fail-any)) in
        {369}let hs_904: handshakestate = (if not-caught-fail(v_903) then handshakestatepack(v_903,s_895,e_896,rs_897,re_898,key_psk(alice,bob),false) else fail-any) in
        {370}insert statestore(bob,alice,sid,statepack_a(hs_904))
    ) | (
        {398}get statestore(=bob,=alice,=sid,statepack_a(hs_905: handshakestate)) in
        {371}in(pub, message_a_906: bitstring);
        {372}let v_907: bitstring = catch-fail(handshakestateunpack(hs_905)) in
        {373}let v_908: bitstring = catch-fail(deconcat3(message_a_906)) in
        {374}let v_909: bool = catch-fail(true) in
        {375}let v_910: key = catch-fail(1-proj-3-tuple(v_908)) in
        {376}let v_911: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_907))) in
        {377}let v_912: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_907)) then (if (not-caught-fail(v_911) && success?(is-true(success?(1-proj-3-tuple(v_911))))) then symmetricstatepack(1-proj-3-tuple(v_911),2-proj-3-tuple(v_911),hash(3-proj-3-tuple(v_911),v_910)) else fail-any) else fail-any)) in
        {378}let v_913: bitstring = catch-fail(symmetricstateunpack(v_912)) in
        {379}let v_914: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_913),v_910)) in
        {380}let v_915: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_913),v_910)) in
        {381}let v_916: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_913),v_910)) in
        {382}let v_917: bitstring = catch-fail((if success?(2-proj-3-tuple(v_913)) then (if not-caught-fail(v_914) then (if not-caught-fail(v_915) then (if not-caught-fail(v_916) then (v_914,v_915,v_916) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {383}let v_918: symmetricstate = catch-fail((if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then (if (not-caught-fail(v_917) && success?(is-true(success?(1-proj-3-tuple(v_917))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_917)) then cipherstatepack(2-proj-3-tuple(v_917),minnonce) else fail-any),1-proj-3-tuple(v_917),3-proj-3-tuple(v_913)) else fail-any) else fail-any)) in
        {384}let v_919: bitstring = catch-fail(symmetricstateunpack(v_918)) in
        {385}let v_920: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_919))) in
        {386}let v_921: aead = catch-fail(decrypt(1-proj-2-tuple(v_920),2-proj-2-tuple(v_920),3-proj-3-tuple(v_919),3-proj-3-tuple(v_908))) in
        {387}let v_922: bitstring = catch-fail(aeadunpack(v_921)) in
        {388}let v_923: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_919))) in
        {389}let v_924: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_920))) && success?(1-proj-3-tuple(v_919))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-2-tuple(v_923))))) then cipherstatepack(1-proj-2-tuple(v_923),increment_nonce(2-proj-2-tuple(v_920))) else fail-any) else fail-any)) in
        {390}let v_925: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_908)) && (success?(3-proj-3-tuple(v_919)) && success?(1-proj-3-tuple(v_919)))) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-2-tuple(v_920))))) then (if not-caught-fail(v_921) then (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if not-caught-fail(v_924) then (v_924,3-proj-3-tuple(v_922),1-proj-3-tuple(v_922)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {391}let v_926: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_925),2-proj-3-tuple(v_919),3-proj-3-tuple(v_919)))) in
        {392}let v_927: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_908)) && success?(symmetricstatepack(1-proj-3-tuple(v_925),2-proj-3-tuple(v_919),3-proj-3-tuple(v_919)))) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then symmetricstatepack(1-proj-3-tuple(v_926),2-proj-3-tuple(v_926),hash(3-proj-3-tuple(v_926),3-proj-3-tuple(v_908))) else fail-any) else fail-any)) in
        {393}let v_928: bitstring = catch-fail((if success?(3-proj-3-tuple(v_908)) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-3-tuple(v_925))))) then (if not-caught-fail(v_927) then (v_927,2-proj-3-tuple(v_925),3-proj-3-tuple(v_925)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {394}let v_929: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_928),2-proj-7-tuple(v_907),3-proj-7-tuple(v_907),4-proj-7-tuple(v_907),v_910,6-proj-7-tuple(v_907),7-proj-7-tuple(v_907))) in
        {395}let (hs_930: handshakestate,plaintext_a: bitstring,valid_931: bool) = (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-7-tuple(v_907))))) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-3-tuple(v_908))))) then (if not-caught-fail(v_909) then (if not-caught-fail(v_910) then (if not-caught-fail(v_912) then (if not-caught-fail(v_918) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then (if (v_909 && 3-proj-3-tuple(v_928)) then (if not-caught-fail(v_929) then (v_929,2-proj-3-tuple(v_928),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {396}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {397}insert statestore(bob,alice,sid,statepack_b(hs_930))
    ) | (
        {434}get statestore(=bob,=alice,=sid,statepack_b(hs_932: handshakestate)) in
        {399}let v_933: bitstring = catch-fail(handshakestateunpack(hs_932)) in
        {400}let v_934: bitstring = catch-fail((empty,empty,empty)) in
        {401}let v_935: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {402}let v_936: keypair = catch-fail((if not-caught-fail(v_935) then keypairpack(validkey(v_935),key_e(bob,alice,sid)) else fail-any)) in
        {403}let v_937: bitstring = catch-fail(getpublickey(v_936)) in
        {404}let v_938: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_933))) in
        {405}let v_939: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_933)) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-3-tuple(v_938))))) then symmetricstatepack(1-proj-3-tuple(v_938),2-proj-3-tuple(v_938),hash(3-proj-3-tuple(v_938),v_937)) else fail-any) else fail-any)) in
        {406}let v_940: bitstring = catch-fail(symmetricstateunpack(v_939)) in
        {407}let v_941: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_940),getpublickey(v_936))) in
        {408}let v_942: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_940),getpublickey(v_936))) in
        {409}let v_943: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_940),getpublickey(v_936))) in
        {410}let v_944: bitstring = catch-fail((if (success?(getpublickey(v_936)) && success?(2-proj-3-tuple(v_940))) then (if not-caught-fail(v_941) then (if not-caught-fail(v_942) then (if not-caught-fail(v_943) then (v_941,v_942,v_943) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {411}let v_945: symmetricstate = catch-fail((if success?(getpublickey(v_936)) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-3-tuple(v_940))))) then (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-3-tuple(v_944))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_944)) then cipherstatepack(2-proj-3-tuple(v_944),minnonce) else fail-any),1-proj-3-tuple(v_944),3-proj-3-tuple(v_940)) else fail-any) else fail-any) else fail-any)) in
        {412}let v_946: bitstring = catch-fail(keypairunpack(v_936)) in
        {413}let v_947: bitstring = catch-fail(symmetricstateunpack(v_945)) in
        {414}let v_948: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_947),(if success?(5-proj-7-tuple(v_933)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),5-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {415}let v_949: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_947),(if success?(5-proj-7-tuple(v_933)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),5-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {416}let v_950: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_947),(if success?(5-proj-7-tuple(v_933)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),5-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {417}let v_951: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_933)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),5-proj-7-tuple(v_933)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_947))) then (if not-caught-fail(v_948) then (if not-caught-fail(v_949) then (if not-caught-fail(v_950) then (v_948,v_949,v_950) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {418}let v_952: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_933)) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),5-proj-7-tuple(v_933)) else fail-any) else fail-any)) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_951)) then cipherstatepack(2-proj-3-tuple(v_951),minnonce) else fail-any),1-proj-3-tuple(v_951),3-proj-3-tuple(v_947)) else fail-any) else fail-any) else fail-any)) in
        {419}let v_953: bitstring = catch-fail(symmetricstateunpack(v_952)) in
        {420}let v_954: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_953))) in
        {421}let v_955: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_954),2-proj-2-tuple(v_954),3-proj-3-tuple(v_953),msg_b(bob,alice,sid))) in
        {422}let v_956: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_953))) in
        {423}let v_957: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_954))) && success?(1-proj-3-tuple(v_953))) then (if (not-caught-fail(v_956) && success?(is-true(success?(1-proj-2-tuple(v_956))))) then cipherstatepack(1-proj-2-tuple(v_956),increment_nonce(2-proj-2-tuple(v_954))) else fail-any) else fail-any)) in
        {424}let v_958: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_953)) && success?(1-proj-3-tuple(v_953))) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-2-tuple(v_954))))) then (if not-caught-fail(v_955) then (if not-caught-fail(v_957) then (v_957,v_955) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {425}let v_959: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_958),2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)))) in
        {426}let v_960: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_958)) && success?(symmetricstatepack(1-proj-2-tuple(v_958),2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)))) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-3-tuple(v_959))))) then symmetricstatepack(1-proj-3-tuple(v_959),2-proj-3-tuple(v_959),hash(3-proj-3-tuple(v_959),2-proj-2-tuple(v_958))) else fail-any) else fail-any)) in
        {427}let v_961: bitstring = catch-fail((if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-2-tuple(v_958))))) then (if not-caught-fail(v_960) then (v_960,2-proj-2-tuple(v_958)) else fail-any) else fail-any) else fail-any)) in
        {428}let v_962: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_961),2-proj-7-tuple(v_933),v_936,4-proj-7-tuple(v_933),5-proj-7-tuple(v_933),6-proj-7-tuple(v_933),7-proj-7-tuple(v_933))) in
        {429}let v_963: bitstring = catch-fail(concat3(v_937,2-proj-3-tuple(v_934),2-proj-2-tuple(v_961))) in
        {430}let (hs_964: handshakestate,message_b_965: bitstring) = (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-7-tuple(v_933))))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-3-tuple(v_934))))) then (if not-caught-fail(v_936) then (if not-caught-fail(v_937) then (if not-caught-fail(v_939) then (if not-caught-fail(v_945) then (if not-caught-fail(v_952) then (if (not-caught-fail(v_961) && success?(is-true(success?(1-proj-2-tuple(v_961))))) then (if not-caught-fail(v_962) then (if not-caught-fail(v_963) then (v_962,v_963) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {431}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {432}insert statestore(bob,alice,sid,statepack_c(hs_964));
        {433}out(pub, message_b_965)
    ) | (
        {488}get statestore(=bob,=alice,=sid,statepack_c(hs_966: handshakestate)) in
        {435}in(pub, message_c_967: bitstring);
        {436}let v_968: bitstring = catch-fail(handshakestateunpack(hs_966)) in
        {437}let v_969: bitstring = catch-fail(deconcat3(message_c_967)) in
        {438}let v_970: bool = catch-fail(true) in
        {439}let v_971: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_968))) in
        {440}let v_972: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_971))) in
        {441}let v_973: aead = catch-fail(decrypt(1-proj-2-tuple(v_972),2-proj-2-tuple(v_972),3-proj-3-tuple(v_971),2-proj-3-tuple(v_969))) in
        {442}let v_974: bitstring = catch-fail(aeadunpack(v_973)) in
        {443}let v_975: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_971))) in
        {444}let v_976: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_972))) && success?(1-proj-3-tuple(v_971))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then cipherstatepack(1-proj-2-tuple(v_975),increment_nonce(2-proj-2-tuple(v_972))) else fail-any) else fail-any)) in
        {445}let v_977: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_969)) && (success?(3-proj-3-tuple(v_971)) && success?(1-proj-3-tuple(v_971)))) then (if (not-caught-fail(v_972) && success?(is-true(success?(1-proj-2-tuple(v_972))))) then (if not-caught-fail(v_973) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-3-tuple(v_974))))) then (if not-caught-fail(v_976) then (v_976,3-proj-3-tuple(v_974),1-proj-3-tuple(v_974)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {446}let v_978: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_977),2-proj-3-tuple(v_971),3-proj-3-tuple(v_971)))) in
        {447}let v_979: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_969)) && success?(symmetricstatepack(1-proj-3-tuple(v_977),2-proj-3-tuple(v_971),3-proj-3-tuple(v_971)))) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-3-tuple(v_978))))) then symmetricstatepack(1-proj-3-tuple(v_978),2-proj-3-tuple(v_978),hash(3-proj-3-tuple(v_978),2-proj-3-tuple(v_969))) else fail-any) else fail-any)) in
        {448}let v_980: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_969)) && success?(1-proj-7-tuple(v_968))) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-3-tuple(v_971))))) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-3-tuple(v_977))))) then (if not-caught-fail(v_979) then (v_979,2-proj-3-tuple(v_977),3-proj-3-tuple(v_977)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_981: key = catch-fail(2-proj-3-tuple(v_980)) in
        {450}let v_982: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_968))) in
        {451}let v_983: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_980))) in
        {452}let v_984: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_983),(if success?(3-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),v_981) else fail-any) else fail-any))) in
        {453}let v_985: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_983),(if success?(3-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),v_981) else fail-any) else fail-any))) in
        {454}let v_986: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_983),(if success?(3-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),v_981) else fail-any) else fail-any))) in
        {455}let v_987: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),v_981) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_983))) then (if not-caught-fail(v_984) then (if not-caught-fail(v_985) then (if not-caught-fail(v_986) then (v_984,v_985,v_986) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_988: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),v_981) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_980))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-3-tuple(v_987))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_987)) then cipherstatepack(2-proj-3-tuple(v_987),minnonce) else fail-any),1-proj-3-tuple(v_987),3-proj-3-tuple(v_983)) else fail-any) else fail-any) else fail-any)) in
        {457}let v_989: bitstring = catch-fail(symmetricstateunpack(v_988)) in
        {458}let v_990: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_989),6-proj-7-tuple(v_968))) in
        {459}let v_991: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_989),6-proj-7-tuple(v_968))) in
        {460}let v_992: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_989),6-proj-7-tuple(v_968))) in
        {461}let v_993: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_968)) && success?(2-proj-3-tuple(v_989))) then (if not-caught-fail(v_990) then (if not-caught-fail(v_991) then (if not-caught-fail(v_992) then (v_990,v_991,v_992) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {462}let v_994: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_989),1-proj-3-tuple(v_993),3-proj-3-tuple(v_989)))) in
        {463}let v_995: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_993)) && success?(symmetricstatepack(1-proj-3-tuple(v_989),1-proj-3-tuple(v_993),3-proj-3-tuple(v_989)))) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then symmetricstatepack(1-proj-3-tuple(v_994),2-proj-3-tuple(v_994),hash(3-proj-3-tuple(v_994),2-proj-3-tuple(v_993))) else fail-any) else fail-any))) in
        {464}let v_996: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_968)) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-3-tuple(v_989))))) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-3-tuple(v_993))))) then (if (not-caught-fail(v_995) && success?(is-true(success?(1-proj-3-tuple(v_995))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_993)) then cipherstatepack(3-proj-3-tuple(v_993),minnonce) else fail-any),1-proj-3-tuple(v_993),3-proj-3-tuple(v_995)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {465}let v_997: bitstring = catch-fail(symmetricstateunpack(v_996)) in
        {466}let v_998: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_997))) in
        {467}let v_999: aead = catch-fail(decrypt(1-proj-2-tuple(v_998),2-proj-2-tuple(v_998),3-proj-3-tuple(v_997),3-proj-3-tuple(v_969))) in
        {468}let v_1000: bitstring = catch-fail(aeadunpack(v_999)) in
        {469}let v_1001: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_997))) in
        {470}let v_1002: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_998))) && success?(1-proj-3-tuple(v_997))) then (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-2-tuple(v_1001))))) then cipherstatepack(1-proj-2-tuple(v_1001),increment_nonce(2-proj-2-tuple(v_998))) else fail-any) else fail-any)) in
        {471}let v_1003: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_969)) && (success?(3-proj-3-tuple(v_997)) && success?(1-proj-3-tuple(v_997)))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then (if not-caught-fail(v_999) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if not-caught-fail(v_1002) then (v_1002,3-proj-3-tuple(v_1000),1-proj-3-tuple(v_1000)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let v_1004: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1003),2-proj-3-tuple(v_997),3-proj-3-tuple(v_997)))) in
        {473}let v_1005: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_969)) && success?(symmetricstatepack(1-proj-3-tuple(v_1003),2-proj-3-tuple(v_997),3-proj-3-tuple(v_997)))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-3-tuple(v_1004))))) then symmetricstatepack(1-proj-3-tuple(v_1004),2-proj-3-tuple(v_1004),hash(3-proj-3-tuple(v_1004),3-proj-3-tuple(v_969))) else fail-any) else fail-any)) in
        {474}let v_1006: bitstring = catch-fail((if success?(3-proj-3-tuple(v_969)) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-3-tuple(v_997))))) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if not-caught-fail(v_1005) then (v_1005,2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {475}let v_1007: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {476}let v_1008: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1006),2-proj-7-tuple(v_968),3-proj-7-tuple(v_968),v_981,5-proj-7-tuple(v_968),6-proj-7-tuple(v_968),7-proj-7-tuple(v_968))) in
        {477}let v_1009: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1006))) in
        {478}let v_1010: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1009),zero)) in
        {479}let v_1011: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1009),zero)) in
        {480}let v_1012: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1009),zero)) in
        {481}let v_1013: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1009)) then (if not-caught-fail(v_1010) then (if not-caught-fail(v_1011) then (if not-caught-fail(v_1012) then (v_1010,v_1011,v_1012) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {482}let v_1014: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1013)) then cipherstatepack(1-proj-3-tuple(v_1013),minnonce) else fail-any)) in
        {483}let v_1015: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1013)) then cipherstatepack(2-proj-3-tuple(v_1013),minnonce) else fail-any)) in
        {484}let v_1016: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1006)) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then (if (not-caught-fail(v_1013) && success?(is-true(success?(1-proj-3-tuple(v_1013))))) then (if not-caught-fail(v_1014) then (if not-caught-fail(v_1015) then (1-proj-3-tuple(v_1006),v_1014,v_1015) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let (hs_1017: handshakestate,plaintext_c: bitstring,valid_1018: bool,cs1_1019: cipherstate,cs2_1020: cipherstate) = (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-7-tuple(v_968))))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then (if not-caught-fail(v_970) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-3-tuple(v_980))))) then (if not-caught-fail(v_981) then (if not-caught-fail(v_988) then (if not-caught-fail(v_996) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-3-tuple(v_1006))))) then (if ((3-proj-3-tuple(v_980) && 3-proj-3-tuple(v_1006)) && (v_981 = getpublickey((if not-caught-fail(v_1007) then keypairpack(validkey(v_1007),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_1008) then (if (not-caught-fail(v_1016) && success?(is-true(success?(1-proj-3-tuple(v_1016))))) then (v_1008,2-proj-3-tuple(v_1006),true,2-proj-3-tuple(v_1016),3-proj-3-tuple(v_1016)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {486}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {487}insert statestore(bob,alice,sid,statepack_d(hs_1017,cs1_1019,cs2_1020))
    ) | (
        {489}!
        {508}get statestore(=bob,=alice,=sid,statepack_d(hs_1021: handshakestate,cs1_1022: cipherstate,cs2_1023: cipherstate)) in
        {490}let hs_1024: handshakestate = handshakestatesetcs(hs_1021,cs2_1023) in
        {491}let v_1025: bitstring = catch-fail(handshakestateunpack(hs_1024)) in
        {492}let v_1026: bitstring = catch-fail((empty,empty,empty)) in
        {493}let v_1027: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1025))) in
        {494}let v_1028: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1027))) in
        {495}let v_1029: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1028),2-proj-2-tuple(v_1028),3-proj-3-tuple(v_1027),msg_d(bob,alice,sid))) in
        {496}let v_1030: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1027))) in
        {497}let v_1031: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1028))) && success?(1-proj-3-tuple(v_1027))) then (if (not-caught-fail(v_1030) && success?(is-true(success?(1-proj-2-tuple(v_1030))))) then cipherstatepack(1-proj-2-tuple(v_1030),increment_nonce(2-proj-2-tuple(v_1028))) else fail-any) else fail-any)) in
        {498}let v_1032: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1027)) && success?(1-proj-3-tuple(v_1027))) then (if (not-caught-fail(v_1028) && success?(is-true(success?(1-proj-2-tuple(v_1028))))) then (if not-caught-fail(v_1029) then (if not-caught-fail(v_1031) then (v_1031,v_1029) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {499}let v_1033: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1032),2-proj-3-tuple(v_1027),3-proj-3-tuple(v_1027)))) in
        {500}let v_1034: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1032)) && success?(symmetricstatepack(1-proj-2-tuple(v_1032),2-proj-3-tuple(v_1027),3-proj-3-tuple(v_1027)))) then (if (not-caught-fail(v_1033) && success?(is-true(success?(1-proj-3-tuple(v_1033))))) then symmetricstatepack(1-proj-3-tuple(v_1033),2-proj-3-tuple(v_1033),hash(3-proj-3-tuple(v_1033),2-proj-2-tuple(v_1032))) else fail-any) else fail-any)) in
        {501}let v_1035: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1025)) then (if (not-caught-fail(v_1027) && success?(is-true(success?(1-proj-3-tuple(v_1027))))) then (if (not-caught-fail(v_1032) && success?(is-true(success?(1-proj-2-tuple(v_1032))))) then (if not-caught-fail(v_1034) then (v_1034,2-proj-2-tuple(v_1032)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {502}let v_1036: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1035),2-proj-7-tuple(v_1025),3-proj-7-tuple(v_1025),4-proj-7-tuple(v_1025),5-proj-7-tuple(v_1025),6-proj-7-tuple(v_1025),7-proj-7-tuple(v_1025))) in
        {503}let v_1037: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1026),2-proj-3-tuple(v_1026),2-proj-2-tuple(v_1035))) in
        {504}let (hs_1038: handshakestate,message_d_1039: bitstring) = (if (not-caught-fail(v_1025) && success?(is-true(success?(1-proj-7-tuple(v_1025))))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-3-tuple(v_1026))))) then (if (not-caught-fail(v_1035) && success?(is-true(success?(1-proj-2-tuple(v_1035))))) then (if not-caught-fail(v_1036) then (if not-caught-fail(v_1037) then (v_1036,v_1037) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {505}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {506}insert statestore(bob,alice,sid,statepack_e(hs_1038,cs1_1022,handshakestategetcs(hs_1038)));
        {507}out(pub, message_d_1039)
    ) | (
        {509}!
        {529}get statestore(=bob,=alice,=sid,statepack_e(hs_1040: handshakestate,cs1_1041: cipherstate,cs2_1042: cipherstate)) in
        {510}let hs_1043: handshakestate = handshakestatesetcs(hs_1040,cs1_1041) in
        {511}in(pub, message_e_1044: bitstring);
        {512}let v_1045: bitstring = catch-fail(handshakestateunpack(hs_1043)) in
        {513}let v_1046: bitstring = catch-fail(deconcat3(message_e_1044)) in
        {514}let v_1047: bool = catch-fail(true) in
        {515}let v_1048: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1045))) in
        {516}let v_1049: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1048))) in
        {517}let v_1050: aead = catch-fail(decrypt(1-proj-2-tuple(v_1049),2-proj-2-tuple(v_1049),3-proj-3-tuple(v_1048),3-proj-3-tuple(v_1046))) in
        {518}let v_1051: bitstring = catch-fail(aeadunpack(v_1050)) in
        {519}let v_1052: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1048))) in
        {520}let v_1053: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1049))) && success?(1-proj-3-tuple(v_1048))) then (if (not-caught-fail(v_1052) && success?(is-true(success?(1-proj-2-tuple(v_1052))))) then cipherstatepack(1-proj-2-tuple(v_1052),increment_nonce(2-proj-2-tuple(v_1049))) else fail-any) else fail-any)) in
        {521}let v_1054: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1046)) && (success?(3-proj-3-tuple(v_1048)) && success?(1-proj-3-tuple(v_1048)))) then (if (not-caught-fail(v_1049) && success?(is-true(success?(1-proj-2-tuple(v_1049))))) then (if not-caught-fail(v_1050) then (if (not-caught-fail(v_1051) && success?(is-true(success?(1-proj-3-tuple(v_1051))))) then (if not-caught-fail(v_1053) then (v_1053,3-proj-3-tuple(v_1051),1-proj-3-tuple(v_1051)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {522}let v_1055: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1054),2-proj-3-tuple(v_1048),3-proj-3-tuple(v_1048)))) in
        {523}let v_1056: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1046)) && success?(symmetricstatepack(1-proj-3-tuple(v_1054),2-proj-3-tuple(v_1048),3-proj-3-tuple(v_1048)))) then (if (not-caught-fail(v_1055) && success?(is-true(success?(1-proj-3-tuple(v_1055))))) then symmetricstatepack(1-proj-3-tuple(v_1055),2-proj-3-tuple(v_1055),hash(3-proj-3-tuple(v_1055),3-proj-3-tuple(v_1046))) else fail-any) else fail-any)) in
        {524}let v_1057: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1046)) && success?(1-proj-7-tuple(v_1045))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then (if (not-caught-fail(v_1054) && success?(is-true(success?(1-proj-3-tuple(v_1054))))) then (if not-caught-fail(v_1056) then (v_1056,2-proj-3-tuple(v_1054),3-proj-3-tuple(v_1054)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {525}let v_1058: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1057),2-proj-7-tuple(v_1045),3-proj-7-tuple(v_1045),4-proj-7-tuple(v_1045),5-proj-7-tuple(v_1045),6-proj-7-tuple(v_1045),7-proj-7-tuple(v_1045))) in
        {526}let (hs_1059: handshakestate,plaintext_e: bitstring,valid_1060: bool) = (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-7-tuple(v_1045))))) then (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-3-tuple(v_1046))))) then (if not-caught-fail(v_1047) then (if (not-caught-fail(v_1057) && success?(is-true(success?(1-proj-3-tuple(v_1057))))) then (if (v_1047 && 3-proj-3-tuple(v_1057)) then (if not-caught-fail(v_1058) then (v_1058,2-proj-3-tuple(v_1057),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {527}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {528}event RecvEnd(valid_1060)
    ) | (
        {530}event LeakPsk(phase0,alice,bob);
        {531}out(pub, key_psk(alice,bob))
    ) | (
        {532}phase 1;
        {533}event LeakPsk(phase1,alice,bob);
        {534}out(pub, key_psk(alice,bob))
    ) | (
        0
    )
) | (
    {535}let s_1061: keypair = keypairpack(empty,empty) in
    (
        {536}let e_1062: keypair = keypairpack(empty,empty) in
        {537}let rs_1063: key = empty in
        {538}let re_1064: key = empty in
        {539}let v_1065: bitstring = catch-fail(hash(somename,empty)) in
        {540}let v_1066: key = catch-fail(v_1065) in
        {541}let v_1067: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {542}let v_1068: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1065) then (if not-caught-fail(v_1066) then (if not-caught-fail(v_1067) then symmetricstatepack(v_1067,v_1066,v_1065) else fail-any) else fail-any) else fail-any))) in
        {543}let v_1069: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1065) then (if not-caught-fail(v_1066) then (if not-caught-fail(v_1067) then symmetricstatepack(v_1067,v_1066,v_1065) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1068) && success?(is-true(success?(1-proj-3-tuple(v_1068))))) then symmetricstatepack(1-proj-3-tuple(v_1068),2-proj-3-tuple(v_1068),hash(3-proj-3-tuple(v_1068),empty)) else fail-any) else fail-any)) in
        {544}let hs_1070: handshakestate = (if not-caught-fail(v_1069) then handshakestatepack(v_1069,s_1061,e_1062,rs_1063,re_1064,key_psk(charlie,bob),false) else fail-any) in
        {545}insert statestore(bob,charlie,sid,statepack_a(hs_1070))
    ) | (
        {573}get statestore(=bob,=charlie,=sid,statepack_a(hs_1071: handshakestate)) in
        {546}in(pub, message_a_1072: bitstring);
        {547}let v_1073: bitstring = catch-fail(handshakestateunpack(hs_1071)) in
        {548}let v_1074: bitstring = catch-fail(deconcat3(message_a_1072)) in
        {549}let v_1075: bool = catch-fail(true) in
        {550}let v_1076: key = catch-fail(1-proj-3-tuple(v_1074)) in
        {551}let v_1077: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1073))) in
        {552}let v_1078: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1073)) then (if (not-caught-fail(v_1077) && success?(is-true(success?(1-proj-3-tuple(v_1077))))) then symmetricstatepack(1-proj-3-tuple(v_1077),2-proj-3-tuple(v_1077),hash(3-proj-3-tuple(v_1077),v_1076)) else fail-any) else fail-any)) in
        {553}let v_1079: bitstring = catch-fail(symmetricstateunpack(v_1078)) in
        {554}let v_1080: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1079),v_1076)) in
        {555}let v_1081: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1079),v_1076)) in
        {556}let v_1082: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1079),v_1076)) in
        {557}let v_1083: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1079)) then (if not-caught-fail(v_1080) then (if not-caught-fail(v_1081) then (if not-caught-fail(v_1082) then (v_1080,v_1081,v_1082) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {558}let v_1084: symmetricstate = catch-fail((if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-3-tuple(v_1079))))) then (if (not-caught-fail(v_1083) && success?(is-true(success?(1-proj-3-tuple(v_1083))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1083)) then cipherstatepack(2-proj-3-tuple(v_1083),minnonce) else fail-any),1-proj-3-tuple(v_1083),3-proj-3-tuple(v_1079)) else fail-any) else fail-any)) in
        {559}let v_1085: bitstring = catch-fail(symmetricstateunpack(v_1084)) in
        {560}let v_1086: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1085))) in
        {561}let v_1087: aead = catch-fail(decrypt(1-proj-2-tuple(v_1086),2-proj-2-tuple(v_1086),3-proj-3-tuple(v_1085),3-proj-3-tuple(v_1074))) in
        {562}let v_1088: bitstring = catch-fail(aeadunpack(v_1087)) in
        {563}let v_1089: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1085))) in
        {564}let v_1090: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1086))) && success?(1-proj-3-tuple(v_1085))) then (if (not-caught-fail(v_1089) && success?(is-true(success?(1-proj-2-tuple(v_1089))))) then cipherstatepack(1-proj-2-tuple(v_1089),increment_nonce(2-proj-2-tuple(v_1086))) else fail-any) else fail-any)) in
        {565}let v_1091: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1074)) && (success?(3-proj-3-tuple(v_1085)) && success?(1-proj-3-tuple(v_1085)))) then (if (not-caught-fail(v_1086) && success?(is-true(success?(1-proj-2-tuple(v_1086))))) then (if not-caught-fail(v_1087) then (if (not-caught-fail(v_1088) && success?(is-true(success?(1-proj-3-tuple(v_1088))))) then (if not-caught-fail(v_1090) then (v_1090,3-proj-3-tuple(v_1088),1-proj-3-tuple(v_1088)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {566}let v_1092: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1091),2-proj-3-tuple(v_1085),3-proj-3-tuple(v_1085)))) in
        {567}let v_1093: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1074)) && success?(symmetricstatepack(1-proj-3-tuple(v_1091),2-proj-3-tuple(v_1085),3-proj-3-tuple(v_1085)))) then (if (not-caught-fail(v_1092) && success?(is-true(success?(1-proj-3-tuple(v_1092))))) then symmetricstatepack(1-proj-3-tuple(v_1092),2-proj-3-tuple(v_1092),hash(3-proj-3-tuple(v_1092),3-proj-3-tuple(v_1074))) else fail-any) else fail-any)) in
        {568}let v_1094: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1074)) then (if (not-caught-fail(v_1085) && success?(is-true(success?(1-proj-3-tuple(v_1085))))) then (if (not-caught-fail(v_1091) && success?(is-true(success?(1-proj-3-tuple(v_1091))))) then (if not-caught-fail(v_1093) then (v_1093,2-proj-3-tuple(v_1091),3-proj-3-tuple(v_1091)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {569}let v_1095: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1094),2-proj-7-tuple(v_1073),3-proj-7-tuple(v_1073),4-proj-7-tuple(v_1073),v_1076,6-proj-7-tuple(v_1073),7-proj-7-tuple(v_1073))) in
        {570}let (hs_1096: handshakestate,plaintext_a_1097: bitstring,valid_1098: bool) = (if (not-caught-fail(v_1073) && success?(is-true(success?(1-proj-7-tuple(v_1073))))) then (if (not-caught-fail(v_1074) && success?(is-true(success?(1-proj-3-tuple(v_1074))))) then (if not-caught-fail(v_1075) then (if not-caught-fail(v_1076) then (if not-caught-fail(v_1078) then (if not-caught-fail(v_1084) then (if (not-caught-fail(v_1094) && success?(is-true(success?(1-proj-3-tuple(v_1094))))) then (if (v_1075 && 3-proj-3-tuple(v_1094)) then (if not-caught-fail(v_1095) then (v_1095,2-proj-3-tuple(v_1094),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {571}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1097);
        {572}insert statestore(bob,charlie,sid,statepack_b(hs_1096))
    ) | (
        {609}get statestore(=bob,=charlie,=sid,statepack_b(hs_1099: handshakestate)) in
        {574}let v_1100: bitstring = catch-fail(handshakestateunpack(hs_1099)) in
        {575}let v_1101: bitstring = catch-fail((empty,empty,empty)) in
        {576}let v_1102: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {577}let v_1103: keypair = catch-fail((if not-caught-fail(v_1102) then keypairpack(validkey(v_1102),key_e(bob,charlie,sid)) else fail-any)) in
        {578}let v_1104: bitstring = catch-fail(getpublickey(v_1103)) in
        {579}let v_1105: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1100))) in
        {580}let v_1106: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1105) && success?(is-true(success?(1-proj-3-tuple(v_1105))))) then symmetricstatepack(1-proj-3-tuple(v_1105),2-proj-3-tuple(v_1105),hash(3-proj-3-tuple(v_1105),v_1104)) else fail-any) else fail-any)) in
        {581}let v_1107: bitstring = catch-fail(symmetricstateunpack(v_1106)) in
        {582}let v_1108: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1107),getpublickey(v_1103))) in
        {583}let v_1109: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1107),getpublickey(v_1103))) in
        {584}let v_1110: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1107),getpublickey(v_1103))) in
        {585}let v_1111: bitstring = catch-fail((if (success?(getpublickey(v_1103)) && success?(2-proj-3-tuple(v_1107))) then (if not-caught-fail(v_1108) then (if not-caught-fail(v_1109) then (if not-caught-fail(v_1110) then (v_1108,v_1109,v_1110) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {586}let v_1112: symmetricstate = catch-fail((if success?(getpublickey(v_1103)) then (if (not-caught-fail(v_1107) && success?(is-true(success?(1-proj-3-tuple(v_1107))))) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-3-tuple(v_1111))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1111)) then cipherstatepack(2-proj-3-tuple(v_1111),minnonce) else fail-any),1-proj-3-tuple(v_1111),3-proj-3-tuple(v_1107)) else fail-any) else fail-any) else fail-any)) in
        {587}let v_1113: bitstring = catch-fail(keypairunpack(v_1103)) in
        {588}let v_1114: bitstring = catch-fail(symmetricstateunpack(v_1112)) in
        {589}let v_1115: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1114),(if success?(5-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),5-proj-7-tuple(v_1100)) else fail-any) else fail-any))) in
        {590}let v_1116: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1114),(if success?(5-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),5-proj-7-tuple(v_1100)) else fail-any) else fail-any))) in
        {591}let v_1117: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1114),(if success?(5-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),5-proj-7-tuple(v_1100)) else fail-any) else fail-any))) in
        {592}let v_1118: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),5-proj-7-tuple(v_1100)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1114))) then (if not-caught-fail(v_1115) then (if not-caught-fail(v_1116) then (if not-caught-fail(v_1117) then (v_1115,v_1116,v_1117) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {593}let v_1119: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1100)) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-2-tuple(v_1113))))) then dhexp(2-proj-2-tuple(v_1113),5-proj-7-tuple(v_1100)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1114) && success?(is-true(success?(1-proj-3-tuple(v_1114))))) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1118)) then cipherstatepack(2-proj-3-tuple(v_1118),minnonce) else fail-any),1-proj-3-tuple(v_1118),3-proj-3-tuple(v_1114)) else fail-any) else fail-any) else fail-any)) in
        {594}let v_1120: bitstring = catch-fail(symmetricstateunpack(v_1119)) in
        {595}let v_1121: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1120))) in
        {596}let v_1122: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1121),2-proj-2-tuple(v_1121),3-proj-3-tuple(v_1120),msg_b(bob,charlie,sid))) in
        {597}let v_1123: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1120))) in
        {598}let v_1124: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1121))) && success?(1-proj-3-tuple(v_1120))) then (if (not-caught-fail(v_1123) && success?(is-true(success?(1-proj-2-tuple(v_1123))))) then cipherstatepack(1-proj-2-tuple(v_1123),increment_nonce(2-proj-2-tuple(v_1121))) else fail-any) else fail-any)) in
        {599}let v_1125: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1120)) && success?(1-proj-3-tuple(v_1120))) then (if (not-caught-fail(v_1121) && success?(is-true(success?(1-proj-2-tuple(v_1121))))) then (if not-caught-fail(v_1122) then (if not-caught-fail(v_1124) then (v_1124,v_1122) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {600}let v_1126: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1125),2-proj-3-tuple(v_1120),3-proj-3-tuple(v_1120)))) in
        {601}let v_1127: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1125)) && success?(symmetricstatepack(1-proj-2-tuple(v_1125),2-proj-3-tuple(v_1120),3-proj-3-tuple(v_1120)))) then (if (not-caught-fail(v_1126) && success?(is-true(success?(1-proj-3-tuple(v_1126))))) then symmetricstatepack(1-proj-3-tuple(v_1126),2-proj-3-tuple(v_1126),hash(3-proj-3-tuple(v_1126),2-proj-2-tuple(v_1125))) else fail-any) else fail-any)) in
        {602}let v_1128: bitstring = catch-fail((if (not-caught-fail(v_1120) && success?(is-true(success?(1-proj-3-tuple(v_1120))))) then (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-2-tuple(v_1125))))) then (if not-caught-fail(v_1127) then (v_1127,2-proj-2-tuple(v_1125)) else fail-any) else fail-any) else fail-any)) in
        {603}let v_1129: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1128),2-proj-7-tuple(v_1100),v_1103,4-proj-7-tuple(v_1100),5-proj-7-tuple(v_1100),6-proj-7-tuple(v_1100),7-proj-7-tuple(v_1100))) in
        {604}let v_1130: bitstring = catch-fail(concat3(v_1104,2-proj-3-tuple(v_1101),2-proj-2-tuple(v_1128))) in
        {605}let (hs_1131: handshakestate,message_b_1132: bitstring) = (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-7-tuple(v_1100))))) then (if (not-caught-fail(v_1101) && success?(is-true(success?(1-proj-3-tuple(v_1101))))) then (if not-caught-fail(v_1103) then (if not-caught-fail(v_1104) then (if not-caught-fail(v_1106) then (if not-caught-fail(v_1112) then (if not-caught-fail(v_1119) then (if (not-caught-fail(v_1128) && success?(is-true(success?(1-proj-2-tuple(v_1128))))) then (if not-caught-fail(v_1129) then (if not-caught-fail(v_1130) then (v_1129,v_1130) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {606}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {607}insert statestore(bob,charlie,sid,statepack_c(hs_1131));
        {608}out(pub, message_b_1132)
    ) | (
        {663}get statestore(=bob,=charlie,=sid,statepack_c(hs_1133: handshakestate)) in
        {610}in(pub, message_c_1134: bitstring);
        {611}let v_1135: bitstring = catch-fail(handshakestateunpack(hs_1133)) in
        {612}let v_1136: bitstring = catch-fail(deconcat3(message_c_1134)) in
        {613}let v_1137: bool = catch-fail(true) in
        {614}let v_1138: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1135))) in
        {615}let v_1139: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1138))) in
        {616}let v_1140: aead = catch-fail(decrypt(1-proj-2-tuple(v_1139),2-proj-2-tuple(v_1139),3-proj-3-tuple(v_1138),2-proj-3-tuple(v_1136))) in
        {617}let v_1141: bitstring = catch-fail(aeadunpack(v_1140)) in
        {618}let v_1142: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1138))) in
        {619}let v_1143: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1139))) && success?(1-proj-3-tuple(v_1138))) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-2-tuple(v_1142))))) then cipherstatepack(1-proj-2-tuple(v_1142),increment_nonce(2-proj-2-tuple(v_1139))) else fail-any) else fail-any)) in
        {620}let v_1144: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1136)) && (success?(3-proj-3-tuple(v_1138)) && success?(1-proj-3-tuple(v_1138)))) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-2-tuple(v_1139))))) then (if not-caught-fail(v_1140) then (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-3-tuple(v_1141))))) then (if not-caught-fail(v_1143) then (v_1143,3-proj-3-tuple(v_1141),1-proj-3-tuple(v_1141)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {621}let v_1145: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1144),2-proj-3-tuple(v_1138),3-proj-3-tuple(v_1138)))) in
        {622}let v_1146: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1136)) && success?(symmetricstatepack(1-proj-3-tuple(v_1144),2-proj-3-tuple(v_1138),3-proj-3-tuple(v_1138)))) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-3-tuple(v_1145))))) then symmetricstatepack(1-proj-3-tuple(v_1145),2-proj-3-tuple(v_1145),hash(3-proj-3-tuple(v_1145),2-proj-3-tuple(v_1136))) else fail-any) else fail-any)) in
        {623}let v_1147: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1136)) && success?(1-proj-7-tuple(v_1135))) then (if (not-caught-fail(v_1138) && success?(is-true(success?(1-proj-3-tuple(v_1138))))) then (if (not-caught-fail(v_1144) && success?(is-true(success?(1-proj-3-tuple(v_1144))))) then (if not-caught-fail(v_1146) then (v_1146,2-proj-3-tuple(v_1144),3-proj-3-tuple(v_1144)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {624}let v_1148: key = catch-fail(2-proj-3-tuple(v_1147)) in
        {625}let v_1149: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1135))) in
        {626}let v_1150: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1147))) in
        {627}let v_1151: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1150),(if success?(3-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),v_1148) else fail-any) else fail-any))) in
        {628}let v_1152: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1150),(if success?(3-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),v_1148) else fail-any) else fail-any))) in
        {629}let v_1153: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1150),(if success?(3-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),v_1148) else fail-any) else fail-any))) in
        {630}let v_1154: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),v_1148) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1150))) then (if not-caught-fail(v_1151) then (if not-caught-fail(v_1152) then (if not-caught-fail(v_1153) then (v_1151,v_1152,v_1153) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {631}let v_1155: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-2-tuple(v_1149))))) then dhexp(2-proj-2-tuple(v_1149),v_1148) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1147))) then (if (not-caught-fail(v_1150) && success?(is-true(success?(1-proj-3-tuple(v_1150))))) then (if (not-caught-fail(v_1154) && success?(is-true(success?(1-proj-3-tuple(v_1154))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1154)) then cipherstatepack(2-proj-3-tuple(v_1154),minnonce) else fail-any),1-proj-3-tuple(v_1154),3-proj-3-tuple(v_1150)) else fail-any) else fail-any) else fail-any)) in
        {632}let v_1156: bitstring = catch-fail(symmetricstateunpack(v_1155)) in
        {633}let v_1157: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1156),6-proj-7-tuple(v_1135))) in
        {634}let v_1158: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1156),6-proj-7-tuple(v_1135))) in
        {635}let v_1159: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1156),6-proj-7-tuple(v_1135))) in
        {636}let v_1160: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1135)) && success?(2-proj-3-tuple(v_1156))) then (if not-caught-fail(v_1157) then (if not-caught-fail(v_1158) then (if not-caught-fail(v_1159) then (v_1157,v_1158,v_1159) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {637}let v_1161: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1156),1-proj-3-tuple(v_1160),3-proj-3-tuple(v_1156)))) in
        {638}let v_1162: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1160)) && success?(symmetricstatepack(1-proj-3-tuple(v_1156),1-proj-3-tuple(v_1160),3-proj-3-tuple(v_1156)))) then (if (not-caught-fail(v_1161) && success?(is-true(success?(1-proj-3-tuple(v_1161))))) then symmetricstatepack(1-proj-3-tuple(v_1161),2-proj-3-tuple(v_1161),hash(3-proj-3-tuple(v_1161),2-proj-3-tuple(v_1160))) else fail-any) else fail-any))) in
        {639}let v_1163: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1135)) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-3-tuple(v_1156))))) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-3-tuple(v_1160))))) then (if (not-caught-fail(v_1162) && success?(is-true(success?(1-proj-3-tuple(v_1162))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1160)) then cipherstatepack(3-proj-3-tuple(v_1160),minnonce) else fail-any),1-proj-3-tuple(v_1160),3-proj-3-tuple(v_1162)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {640}let v_1164: bitstring = catch-fail(symmetricstateunpack(v_1163)) in
        {641}let v_1165: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1164))) in
        {642}let v_1166: aead = catch-fail(decrypt(1-proj-2-tuple(v_1165),2-proj-2-tuple(v_1165),3-proj-3-tuple(v_1164),3-proj-3-tuple(v_1136))) in
        {643}let v_1167: bitstring = catch-fail(aeadunpack(v_1166)) in
        {644}let v_1168: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1164))) in
        {645}let v_1169: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1165))) && success?(1-proj-3-tuple(v_1164))) then (if (not-caught-fail(v_1168) && success?(is-true(success?(1-proj-2-tuple(v_1168))))) then cipherstatepack(1-proj-2-tuple(v_1168),increment_nonce(2-proj-2-tuple(v_1165))) else fail-any) else fail-any)) in
        {646}let v_1170: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1136)) && (success?(3-proj-3-tuple(v_1164)) && success?(1-proj-3-tuple(v_1164)))) then (if (not-caught-fail(v_1165) && success?(is-true(success?(1-proj-2-tuple(v_1165))))) then (if not-caught-fail(v_1166) then (if (not-caught-fail(v_1167) && success?(is-true(success?(1-proj-3-tuple(v_1167))))) then (if not-caught-fail(v_1169) then (v_1169,3-proj-3-tuple(v_1167),1-proj-3-tuple(v_1167)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {647}let v_1171: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1170),2-proj-3-tuple(v_1164),3-proj-3-tuple(v_1164)))) in
        {648}let v_1172: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1136)) && success?(symmetricstatepack(1-proj-3-tuple(v_1170),2-proj-3-tuple(v_1164),3-proj-3-tuple(v_1164)))) then (if (not-caught-fail(v_1171) && success?(is-true(success?(1-proj-3-tuple(v_1171))))) then symmetricstatepack(1-proj-3-tuple(v_1171),2-proj-3-tuple(v_1171),hash(3-proj-3-tuple(v_1171),3-proj-3-tuple(v_1136))) else fail-any) else fail-any)) in
        {649}let v_1173: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1136)) then (if (not-caught-fail(v_1164) && success?(is-true(success?(1-proj-3-tuple(v_1164))))) then (if (not-caught-fail(v_1170) && success?(is-true(success?(1-proj-3-tuple(v_1170))))) then (if not-caught-fail(v_1172) then (v_1172,2-proj-3-tuple(v_1170),3-proj-3-tuple(v_1170)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {650}let v_1174: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {651}let v_1175: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1173),2-proj-7-tuple(v_1135),3-proj-7-tuple(v_1135),v_1148,5-proj-7-tuple(v_1135),6-proj-7-tuple(v_1135),7-proj-7-tuple(v_1135))) in
        {652}let v_1176: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1173))) in
        {653}let v_1177: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1176),zero)) in
        {654}let v_1178: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1176),zero)) in
        {655}let v_1179: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1176),zero)) in
        {656}let v_1180: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1176)) then (if not-caught-fail(v_1177) then (if not-caught-fail(v_1178) then (if not-caught-fail(v_1179) then (v_1177,v_1178,v_1179) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {657}let v_1181: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1180)) then cipherstatepack(1-proj-3-tuple(v_1180),minnonce) else fail-any)) in
        {658}let v_1182: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1180)) then cipherstatepack(2-proj-3-tuple(v_1180),minnonce) else fail-any)) in
        {659}let v_1183: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1173)) then (if (not-caught-fail(v_1176) && success?(is-true(success?(1-proj-3-tuple(v_1176))))) then (if (not-caught-fail(v_1180) && success?(is-true(success?(1-proj-3-tuple(v_1180))))) then (if not-caught-fail(v_1181) then (if not-caught-fail(v_1182) then (1-proj-3-tuple(v_1173),v_1181,v_1182) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {660}let (hs_1184: handshakestate,plaintext_c_1185: bitstring,valid_1186: bool,cs1_1187: cipherstate,cs2_1188: cipherstate) = (if (not-caught-fail(v_1135) && success?(is-true(success?(1-proj-7-tuple(v_1135))))) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-3-tuple(v_1136))))) then (if not-caught-fail(v_1137) then (if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then (if not-caught-fail(v_1148) then (if not-caught-fail(v_1155) then (if not-caught-fail(v_1163) then (if (not-caught-fail(v_1173) && success?(is-true(success?(1-proj-3-tuple(v_1173))))) then (if ((3-proj-3-tuple(v_1147) && 3-proj-3-tuple(v_1173)) && (v_1148 = getpublickey((if not-caught-fail(v_1174) then keypairpack(validkey(v_1174),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1175) then (if (not-caught-fail(v_1183) && success?(is-true(success?(1-proj-3-tuple(v_1183))))) then (v_1175,2-proj-3-tuple(v_1173),true,2-proj-3-tuple(v_1183),3-proj-3-tuple(v_1183)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {661}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1185);
        {662}insert statestore(bob,charlie,sid,statepack_d(hs_1184,cs1_1187,cs2_1188))
    ) | (
        {664}!
        {683}get statestore(=bob,=charlie,=sid,statepack_d(hs_1189: handshakestate,cs1_1190: cipherstate,cs2_1191: cipherstate)) in
        {665}let hs_1192: handshakestate = handshakestatesetcs(hs_1189,cs2_1191) in
        {666}let v_1193: bitstring = catch-fail(handshakestateunpack(hs_1192)) in
        {667}let v_1194: bitstring = catch-fail((empty,empty,empty)) in
        {668}let v_1195: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1193))) in
        {669}let v_1196: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1195))) in
        {670}let v_1197: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1196),2-proj-2-tuple(v_1196),3-proj-3-tuple(v_1195),msg_d(bob,charlie,sid))) in
        {671}let v_1198: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1195))) in
        {672}let v_1199: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1196))) && success?(1-proj-3-tuple(v_1195))) then (if (not-caught-fail(v_1198) && success?(is-true(success?(1-proj-2-tuple(v_1198))))) then cipherstatepack(1-proj-2-tuple(v_1198),increment_nonce(2-proj-2-tuple(v_1196))) else fail-any) else fail-any)) in
        {673}let v_1200: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1195)) && success?(1-proj-3-tuple(v_1195))) then (if (not-caught-fail(v_1196) && success?(is-true(success?(1-proj-2-tuple(v_1196))))) then (if not-caught-fail(v_1197) then (if not-caught-fail(v_1199) then (v_1199,v_1197) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {674}let v_1201: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1200),2-proj-3-tuple(v_1195),3-proj-3-tuple(v_1195)))) in
        {675}let v_1202: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1200)) && success?(symmetricstatepack(1-proj-2-tuple(v_1200),2-proj-3-tuple(v_1195),3-proj-3-tuple(v_1195)))) then (if (not-caught-fail(v_1201) && success?(is-true(success?(1-proj-3-tuple(v_1201))))) then symmetricstatepack(1-proj-3-tuple(v_1201),2-proj-3-tuple(v_1201),hash(3-proj-3-tuple(v_1201),2-proj-2-tuple(v_1200))) else fail-any) else fail-any)) in
        {676}let v_1203: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1193)) then (if (not-caught-fail(v_1195) && success?(is-true(success?(1-proj-3-tuple(v_1195))))) then (if (not-caught-fail(v_1200) && success?(is-true(success?(1-proj-2-tuple(v_1200))))) then (if not-caught-fail(v_1202) then (v_1202,2-proj-2-tuple(v_1200)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {677}let v_1204: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1203),2-proj-7-tuple(v_1193),3-proj-7-tuple(v_1193),4-proj-7-tuple(v_1193),5-proj-7-tuple(v_1193),6-proj-7-tuple(v_1193),7-proj-7-tuple(v_1193))) in
        {678}let v_1205: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1194),2-proj-3-tuple(v_1194),2-proj-2-tuple(v_1203))) in
        {679}let (hs_1206: handshakestate,message_d_1207: bitstring) = (if (not-caught-fail(v_1193) && success?(is-true(success?(1-proj-7-tuple(v_1193))))) then (if (not-caught-fail(v_1194) && success?(is-true(success?(1-proj-3-tuple(v_1194))))) then (if (not-caught-fail(v_1203) && success?(is-true(success?(1-proj-2-tuple(v_1203))))) then (if not-caught-fail(v_1204) then (if not-caught-fail(v_1205) then (v_1204,v_1205) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {680}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {681}insert statestore(bob,charlie,sid,statepack_e(hs_1206,cs1_1190,handshakestategetcs(hs_1206)));
        {682}out(pub, message_d_1207)
    ) | (
        {684}!
        {704}get statestore(=bob,=charlie,=sid,statepack_e(hs_1208: handshakestate,cs1_1209: cipherstate,cs2_1210: cipherstate)) in
        {685}let hs_1211: handshakestate = handshakestatesetcs(hs_1208,cs1_1209) in
        {686}in(pub, message_e_1212: bitstring);
        {687}let v_1213: bitstring = catch-fail(handshakestateunpack(hs_1211)) in
        {688}let v_1214: bitstring = catch-fail(deconcat3(message_e_1212)) in
        {689}let v_1215: bool = catch-fail(true) in
        {690}let v_1216: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1213))) in
        {691}let v_1217: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1216))) in
        {692}let v_1218: aead = catch-fail(decrypt(1-proj-2-tuple(v_1217),2-proj-2-tuple(v_1217),3-proj-3-tuple(v_1216),3-proj-3-tuple(v_1214))) in
        {693}let v_1219: bitstring = catch-fail(aeadunpack(v_1218)) in
        {694}let v_1220: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1216))) in
        {695}let v_1221: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1217))) && success?(1-proj-3-tuple(v_1216))) then (if (not-caught-fail(v_1220) && success?(is-true(success?(1-proj-2-tuple(v_1220))))) then cipherstatepack(1-proj-2-tuple(v_1220),increment_nonce(2-proj-2-tuple(v_1217))) else fail-any) else fail-any)) in
        {696}let v_1222: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1214)) && (success?(3-proj-3-tuple(v_1216)) && success?(1-proj-3-tuple(v_1216)))) then (if (not-caught-fail(v_1217) && success?(is-true(success?(1-proj-2-tuple(v_1217))))) then (if not-caught-fail(v_1218) then (if (not-caught-fail(v_1219) && success?(is-true(success?(1-proj-3-tuple(v_1219))))) then (if not-caught-fail(v_1221) then (v_1221,3-proj-3-tuple(v_1219),1-proj-3-tuple(v_1219)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {697}let v_1223: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1222),2-proj-3-tuple(v_1216),3-proj-3-tuple(v_1216)))) in
        {698}let v_1224: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1214)) && success?(symmetricstatepack(1-proj-3-tuple(v_1222),2-proj-3-tuple(v_1216),3-proj-3-tuple(v_1216)))) then (if (not-caught-fail(v_1223) && success?(is-true(success?(1-proj-3-tuple(v_1223))))) then symmetricstatepack(1-proj-3-tuple(v_1223),2-proj-3-tuple(v_1223),hash(3-proj-3-tuple(v_1223),3-proj-3-tuple(v_1214))) else fail-any) else fail-any)) in
        {699}let v_1225: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1214)) && success?(1-proj-7-tuple(v_1213))) then (if (not-caught-fail(v_1216) && success?(is-true(success?(1-proj-3-tuple(v_1216))))) then (if (not-caught-fail(v_1222) && success?(is-true(success?(1-proj-3-tuple(v_1222))))) then (if not-caught-fail(v_1224) then (v_1224,2-proj-3-tuple(v_1222),3-proj-3-tuple(v_1222)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {700}let v_1226: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1225),2-proj-7-tuple(v_1213),3-proj-7-tuple(v_1213),4-proj-7-tuple(v_1213),5-proj-7-tuple(v_1213),6-proj-7-tuple(v_1213),7-proj-7-tuple(v_1213))) in
        {701}let (hs_1227: handshakestate,plaintext_e_1228: bitstring,valid_1229: bool) = (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-7-tuple(v_1213))))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-3-tuple(v_1214))))) then (if not-caught-fail(v_1215) then (if (not-caught-fail(v_1225) && success?(is-true(success?(1-proj-3-tuple(v_1225))))) then (if (v_1215 && 3-proj-3-tuple(v_1225)) then (if not-caught-fail(v_1226) then (v_1226,2-proj-3-tuple(v_1225),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {702}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1228);
        {703}event RecvEnd(valid_1229)
    ) | (
        {705}event LeakPsk(phase0,charlie,bob);
        {706}out(pub, key_psk(charlie,bob))
    ) | (
        {707}phase 1;
        {708}event LeakPsk(phase1,charlie,bob);
        {709}out(pub, key_psk(charlie,bob))
    ) | (
        0
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))); not attacker_p1(msg_a(alice,bob,sid_a)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 106 rules in the queue.
400 rules inserted. The rule base contains 384 rules. 73 rules in the queue.
600 rules inserted. The rule base contains 570 rules. 196 rules in the queue.
800 rules inserted. The rule base contains 728 rules. 121 rules in the queue.
1000 rules inserted. The rule base contains 887 rules. 179 rules in the queue.
1200 rules inserted. The rule base contains 1057 rules. 228 rules in the queue.
1400 rules inserted. The rule base contains 1198 rules. 262 rules in the queue.
1600 rules inserted. The rule base contains 1311 rules. 269 rules in the queue.
1800 rules inserted. The rule base contains 1406 rules. 239 rules in the queue.
2000 rules inserted. The rule base contains 1584 rules. 256 rules in the queue.
2200 rules inserted. The rule base contains 1717 rules. 279 rules in the queue.
2400 rules inserted. The rule base contains 1849 rules. 287 rules in the queue.
2600 rules inserted. The rule base contains 1943 rules. 310 rules in the queue.
2800 rules inserted. The rule base contains 2034 rules. 327 rules in the queue.
3000 rules inserted. The rule base contains 2148 rules. 329 rules in the queue.
3200 rules inserted. The rule base contains 2245 rules. 292 rules in the queue.
3400 rules inserted. The rule base contains 2359 rules. 262 rules in the queue.
3600 rules inserted. The rule base contains 2490 rules. 281 rules in the queue.
3800 rules inserted. The rule base contains 2614 rules. 312 rules in the queue.
4000 rules inserted. The rule base contains 2752 rules. 348 rules in the queue.
4200 rules inserted. The rule base contains 2874 rules. 374 rules in the queue.
4400 rules inserted. The rule base contains 3000 rules. 397 rules in the queue.
4600 rules inserted. The rule base contains 3112 rules. 372 rules in the queue.
4800 rules inserted. The rule base contains 3234 rules. 368 rules in the queue.
5000 rules inserted. The rule base contains 3348 rules. 344 rules in the queue.
5200 rules inserted. The rule base contains 3470 rules. 321 rules in the queue.
5400 rules inserted. The rule base contains 3610 rules. 301 rules in the queue.
5600 rules inserted. The rule base contains 3765 rules. 299 rules in the queue.
5800 rules inserted. The rule base contains 3923 rules. 320 rules in the queue.
6000 rules inserted. The rule base contains 4052 rules. 349 rules in the queue.
6200 rules inserted. The rule base contains 4164 rules. 375 rules in the queue.
6400 rules inserted. The rule base contains 4276 rules. 400 rules in the queue.
6600 rules inserted. The rule base contains 4408 rules. 410 rules in the queue.
6800 rules inserted. The rule base contains 4507 rules. 369 rules in the queue.
7000 rules inserted. The rule base contains 4597 rules. 294 rules in the queue.
7200 rules inserted. The rule base contains 4731 rules. 270 rules in the queue.
7400 rules inserted. The rule base contains 4797 rules. 234 rules in the queue.
7600 rules inserted. The rule base contains 4864 rules. 212 rules in the queue.
7800 rules inserted. The rule base contains 4950 rules. 154 rules in the queue.
8000 rules inserted. The rule base contains 5073 rules. 154 rules in the queue.
8200 rules inserted. The rule base contains 5182 rules. 106 rules in the queue.
8400 rules inserted. The rule base contains 5293 rules. 97 rules in the queue.
8600 rules inserted. The rule base contains 5383 rules. 74 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981183]),msg_a(alice,charlie,sid[!1 = @sid_56981183]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981184]),msg_a(alice,charlie,sid[!1 = @sid_56981183])))
Abbreviations:
sid_56981217 = sid[!1 = @sid_56981207]
sid_56981218 = sid[!1 = @sid_56981191]

1. The entry statestore(bob,alice,sid_56981217,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981217,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981218),msg_a(alice,charlie,sid_56981218)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),msg_a(alice,charlie,sid_56981218))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),msg_a(alice,charlie,sid_56981218)))).

4. The entry statestore(bob,alice,sid_56981217,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g))),msg_a(alice,charlie,sid_56981218))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981218),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981217),msg_a(alice,charlie,sid_56981218)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981217),msg_a(alice,charlie,sid_56981218))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981221]),msg_a(alice,bob,sid[!1 = @sid_56981221]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981222]),msg_a(alice,bob,sid[!1 = @sid_56981221])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981225]),msg_a(alice,charlie,sid[!1 = @sid_56981225]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981226]),msg_a(alice,charlie,sid[!1 = @sid_56981225])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981235]),msg_a(alice,bob,sid[!1 = @sid_56981235]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981236]),msg_a(alice,bob,sid[!1 = @sid_56981235])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981239]),msg_a(alice,charlie,sid[!1 = @sid_56981239]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981240]),msg_a(alice,charlie,sid[!1 = @sid_56981239])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981253]),msg_a(alice,charlie,sid[!1 = @sid_56981253]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981254]),msg_a(alice,charlie,sid[!1 = @sid_56981253])))
Abbreviations:
sid_56981287 = sid[!1 = @sid_56981277]
sid_56981288 = sid[!1 = @sid_56981261]

1. The entry statestore(bob,alice,sid_56981287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981288,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981288,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981288,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981288),msg_a(alice,charlie,sid_56981288)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),msg_a(alice,charlie,sid_56981288))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),msg_a(alice,charlie,sid_56981288)))).

4. The entry statestore(bob,alice,sid_56981287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g))),msg_a(alice,charlie,sid_56981288))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981288),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981287),msg_a(alice,charlie,sid_56981288)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981287),msg_a(alice,charlie,sid_56981288))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981295]),msg_a(alice,charlie,sid[!1 = @sid_56981295]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981296]),msg_a(alice,charlie,sid[!1 = @sid_56981295])))
Abbreviations:
sid_56981329 = sid[!1 = @sid_56981319]
sid_56981330 = sid[!1 = @sid_56981303]

1. The entry statestore(bob,alice,sid_56981329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981330,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981330,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981330,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981330),msg_a(alice,charlie,sid_56981330)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),msg_a(alice,charlie,sid_56981330))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),msg_a(alice,charlie,sid_56981330)))).

4. The entry statestore(bob,alice,sid_56981329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g))),msg_a(alice,charlie,sid_56981330))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981330),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981329),msg_a(alice,charlie,sid_56981330)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981329),msg_a(alice,charlie,sid_56981330))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981333]),msg_a(alice,bob,sid[!1 = @sid_56981333]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981333]))
Abbreviations:
sid_56981385 = sid[!1 = @sid_56981361]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981385,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981385,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981385,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981385),msg_a(alice,bob,sid_56981385)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981385),g))),msg_a(alice,bob,sid_56981385)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981385).
attacker(msg_a(alice,bob,sid_56981385)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981385).
So the attacker may know msg_a(alice,bob,sid_56981385) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981385)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981388]),msg_a(alice,bob,sid[!1 = @sid_56981388]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981388]))
Abbreviations:
sid_56981440 = sid[!1 = @sid_56981416]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981440,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981440,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981440,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981440),msg_a(alice,bob,sid_56981440)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981440),g))),msg_a(alice,bob,sid_56981440)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981440).
attacker(msg_a(alice,bob,sid_56981440)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981440).
So the attacker may know msg_a(alice,bob,sid_56981440) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981440)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981443]),msg_a(alice,bob,sid[!1 = @sid_56981443]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981443]))
Abbreviations:
sid_56981497 = sid[!1 = @sid_56981473]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981497,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981497,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981497,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981497),msg_a(alice,bob,sid_56981497)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981497),g))),msg_a(alice,bob,sid_56981497)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981497).
attacker(msg_a(alice,bob,sid_56981497)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981497).
So the attacker may know msg_a(alice,bob,sid_56981497) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981497)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(px,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981500]),msg_a(alice,bob,sid[!1 = @sid_56981500]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981500]))
Abbreviations:
sid_56981552 = sid[!1 = @sid_56981528]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981552,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981552,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981552,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981552),msg_a(alice,bob,sid_56981552)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981552),g))),msg_a(alice,bob,sid_56981552)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981552).
attacker(msg_a(alice,bob,sid_56981552)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981552).
So the attacker may know msg_a(alice,bob,sid_56981552) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981552)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981555]),msg_b(bob,charlie,sid[!1 = @sid_56981555]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981556]),msg_a(alice,bob,sid[!1 = @sid_56981556]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981556]),msg_b(bob,charlie,sid[!1 = @sid_56981555])))
Abbreviations:
sid_56981628 = sid[!1 = @sid_56981578]
sid_56981629 = sid[!1 = @sid_56981602]

1. The entry statestore(alice,bob,sid_56981628,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981628,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56981628,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981628),msg_a(alice,bob,sid_56981628)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56981628,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_e(alice,bob,sid_56981628)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56981628,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_e(alice,bob,sid_56981628)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56981629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56981629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56981628,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981628),msg_a(alice,bob,sid_56981628)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))).

5. The entry statestore(bob,charlie,sid_56981629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56981629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56981629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56981629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56981629),msg_b(bob,charlie,sid_56981629)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),dhexp_real(key_e(bob,charlie,sid_56981629),dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),msg_b(bob,charlie,sid_56981629))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),dhexp_real(key_e(bob,charlie,sid_56981629),dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),msg_b(bob,charlie,sid_56981629)))).

7. The entry statestore(alice,bob,sid_56981628,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981628),g)),key_e(alice,bob,sid_56981628)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),dhexp_real(key_e(bob,charlie,sid_56981629),dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981628),g))),msg_a(alice,bob,sid_56981628))),validkey(dhexp_real(key_e(bob,charlie,sid_56981629),g))),msg_b(bob,charlie,sid_56981629))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56981628),msg_b(bob,charlie,sid_56981629)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56981628),msg_b(bob,charlie,sid_56981629))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981632]),msg_b(bob,charlie,sid[!1 = @sid_56981632]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981633]),msg_a(alice,bob,sid[!1 = @sid_56981633]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981633]),msg_b(bob,charlie,sid[!1 = @sid_56981632])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981636]),msg_b(bob,alice,sid[!1 = @sid_56981636]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981637]),msg_a(alice,bob,sid[!1 = @sid_56981637]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981637]),msg_b(bob,alice,sid[!1 = @sid_56981636])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981646]),msg_b(bob,charlie,sid[!1 = @sid_56981646]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981647]),msg_a(alice,bob,sid[!1 = @sid_56981647]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981647]),msg_b(bob,charlie,sid[!1 = @sid_56981646])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981650]),msg_b(bob,alice,sid[!1 = @sid_56981650]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981651]),msg_a(alice,bob,sid[!1 = @sid_56981651]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981651]),msg_b(bob,alice,sid[!1 = @sid_56981650])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981660]),msg_b(bob,charlie,sid[!1 = @sid_56981660]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981661]),msg_a(alice,bob,sid[!1 = @sid_56981661]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981661]),msg_b(bob,charlie,sid[!1 = @sid_56981660])))
Abbreviations:
sid_56981733 = sid[!1 = @sid_56981683]
sid_56981734 = sid[!1 = @sid_56981707]

1. The entry statestore(alice,bob,sid_56981733,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981733,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56981733,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981733),msg_a(alice,bob,sid_56981733)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56981733,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_e(alice,bob,sid_56981733)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56981733,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_e(alice,bob,sid_56981733)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56981734,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56981734,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56981733,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981733),msg_a(alice,bob,sid_56981733)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))).

5. The entry statestore(bob,charlie,sid_56981734,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56981734,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56981734,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56981734,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56981734),msg_b(bob,charlie,sid_56981734)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),dhexp_real(key_e(bob,charlie,sid_56981734),dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),msg_b(bob,charlie,sid_56981734))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),dhexp_real(key_e(bob,charlie,sid_56981734),dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),msg_b(bob,charlie,sid_56981734)))).

7. The entry statestore(alice,bob,sid_56981733,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981733),g)),key_e(alice,bob,sid_56981733)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),dhexp_real(key_e(bob,charlie,sid_56981734),dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981733),g))),msg_a(alice,bob,sid_56981733))),validkey(dhexp_real(key_e(bob,charlie,sid_56981734),g))),msg_b(bob,charlie,sid_56981734))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56981733),msg_b(bob,charlie,sid_56981734)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56981733),msg_b(bob,charlie,sid_56981734))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981737]),msg_b(bob,charlie,sid[!1 = @sid_56981737]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981738]),msg_a(alice,bob,sid[!1 = @sid_56981738]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981738]),msg_b(bob,charlie,sid[!1 = @sid_56981737])))
Abbreviations:
sid_56981810 = sid[!1 = @sid_56981760]
sid_56981811 = sid[!1 = @sid_56981784]

1. The entry statestore(alice,bob,sid_56981810,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981810,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56981810,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981810),msg_a(alice,bob,sid_56981810)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56981810,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_e(alice,bob,sid_56981810)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56981810,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_e(alice,bob,sid_56981810)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56981811,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56981811,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56981810,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981810),msg_a(alice,bob,sid_56981810)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))).

5. The entry statestore(bob,charlie,sid_56981811,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56981811,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56981811,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56981811,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56981811),msg_b(bob,charlie,sid_56981811)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),dhexp_real(key_e(bob,charlie,sid_56981811),dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),msg_b(bob,charlie,sid_56981811))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),dhexp_real(key_e(bob,charlie,sid_56981811),dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),msg_b(bob,charlie,sid_56981811)))).

7. The entry statestore(alice,bob,sid_56981810,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981810),g)),key_e(alice,bob,sid_56981810)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),dhexp_real(key_e(bob,charlie,sid_56981811),dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981810),g))),msg_a(alice,bob,sid_56981810))),validkey(dhexp_real(key_e(bob,charlie,sid_56981811),g))),msg_b(bob,charlie,sid_56981811))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56981810),msg_b(bob,charlie,sid_56981811)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56981810),msg_b(bob,charlie,sid_56981811))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(px,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(px,alice)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981829]),msg_c(alice,bob,sid[!1 = @sid_56981829]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981830]),msg_b(bob,alice,sid[!1 = @sid_56981830]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981829]),msg_a(alice,bob,sid[!1 = @sid_56981829]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56981830]),msg_c(alice,bob,sid[!1 = @sid_56981829])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981838]),msg_c(alice,bob,sid[!1 = @sid_56981838]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981839]),msg_b(bob,alice,sid[!1 = @sid_56981839]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981838]),msg_a(alice,bob,sid[!1 = @sid_56981838]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56981839]),msg_c(alice,bob,sid[!1 = @sid_56981838])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981848]),msg_c(alice,bob,sid[!1 = @sid_56981848]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981849]),msg_b(bob,alice,sid[!1 = @sid_56981849]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981848]),msg_a(alice,bob,sid[!1 = @sid_56981848]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56981849]),msg_c(alice,bob,sid[!1 = @sid_56981848])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981858]),msg_c(alice,bob,sid[!1 = @sid_56981858]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981859]),msg_b(bob,alice,sid[!1 = @sid_56981859]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981858]),msg_a(alice,bob,sid[!1 = @sid_56981858]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56981859]),msg_c(alice,bob,sid[!1 = @sid_56981858])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981867]),msg_c(alice,bob,sid[!1 = @sid_56981867]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981868]),msg_b(bob,alice,sid[!1 = @sid_56981868]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981867]),msg_a(alice,bob,sid[!1 = @sid_56981867]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56981868]),msg_c(alice,bob,sid[!1 = @sid_56981867])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981892]),msg_d(bob,alice,sid[!1 = @sid_56981892]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981893]),msg_c(alice,bob,sid[!1 = @sid_56981893]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981892]),msg_b(bob,alice,sid[!1 = @sid_56981892]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981893]),msg_a(alice,bob,sid[!1 = @sid_56981893]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56981893]),msg_d(bob,alice,sid[!1 = @sid_56981892])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981901]),msg_d(bob,alice,sid[!1 = @sid_56981901]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981902]),msg_c(alice,bob,sid[!1 = @sid_56981902]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981901]),msg_b(bob,alice,sid[!1 = @sid_56981901]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981902]),msg_a(alice,bob,sid[!1 = @sid_56981902]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56981902]),msg_d(bob,alice,sid[!1 = @sid_56981901])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981911]),msg_d(bob,alice,sid[!1 = @sid_56981911]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981912]),msg_c(alice,bob,sid[!1 = @sid_56981912]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981911]),msg_b(bob,alice,sid[!1 = @sid_56981911]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981912]),msg_a(alice,bob,sid[!1 = @sid_56981912]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56981912]),msg_d(bob,alice,sid[!1 = @sid_56981911])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1339,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981921]),msg_d(bob,alice,sid[!1 = @sid_56981921]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981922]),msg_c(alice,bob,sid[!1 = @sid_56981922]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981921]),msg_b(bob,alice,sid[!1 = @sid_56981921]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981922]),msg_a(alice,bob,sid[!1 = @sid_56981922]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56981922]),msg_d(bob,alice,sid[!1 = @sid_56981921])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981930]),msg_d(bob,alice,sid[!1 = @sid_56981930]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981931]),msg_c(alice,bob,sid[!1 = @sid_56981931]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981930]),msg_b(bob,alice,sid[!1 = @sid_56981930]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981931]),msg_a(alice,bob,sid[!1 = @sid_56981931]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56981931]),msg_d(bob,alice,sid[!1 = @sid_56981930])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56981956]),msg_e(alice,bob,sid[!1 = @sid_56981956]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981957]),msg_d(bob,alice,sid[!1 = @sid_56981957]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981956]),msg_c(alice,bob,sid[!1 = @sid_56981956]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981957]),msg_b(bob,alice,sid[!1 = @sid_56981957]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981956]),msg_a(alice,bob,sid[!1 = @sid_56981956]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56981957]),msg_e(alice,bob,sid[!1 = @sid_56981956])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56981965]),msg_e(alice,bob,sid[!1 = @sid_56981965]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981966]),msg_d(bob,alice,sid[!1 = @sid_56981966]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981965]),msg_c(alice,bob,sid[!1 = @sid_56981965]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981966]),msg_b(bob,alice,sid[!1 = @sid_56981966]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981965]),msg_a(alice,bob,sid[!1 = @sid_56981965]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56981966]),msg_e(alice,bob,sid[!1 = @sid_56981965])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56981975]),msg_e(alice,bob,sid[!1 = @sid_56981975]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981976]),msg_d(bob,alice,sid[!1 = @sid_56981976]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981975]),msg_c(alice,bob,sid[!1 = @sid_56981975]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981976]),msg_b(bob,alice,sid[!1 = @sid_56981976]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981975]),msg_a(alice,bob,sid[!1 = @sid_56981975]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56981976]),msg_e(alice,bob,sid[!1 = @sid_56981975])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1339,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56981985]),msg_e(alice,bob,sid[!1 = @sid_56981985]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981986]),msg_d(bob,alice,sid[!1 = @sid_56981986]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981985]),msg_c(alice,bob,sid[!1 = @sid_56981985]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981986]),msg_b(bob,alice,sid[!1 = @sid_56981986]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981985]),msg_a(alice,bob,sid[!1 = @sid_56981985]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56981986]),msg_e(alice,bob,sid[!1 = @sid_56981985])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56981994]),msg_e(alice,bob,sid[!1 = @sid_56981994]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56981995]),msg_d(bob,alice,sid[!1 = @sid_56981995]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56981994]),msg_c(alice,bob,sid[!1 = @sid_56981994]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981995]),msg_b(bob,alice,sid[!1 = @sid_56981995]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981994]),msg_a(alice,bob,sid[!1 = @sid_56981994]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56981995]),msg_e(alice,bob,sid[!1 = @sid_56981994])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(py,alice,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982017]),msg_e(alice,bob,sid[!1 = @sid_56982017]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982018]),msg_d(bob,alice,sid[!1 = @sid_56982018]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982017]),msg_c(alice,bob,sid[!1 = @sid_56982017]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982018]),msg_b(bob,alice,sid[!1 = @sid_56982018]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982017]),msg_a(alice,bob,sid[!1 = @sid_56982017]))) -> end(RecvEnd(true))
Abbreviations:
sid_56982408 = sid[!1 = @sid_56982352]
sid_56982409 = sid[!1 = @sid_56982397]

1. The entry statestore(bob,alice,sid_56982409,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56982409,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,bob,sid_56982408,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56982408,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56982408,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982408),msg_a(alice,bob,sid_56982408)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))).

4. The entry statestore(bob,alice,sid_56982409,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_56982409,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {397}.
table(statestore(bob,alice,sid_56982409,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false)))).

5. The entry statestore(bob,alice,sid_56982409,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {434}.
The event SendMsg(bob,alice,stagepack_b(sid_56982409),msg_b(bob,alice,sid_56982409)) may be executed at {431}.
So the entry statestore(bob,alice,sid_56982409,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {432}.
table(statestore(bob,alice,sid_56982409,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false)))).

6. The entry statestore(alice,bob,sid_56982408,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982408),msg_a(alice,bob,sid_56982408)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56982408,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56982408,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,empty,key_psk(alice,bob),true)))).

7. The entry statestore(bob,alice,sid_56982409,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {434}.
The event SendMsg(bob,alice,stagepack_b(sid_56982409),msg_b(bob,alice,sid_56982409)) may be executed at {431}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))) may be sent on channel pub at output {433}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))).

8. The entry statestore(alice,bob,sid_56982408,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 6 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))) that may be sent on channel pub by 7 may be received at input {45}.
So the entry statestore(alice,bob,sid_56982408,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true))) may be inserted in a table at insert {78}.
table(statestore(alice,bob,sid_56982408,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true)))).

9. The entry statestore(alice,bob,sid_56982408,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {131}.
The event SendMsg(alice,bob,stagepack_c(sid_56982408),msg_c(alice,bob,sid_56982408)) may be executed at {128}.
So the message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))) may be sent on channel pub at output {130}.
mess(pub,concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))).

10. The entry statestore(bob,alice,sid_56982409,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {488}.
The message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))) that may be sent on channel pub by 9 may be received at input {435}.
So the entry statestore(bob,alice,sid_56982409,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {487}.
table(statestore(bob,alice,sid_56982409,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_56982409,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {508}.
The event SendMsg(bob,alice,stagepack_d(sid_56982409),msg_d(bob,alice,sid_56982409)) may be executed at {505}.
So the entry statestore(bob,alice,sid_56982409,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {506}.
table(statestore(bob,alice,sid_56982409,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_56982408,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {131}.
The event SendMsg(alice,bob,stagepack_c(sid_56982408),msg_c(alice,bob,sid_56982408)) may be executed at {128}.
So the entry statestore(alice,bob,sid_56982408,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {129}.
table(statestore(alice,bob,sid_56982408,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_56982409,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {508}.
The event SendMsg(bob,alice,stagepack_d(sid_56982409),msg_d(bob,alice,sid_56982409)) may be executed at {505}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409))) may be sent on channel pub at output {507}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))).

14. The entry statestore(alice,bob,sid_56982408,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 12 may be read at get {152}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409))) that may be sent on channel pub by 13 may be received at input {134}.
So the entry statestore(alice,bob,sid_56982408,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {151}.
table(statestore(alice,bob,sid_56982408,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_56982408,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_e(alice,bob,sid_56982408)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {171}.
The event SendMsg(alice,bob,stagepack_e(sid_56982408),msg_e(alice,bob,sid_56982408)) may be executed at {169}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409))),msg_e(alice,bob,sid_56982408))) may be sent on channel pub at output {170}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409))),msg_e(alice,bob,sid_56982408)))).

16. The entry statestore(bob,alice,sid_56982409,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982409),g)),key_e(bob,alice,sid_56982409)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {529}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(bob,alice,sid_56982409),dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),msg_a(alice,bob,sid_56982408))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),msg_b(bob,alice,sid_56982409))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982408),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_e(alice,bob,sid_56982408),dhexp_real(key_e(bob,alice,sid_56982409),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982409),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982408))),msg_d(bob,alice,sid_56982409))),msg_e(alice,bob,sid_56982408))) that may be sent on channel pub by 15 may be received at input {511}.
So event RecvEnd(true) may be executed at {528}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
